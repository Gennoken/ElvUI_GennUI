local E, L, V, P, G = unpack(ElvUI);
local GNUI = E:GetModule("GennUI");

function GNUI:LoadPlaterProfile()
PlaterDB = {
	["captured_spells"] = {
		[2649] = {
			["isChanneled"] = false,
			["source"] = "Hati",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[61684] = {
			["isChanneled"] = false,
			["source"] = "Sul'raka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[427670] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["isChanneled"] = false,
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40765,
		},
		[428401] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 213770,
		},
		[429037] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40825,
		},
		[427672] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["isChanneled"] = false,
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40765,
		},
		[115804] = {
			["type"] = "DEBUFF",
			["source"] = "smolpp",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[135029] = {
			["isChanneled"] = false,
			["source"] = "Water Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208441,
		},
		[428530] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 213770,
		},
		[427292] = {
			["isChanneled"] = false,
			["source"] = "Deep Murloc Drudge",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39960,
		},
		[427451] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Bubbling Ooze",
			["isChanneled"] = false,
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 213219,
		},
		[107428] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[428531] = {
			["encounterName"] = "Ozumat",
			["type"] = "BUFF",
			["source"] = "Sludge",
			["encounterID"] = 1047,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 213942,
		},
		[427293] = {
			["isChanneled"] = false,
			["source"] = "Deep Murloc Drudge",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39960,
		},
		[90361] = {
			["isChanneled"] = false,
			["source"] = "Sul'raka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[7870] = {
			["isChanneled"] = false,
			["source"] = "Betnys",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1863,
		},
		[392959] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[426659] = {
			["type"] = "BUFF",
			["source"] = "Vicious Snap Dragon",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 212681,
		},
		[101546] = {
			["isChanneled"] = false,
			["source"] = "Fire Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69791,
		},
		[429263] = {
			["encounterName"] = "Lady Naz'jar",
			["type"] = "DEBUFF",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 40586,
		},
		[427771] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40586,
		},
		[426660] = {
			["type"] = "DEBUFF",
			["source"] = "Vicious Snap Dragon",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 212681,
		},
		[58867] = {
			["isChanneled"] = false,
			["source"] = "Spirit Wolf",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 100820,
		},
		[76590] = {
			["isChanneled"] = false,
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40936,
		},
		[428407] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 213770,
		},
		[392983] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[192082] = {
			["type"] = "BUFF",
			["source"] = "Wind Rush Totem",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 97285,
		},
		[428594] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ozumat",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44566,
		},
		[100784] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[426662] = {
			["isChanneled"] = false,
			["source"] = "Vicious Snap Dragon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 212681,
		},
		[427456] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["isChanneled"] = false,
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40765,
		},
		[19483] = {
			["isChanneled"] = false,
			["source"] = "Infernal",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 89,
		},
		[394754] = {
			["isChanneled"] = false,
			["source"] = "Lindormi",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 197915,
		},
		[426663] = {
			["isChanneled"] = true,
			["source"] = "Vicious Snap Dragon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 212681,
		},
		[54216] = {
			["isChanneled"] = false,
			["source"] = "Reban",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[76813] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Oracle",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41096,
		},
		[429172] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40788,
		},
		[113656] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[24450] = {
			["isChanneled"] = false,
			["source"] = "Naroua",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[195321] = {
			["type"] = "BUFF",
			["source"] = "Earth Spirit",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 69792,
		},
		[429173] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40788,
		},
		[427554] = {
			["isChanneled"] = false,
			["source"] = "Commander Ulthok",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40765,
		},
		[115098] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[389541] = {
			["isChanneled"] = false,
			["source"] = "White Tiger Statue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 196581,
		},
		[224127] = {
			["type"] = "BUFF",
			["source"] = "Spirit Wolf",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 212489,
		},
		[422094] = {
			["isChanneled"] = false,
			["source"] = "Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 54983,
		},
		[138130] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[31707] = {
			["isChanneled"] = false,
			["source"] = "Water Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208441,
		},
		[429048] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40825,
		},
		[321538] = {
			["type"] = "DEBUFF",
			["source"] = "smolpp",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[428096] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Deep Sea Murloc",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 213607,
		},
		[426731] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Oracle",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41096,
		},
		[429176] = {
			["isChanneled"] = false,
			["source"] = "Gilgoblin Aquamage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40943,
		},
		[263854] = {
			["isChanneled"] = false,
			["source"] = "smolpp",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[422382] = {
			["isChanneled"] = false,
			["source"] = "Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 54983,
		},
		[429878] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40825,
		},
		[59638] = {
			["isChanneled"] = false,
			["source"] = "Mirror Image",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 31216,
		},
		[426796] = {
			["isChanneled"] = false,
			["source"] = "Faceless Seer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 212775,
		},
		[53271] = {
			["isChanneled"] = false,
			["source"] = "Reban",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[201754] = {
			["isChanneled"] = false,
			["source"] = "Sul'raka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[429051] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["isChanneled"] = true,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40825,
		},
		[427559] = {
			["encounterName"] = "Commander Ulthok",
			["type"] = "DEBUFF",
			["source"] = "Bubbling Ooze",
			["encounterID"] = 1044,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 213219,
		},
		[62305] = {
			["isChanneled"] = false,
			["source"] = "Reban",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[260249] = {
			["type"] = "BUFF",
			["source"] = "Reban",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[108446] = {
			["isChanneled"] = false,
			["source"] = "Shaajhom",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 417,
		},
		[386176] = {
			["type"] = "BUFF",
			["source"] = "Unknown",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[76807] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Invader",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39616,
		},
		[429021] = {
			["isChanneled"] = false,
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40936,
		},
		[428926] = {
			["isChanneled"] = false,
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40936,
		},
		[429046] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ozumat",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44566,
		},
		[428952] = {
			["encounterName"] = "Ozumat",
			["type"] = "DEBUFF",
			["source"] = "Neptulon",
			["encounterID"] = 1047,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 40792,
		},
		[428526] = {
			["encounterName"] = "Ozumat",
			["source"] = "Splotch",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 213806,
		},
		[426768] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Tempest Witch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40634,
		},
		[428672] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40792,
		},
		[76363] = {
			["type"] = "DEBUFF",
			["source"] = "Unstable Corruption",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 40923,
		},
		[427668] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["isChanneled"] = false,
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40765,
		},
		[428293] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["isChanneled"] = true,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40633,
		},
		[76133] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40792,
		},
		[428103] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Frost Witch",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44404,
		},
		[428403] = {
			["encounterName"] = "Ozumat",
			["type"] = "DEBUFF",
			["source"] = "Sludge",
			["encounterID"] = 1047,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 213942,
		},
		[388035] = {
			["type"] = "BUFF",
			["source"] = "Sul'raka",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[228649] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[428674] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40792,
		},
		[428263] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40586,
		},
		[224125] = {
			["type"] = "BUFF",
			["source"] = "Spirit Wolf",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 100820,
		},
		[429089] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ozumat",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44566,
		},
		[408801] = {
			["type"] = "BUFF",
			["source"] = "Incorporeal Being",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 204560,
		},
		[431368] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40792,
		},
		[426645] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Ravager",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 212673,
		},
		[428668] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40792,
		},
		[428868] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 213770,
		},
		[426741] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Sentinel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40577,
		},
		[224126] = {
			["type"] = "BUFF",
			["source"] = "Spirit Wolf",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 100820,
		},
		[428329] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Frost Witch",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44404,
		},
		[100780] = {
			["isChanneled"] = false,
			["source"] = "Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 69792,
		},
		[76634] = {
			["isChanneled"] = true,
			["source"] = "Tainted Sentry",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40925,
		},
		[428097] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Deep Sea Murloc",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 213607,
		},
		[427376] = {
			["isChanneled"] = false,
			["source"] = "Gilgoblin Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40935,
		},
		[427384] = {
			["isChanneled"] = false,
			["source"] = "Gilgoblin Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40935,
		},
		[81262] = {
			["isChanneled"] = false,
			["source"] = "Efflorescence",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 47649,
		},
		[16827] = {
			["isChanneled"] = false,
			["source"] = "Sul'raka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[423886] = {
			["type"] = "DEBUFF",
			["source"] = "Flame Rift",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 211039,
		},
		[408805] = {
			["isChanneled"] = false,
			["source"] = "Incorporeal Being",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 204560,
		},
		[118905] = {
			["isChanneled"] = false,
			["source"] = "Capacitor Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 61245,
		},
		[428542] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Sentinel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40577,
		},
		[75992] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Tempest Witch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40634,
		},
		[428291] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40633,
		},
		[426618] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Invader",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39616,
		},
		[418605] = {
			["isChanneled"] = false,
			["source"] = "Future Self",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208887,
		},
		[76516] = {
			["type"] = "DEBUFF",
			["source"] = "Gilgoblin Hunter",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 40935,
		},
		[428054] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40586,
		},
		[3600] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Earthbind Totem",
			["isChanneled"] = false,
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2630,
		},
		[426905] = {
			["isChanneled"] = false,
			["source"] = "Minion of Ghur'sha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 212778,
		},
		[426783] = {
			["isChanneled"] = true,
			["source"] = "Faceless Seer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 212775,
		},
		[428374] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["isChanneled"] = true,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40586,
		},
		[422090] = {
			["isChanneled"] = false,
			["source"] = "Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 54983,
		},
		[75683] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["isChanneled"] = true,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40586,
		},
		[426684] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Ravager",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 212673,
		},
		[428621] = {
			["encounterName"] = "Ozumat",
			["source"] = "Sludge",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 213942,
		},
		[428399] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 213770,
		},
		[24394] = {
			["type"] = "DEBUFF",
			["source"] = "Sul'raka",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[90328] = {
			["isChanneled"] = false,
			["source"] = "Sul'raka",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[426727] = {
			["type"] = "DEBUFF",
			["source"] = "Naz'jar Ravager",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 212673,
		},
	},
	["profileKeys"] = {
		["Dæthlørd - Stormscale"] = "Default",
		["Gennui - Outland"] = "Default",
		["Trolløsaurus - Stormscale"] = "Default",
		["Heîmdal - Stormscale"] = "Default",
		["Demïse - Stormscale"] = "Default",
		["Zattø - Stormscale"] = "Default",
		["Chabacrøw - Stormscale"] = "Default",
		["Ohhshift - Ravencrest"] = "Default",
		["Razorwing - Stormscale"] = "Default",
	},
	["captured_casts"] = {
		[427758] = {
			["source"] = "Envoy of Winter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209929,
		},
		[424176] = {
			["source"] = "Ancient Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210637,
		},
		[381701] = {
			["source"] = "Augmented Flood",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192457,
		},
		[383237] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Lava Elemental",
			["npcID"] = 187321,
		},
		[377608] = {
			["source"] = "Rimebound Subjugator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195837,
		},
		[378120] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Rock",
			["npcID"] = 192799,
		},
		[427760] = {
			["source"] = "Envoy of Winter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209929,
		},
		[424178] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sickened Growth",
			["npcID"] = 207926,
		},
		[377609] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cleff",
			["npcID"] = 194514,
		},
		[410873] = {
			["source"] = "Gust Soldier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45477,
		},
		[392451] = {
			["source"] = "Flame Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197985,
		},
		[369423] = {
			["source"] = "Skittering Crawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184303,
		},
		[104318] = {
			["npcID"] = 55659,
		},
		[377612] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[400641] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198998,
		},
		[372495] = {
			["source"] = "Ensnaring Current",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191328,
		},
		[426741] = {
			["source"] = "Naz'jar Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40577,
		},
		[417018] = {
			["source"] = "Alliance Conjuror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206351,
		},
		[387337] = {
			["source"] = "Primalist Earthrazer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203739,
		},
		[418554] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Banehollow",
			["npcID"] = 204243,
		},
		[374544] = {
			["source"] = "Fetid Rotsinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186226,
		},
		[375056] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[380174] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[200642] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadsoul Ruiner",
			["npcID"] = 95771,
		},
		[200898] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Inquisitor Tormentorum",
			["npcID"] = 96015,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[414974] = {
			["source"] = "Searing Rootguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210592,
		},
		[377105] = {
			["source"] = "Vault Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190510,
		},
		[76813] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Spiritmender",
			["npcID"] = 41096,
		},
		[418046] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203678,
		},
		[418558] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Banehollow",
			["npcID"] = 204243,
		},
		[201411] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadfire Imp",
			["npcID"] = 100527,
		},
		[418047] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203679,
		},
		[427771] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[118905] = {
			["source"] = "Capacitor Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61245,
		},
		[373526] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dizzying Flutterer",
			["npcID"] = 211020,
		},
		[400649] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198998,
		},
		[390926] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Barker",
			["npcID"] = 194515,
		},
		[396044] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188252,
		},
		[76686] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Obsidian Borer",
			["npcID"] = 40019,
		},
		[264525] = {
			["source"] = "Maddened Survivalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131850,
		},
		[375575] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Dragonspawn Flamebender",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191230,
		},
		[369946] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonhunter Igordan",
			["npcID"] = 191611,
		},
		[411910] = {
			["source"] = "Young Storm Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45919,
		},
		[191946] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Warlord Parjesh",
			["encounterID"] = 1810,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91784,
		},
		[47059] = {
			["source"] = "Stars' Rest Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 51797,
		},
		[388882] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[375065] = {
			["source"] = "Fetid Rotsinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186226,
		},
		[406282] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thorak Greenscale",
			["npcID"] = 205618,
		},
		[209602] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1870,
		},
		[417030] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Alliance Conjuror",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206351,
		},
		[76815] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Spiritmender",
			["npcID"] = 41096,
		},
		[410890] = {
			["source"] = "Infinite Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205259,
		},
		[375068] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Lava Tentacles",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190023,
		},
		[400144] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200584,
		},
		[382233] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Batak",
			["npcID"] = 193462,
		},
		[418056] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203679,
		},
		[406798] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sawscale Viper",
			["npcID"] = 208691,
		},
		[281420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Brinescale",
			["npcID"] = 129600,
		},
		[395029] = {
			["isChanneled"] = true,
			["source"] = "Melidrussa Chillworn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195119,
		},
		[428293] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40633,
		},
		[371489] = {
			["isChanneled"] = true,
			["source"] = "Primal Juggernaut",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188067,
		},
		[388377] = {
			["source"] = "Captured Raven",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191508,
		},
		[409359] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["encounterID"] = 2682,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199659,
		},
		[418059] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203679,
		},
		[404754] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Null Glimmer",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202971,
		},
		[411407] = {
			["source"] = "Time-Lost Waveshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205363,
		},
		[406802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sawscale Viper",
			["npcID"] = 208691,
		},
		[264024] = {
			["source"] = "Heartsbane Soulcharmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131812,
		},
		[374563] = {
			["source"] = "Dazzling Dragonfly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190362,
		},
		[414992] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invading Flamespeaker",
			["npcID"] = 206975,
		},
		[169179] = {
			["encounterName"] = "Yalnu",
			["source"] = "Yalnu",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83846,
		},
		[414993] = {
			["source"] = "Elder Cassaphine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206818,
		},
		[395035] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soulharvester Galtmaa",
			["npcID"] = 195927,
		},
		[212423] = {
			["source"] = "Risen Skulker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99541,
		},
		[374567] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[375079] = {
			["source"] = "Squallbringer Cyraz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190370,
		},
		[375591] = {
			["source"] = "Bubbling Sapling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191313,
		},
		[378150] = {
			["source"] = "Molten Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186825,
		},
		[388897] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Root Snapper",
			["npcID"] = 210106,
		},
		[75539] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["npcID"] = 39665,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1040,
		},
		[373034] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Mudrunner",
			["npcID"] = 186690,
		},
		[426768] = {
			["source"] = "Naz'jar Tempest Witch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40634,
		},
		[410904] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199000,
		},
		[403740] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["npcID"] = 201579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2683,
		},
		[265568] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Befouled Spirit",
			["npcID"] = 133685,
		},
		[403741] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[254901] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Atal'Shadra Bloodletter",
			["npcID"] = 122872,
		},
		[373549] = {
			["source"] = "Skittering Hoverfly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198420,
		},
		[382249] = {
			["source"] = "Trickclaw Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185528,
		},
		[225732] = {
			["source"] = "Lady Velandras Ravencrest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98538,
		},
		[405279] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198999,
		},
		[392486] = {
			["source"] = "Tempest Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198047,
		},
		[368434] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Karantun",
			["npcID"] = 193647,
		},
		[200913] = {
			["source"] = "Wyrmtongue Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98792,
		},
		[396069] = {
			["source"] = "Primal Earthshard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185647,
		},
		[215754] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spawn of Serpentrix",
			["npcID"] = 108655,
		},
		[264038] = {
			["source"] = "Coven Thornshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131666,
		},
		[393511] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cauldronbearer Blakor",
			["npcID"] = 186783,
		},
		[200658] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadsoul Ruiner",
			["npcID"] = 95771,
		},
		[400165] = {
			["source"] = "Infinite Twilight Magus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201223,
		},
		[374066] = {
			["source"] = "Primalist Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190345,
		},
		[422683] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oxis of Fire",
			["npcID"] = 210319,
		},
		[214988] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit of Vengeance",
			["npcID"] = 100364,
		},
		[239808] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eternal Soulguard",
			["npcID"] = 120191,
		},
		[211406] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Imp",
			["npcID"] = 104295,
		},
		[427290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galok Wingslicer",
			["npcID"] = 209047,
		},
		[413473] = {
			["source"] = "Temporal Deviation",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206063,
		},
		[422685] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oxis of Fire",
			["npcID"] = 210319,
		},
		[88080] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Whipping Wind",
			["npcID"] = 47238,
		},
		[373046] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188252,
		},
		[396075] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Water Elemental",
			["npcID"] = 203747,
		},
		[240577] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tidescale Combatant",
			["npcID"] = 120473,
		},
		[391470] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bowline",
			["npcID"] = 194451,
		},
		[369465] = {
			["source"] = "Earthen Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186420,
		},
		[239810] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eternal Soulguard",
			["npcID"] = 120191,
		},
		[240066] = {
			["encounterName"] = "Harjatan",
			["source"] = "Razorjaw Wavemender",
			["npcID"] = 116569,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2036,
		},
		[386866] = {
			["source"] = "Gorging Stagbeetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195709,
		},
		[396078] = {
			["source"] = "Summoned Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193288,
		},
		[374073] = {
			["source"] = "Primalist Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190345,
		},
		[372538] = {
			["source"] = "Lava Flare",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189470,
		},
		[395567] = {
			["source"] = "Gravlion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193654,
		},
		[260793] = {
			["encounterName"] = "Cragmaw the Infested",
			["source"] = "Cragmaw the Infested",
			["npcID"] = 131817,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2118,
		},
		[374586] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189478,
		},
		[373051] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Salamancer",
			["npcID"] = 186669,
		},
		[422691] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["npcID"] = 200927,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2824,
		},
		[89105] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lurking Tempest",
			["npcID"] = 45704,
		},
		[424227] = {
			["source"] = "Priestess of the Moon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211076,
		},
		[377658] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[384823] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189886,
		},
		[422693] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oxis of Fire",
			["npcID"] = 210319,
		},
		[388918] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[125056] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zuckerberg",
			["npcID"] = 165189,
		},
		[414506] = {
			["source"] = "Searing-Sun Crow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210298,
		},
		[419624] = {
			["source"] = "Whispering Behemoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207171,
		},
		[396084] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Water Elemental",
			["npcID"] = 203747,
		},
		[411437] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Siegemaster",
			["npcID"] = 198874,
		},
		[422696] = {
			["source"] = "Avius Flamebeak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210305,
		},
		[374080] = {
			["source"] = "Primalist Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190348,
		},
		[384827] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[391480] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Two-Eye",
			["npcID"] = 194522,
		},
		[102156] = {
			["encounterName"] = "Echo of Baine",
			["source"] = "Time-Twisted Seer",
			["encounterID"] = 1881,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54553,
		},
		[384316] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["npcID"] = 186615,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2636,
		},
		[411439] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Siegemaster",
			["npcID"] = 198874,
		},
		[250050] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["encounterID"] = 2087,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122968,
		},
		[195037] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Oracle",
			["npcID"] = 95861,
		},
		[80279] = {
			["source"] = "Stonecore Rift Conjurer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42691,
		},
		[413487] = {
			["source"] = "Temporal Fusion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206068,
		},
		[387388] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Knoll",
			["npcID"] = 194521,
		},
		[418605] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Future Self",
			["npcID"] = 208959,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2689,
		},
		[396600] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorger",
			["npcID"] = 192759,
		},
		[397112] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Proto-Dragon",
			["npcID"] = 189798,
		},
		[405812] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["npcID"] = 202375,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2689,
		},
		[265081] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chosen Blood Matron",
			["npcID"] = 131436,
		},
		[317792] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
		},
		[373573] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sprite Dreamer",
			["npcID"] = 207617,
		},
		[265594] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Umbra'rix",
			["npcID"] = 134717,
		},
		[266106] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Feral Bloodswarmer",
			["npcID"] = 133835,
		},
		[199389] = {
			["encounterName"] = "Dresaron",
			["source"] = "Dresaron",
			["npcID"] = 99200,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1838,
		},
		[419632] = {
			["isChanneled"] = true,
			["source"] = "Pendule",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208945,
		},
		[383298] = {
			["source"] = "Summoned Lava Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182815,
		},
		[391998] = {
			["source"] = "Erupting Magma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191917,
		},
		[382787] = {
			["source"] = "Disease Slasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187315,
		},
		[391999] = {
			["source"] = "Nokhud Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185445,
		},
		[193505] = {
			["source"] = "Vileshard Hulk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91000,
		},
		[411958] = {
			["source"] = "Iridikron's Creation",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205691,
		},
		[102158] = {
			["encounterName"] = "Echo of Baine",
			["source"] = "Time-Twisted Seer",
			["encounterID"] = 1881,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54553,
		},
		[382277] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Balara",
			["npcID"] = 193457,
		},
		[401212] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Trudging Devourer",
			["npcID"] = 201066,
		},
		[403771] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[389443] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Nullification Device",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196712,
		},
		[265088] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[382791] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193944,
		},
		[265089] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Devout Blood Priest",
			["npcID"] = 131492,
		},
		[372557] = {
			["source"] = "Scavenger Matriarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192525,
		},
		[387398] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crook",
			["npcID"] = 194445,
		},
		[406333] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[257732] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Enforcer",
			["npcID"] = 129602,
		},
		[389446] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Nullification Device",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196712,
		},
		[265091] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Devout Blood Priest",
			["npcID"] = 131492,
		},
		[372047] = {
			["source"] = "Defier Draghar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187897,
		},
		[390982] = {
			["source"] = "Forge-Keep Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192699,
		},
		[375630] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Drakonid Stormbringer",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191232,
		},
		[388424] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[390983] = {
			["source"] = "Qalashi Drakeflayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192341,
		},
		[260292] = {
			["encounterName"] = "Cragmaw the Infested",
			["source"] = "Cragmaw the Infested",
			["npcID"] = 131817,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2118,
		},
		[390984] = {
			["source"] = "Qalashi Rampager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186727,
		},
		[257478] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Mastiff",
			["npcID"] = 128551,
		},
		[233426] = {
			["encounterName"] = "Demonic Inquisition",
			["source"] = "Atrigan",
			["npcID"] = 116689,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2048,
		},
		[406851] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[390987] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Emberspark",
			["npcID"] = 208664,
		},
		[428345] = {
			["source"] = "Molten Scorpid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213696,
		},
		[383823] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Hornsounder",
			["npcID"] = 192796,
		},
		[170738] = {
			["source"] = "Undermage Kesalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85496,
		},
		[390988] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forge-Keep Sentinel",
			["npcID"] = 192700,
		},
		[385359] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[422717] = {
			["source"] = "Phebis of the Burning Sea",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210306,
		},
		[384336] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Plainstomper",
			["npcID"] = 191847,
		},
		[368984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Firebinder",
			["npcID"] = 186605,
		},
		[392013] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Walker",
			["npcID"] = 201063,
		},
		[406854] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malgosa Spellbinder",
			["npcID"] = 205620,
		},
		[403272] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[388944] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Flowbreaker",
			["npcID"] = 203748,
		},
		[406344] = {
			["source"] = "Zaqali Firecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200454,
		},
		[57046] = {
			["source"] = "Crazed Mana-Surge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26737,
		},
		[387410] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boss",
			["npcID"] = 194404,
		},
		[390481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uranto the Swift",
			["npcID"] = 191103,
		},
		[387411] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soulharvester Galtmaa",
			["npcID"] = 195927,
		},
		[199143] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Dantalionax",
			["encounterID"] = 1835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98970,
		},
		[414535] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198933,
		},
		[415047] = {
			["encounterName"] = "The Headless Horseman",
			["source"] = "Headless Horseman",
			["encounterID"] = 2725,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207438,
		},
		[373084] = {
			["source"] = "Irontorch Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189466,
		},
		[424771] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Harbinger of Incineration",
			["npcID"] = 210147,
		},
		[201959] = {
			["source"] = "Emberhusk Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113536,
		},
		[241108] = {
			["encounterName"] = "Harjatan",
			["source"] = "Tidescale Legionnaire",
			["npcID"] = 117123,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2036,
		},
		[425796] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Harbinger of Incineration",
			["npcID"] = 210147,
		},
		[371551] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Incinerator",
			["npcID"] = 195062,
		},
		[419144] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[373087] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189886,
		},
		[428868] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213770,
		},
		[427333] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rydra Scalegorger",
			["npcID"] = 209048,
		},
		[196587] = {
			["encounterName"] = "Amalgam of Souls",
			["source"] = "Amalgam of Souls",
			["encounterID"] = 1832,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98542,
		},
		[56919] = {
			["source"] = "Alliance Cleric",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26805,
		},
		[396629] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elusive Prime Salamanther",
			["npcID"] = 194062,
		},
		[385883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forge-Keep Custodian",
			["npcID"] = 192703,
		},
		[198379] = {
			["encounterName"] = "Archdruid Glaidalis",
			["source"] = "Archdruid Glaidalis",
			["npcID"] = 96512,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1836,
		},
		[419659] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Incendiary Runebear",
			["npcID"] = 209882,
		},
		[399701] = {
			["source"] = "Swooping Flayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199809,
		},
		[428360] = {
			["source"] = "Firelands Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210293,
		},
		[418637] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
		[382303] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184018,
		},
		[255952] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Skycap'n Kragg",
			["npcID"] = 126832,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[381280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uktulut Trainee",
			["npcID"] = 193203,
		},
		[81439] = {
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43391,
		},
		[375652] = {
			["source"] = "Arcane Tender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196115,
		},
		[398681] = {
			["source"] = "Frigid Binder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200623,
		},
		[264603] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["npcID"] = 131318,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2111,
		},
		[406358] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[384353] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[405316] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[427341] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rydra Scalegorger",
			["npcID"] = 209048,
		},
		[417011] = {
			["source"] = "Paladin of the Silver Hand",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208193,
		},
		[376073] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[418591] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["npcID"] = 208367,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[413013] = {
			["encounterName"] = "Chronikar",
			["source"] = "Chronikar",
			["encounterID"] = 2666,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198995,
		},
		[81440] = {
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43391,
		},
		[200637] = {
			["encounterName"] = "Dargrul the Underking",
			["source"] = "Dargrul",
			["encounterID"] = 1793,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91007,
		},
		[173563] = {
			["encounterName"] = "Yalnu",
			["source"] = "Feral Lasher",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86684,
		},
		[75683] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["npcID"] = 40586,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[384868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Longbow",
			["npcID"] = 192789,
		},
		[405850] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drazos Blackwing",
			["npcID"] = 205623,
		},
		[427245] = {
			["source"] = "Hapless Assistant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212981,
		},
		[376169] = {
			["source"] = "High Thaumaturge Fural",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189905,
		},
		[256979] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Eudora",
			["npcID"] = 126848,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[264608] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[383846] = {
			["source"] = "Swelling Fire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188667,
		},
		[394593] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Lancer",
			["npcID"] = 193198,
		},
		[17140] = {
			["source"] = "Consecrator Hennas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211231,
		},
		[405821] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[412505] = {
			["source"] = "Tyr's Vanguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205151,
		},
		[376171] = {
			["source"] = "Primalist Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190377,
		},
		[413529] = {
			["source"] = "Timestream Anomaly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199749,
		},
		[385383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forge-Keep Sentinel",
			["npcID"] = 192700,
		},
		[413427] = {
			["source"] = "Pendule",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206074,
		},
		[425300] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Zaqali Flamemancer",
			["npcID"] = 210170,
		},
		[401248] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198998,
		},
		[372562] = {
			["source"] = "Hyena Tender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192506,
		},
		[373614] = {
			["source"] = "Blazebound Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190034,
		},
		[398690] = {
			["source"] = "Glakis, Winter's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199502,
		},
		[409437] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voracious Magma Worm",
			["npcID"] = 203825,
		},
		[407902] = {
			["source"] = "Horde Farseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204206,
		},
		[418544] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Banehollow",
			["npcID"] = 204243,
		},
		[382795] = {
			["isChanneled"] = true,
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 193944,
		},
		[386921] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["npcID"] = 194367,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2637,
		},
		[385386] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overseer Stonetongue",
			["npcID"] = 201552,
		},
		[420102] = {
			["source"] = "Captain Garrick",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209057,
		},
		[398692] = {
			["source"] = "Glakis, Winter's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199502,
		},
		[81442] = {
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43391,
		},
		[242909] = {
			["encounterName"] = "Goroth",
			["source"] = "Infernal Chaosbringer",
			["npcID"] = 118022,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2032,
		},
		[434005] = {
			["source"] = "Gilnean Alchemist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213995,
		},
		[386411] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["npcID"] = 186339,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[75813] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Tempest Witch",
			["npcID"] = 40634,
		},
		[264510] = {
			["source"] = "Crazed Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131849,
		},
		[17843] = {
			["source"] = "Novice Timewalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189583,
		},
		[413023] = {
			["source"] = "Lerai, Timesworn Maiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205152,
		},
		[76325] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Flame Caller",
			["npcID"] = 39708,
		},
		[191735] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felsworn Myrmidon",
			["npcID"] = 98954,
		},
		[401258] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199659,
		},
		[413024] = {
			["source"] = "Valow, Timesworn Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201222,
		},
		[423771] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elisande",
			["npcID"] = 208668,
		},
		[385390] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forge-Keep Sentinel",
			["npcID"] = 192700,
		},
		[428889] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213770,
		},
		[423260] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[420647] = {
			["source"] = "Ashendir Hartwood",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211258,
		},
		[183548] = {
			["source"] = "Stoneclaw Grubmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102404,
		},
		[387950] = {
			["source"] = "Caldera Stomper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187919,
		},
		[394607] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Lancer",
			["npcID"] = 193198,
		},
		[374634] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189478,
		},
		[377204] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["encounterID"] = 2611,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189901,
		},
		[367481] = {
			["source"] = "Claw Fighter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185508,
		},
		[372087] = {
			["source"] = "Defier Draghar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187897,
		},
		[409445] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voracious Magma Worm",
			["npcID"] = 203825,
		},
		[389487] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Neela Firebane",
			["npcID"] = 193686,
		},
		[408422] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[374135] = {
			["source"] = "Craggy Stag",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191541,
		},
		[423775] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elder Boughweaver",
			["npcID"] = 211383,
		},
		[393582] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cindershard Igniter",
			["npcID"] = 198382,
		},
		[418658] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twinkle",
			["npcID"] = 204964,
		},
		[258777] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Oarsman",
			["npcID"] = 127111,
		},
		[382836] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["npcID"] = 186338,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[420671] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["npcID"] = 208365,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[367484] = {
			["source"] = "Claw Fighter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185508,
		},
		[423265] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[372565] = {
			["isChanneled"] = true,
			["source"] = "Flashfrost Earthshaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188067,
		},
		[393584] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horned Armoredon",
			["npcID"] = 194692,
		},
		[193018] = {
			["encounterName"] = "King Deepbeard",
			["source"] = "King Deepbeard",
			["npcID"] = 91797,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1812,
		},
		[411952] = {
			["source"] = "Infinite Timebender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205337,
		},
		[419684] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Incendiary Runebear",
			["npcID"] = 209882,
		},
		[371471] = {
			["isChanneled"] = true,
			["source"] = "Water Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187969,
		},
		[185854] = {
			["source"] = "Nightmare Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92792,
		},
		[376186] = {
			["source"] = "Overseer Lahar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189235,
		},
		[413544] = {
			["source"] = "Timestream Anomaly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199749,
		},
		[198904] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rotheart Dryad",
			["npcID"] = 99358,
		},
		[372553] = {
			["source"] = "Scavenger Matriarch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192812,
		},
		[372093] = {
			["source"] = "Furious Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196540,
		},
		[236518] = {
			["encounterName"] = "Sisters of the Moon",
			["source"] = "Priestess Lunaspyre",
			["npcID"] = 118518,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2050,
		},
		[196296] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Stormwake Hydra",
			["npcID"] = 91792,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1813,
		},
		[383864] = {
			["source"] = "Erupting Magma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191917,
		},
		[404846] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["npcID"] = 201579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2683,
		},
		[278444] = {
			["source"] = "Devouring Maggot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134024,
		},
		[407917] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[385912] = {
			["isChanneled"] = true,
			["source"] = "Wild Crystalspine",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192591,
		},
		[192985] = {
			["encounterName"] = "Wrath of Azshara",
			["source"] = "Wrath of Azshara",
			["npcID"] = 96028,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1814,
		},
		[207861] = {
			["source"] = "Genn Greymane",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 214073,
		},
		[418153] = {
			["source"] = "Cinderclaw Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207084,
		},
		[371584] = {
			["source"] = "Bottled Water Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192054,
		},
		[411433] = {
			["isChanneled"] = true,
			["source"] = "Frigid Binder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205384,
		},
		[419123] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[192706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ritualist Lesha",
			["npcID"] = 100248,
		},
		[410351] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199659,
		},
		[379134] = {
			["source"] = "Earthshaker Theurgist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189230,
		},
		[405361] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[200905] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Inquisitor Tormentorum",
			["npcID"] = 96015,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1850,
		},
		[185857] = {
			["source"] = "Scarlet Scout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210973,
		},
		[388474] = {
			["source"] = "Bloodstripe Great Ray",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210050,
		},
		[409456] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198933,
		},
		[205549] = {
			["encounterName"] = "Naraxas",
			["source"] = "Naraxas",
			["encounterID"] = 1792,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91005,
		},
		[385916] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["npcID"] = 186616,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2637,
		},
		[392569] = {
			["source"] = "Flamegullet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197697,
		},
		[202728] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadlord Mendacius",
			["npcID"] = 99649,
		},
		[278961] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Diseased Lasher",
			["npcID"] = 133870,
		},
		[38618] = {
			["encounterName"] = "Frozen Commander",
			["source"] = "Commander Stoutbeard",
			["encounterID"] = 519,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26796,
		},
		[408946] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Preserver",
			["npcID"] = 198870,
		},
		[9613] = {
			["source"] = "Darkfiend Defiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 93111,
		},
		[395558] = {
			["source"] = "Emblazion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193650,
		},
		[373636] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sutaan",
			["npcID"] = 188274,
		},
		[370054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmammoth Breaker",
			["npcID"] = 194912,
		},
		[226287] = {
			["source"] = "Vileshard Chunk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101438,
		},
		[369409] = {
			["source"] = "Earthen Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184130,
		},
		[383872] = {
			["source"] = "Swelling Fire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188667,
		},
		[210150] = {
			["encounterName"] = "Naraxas",
			["source"] = "Naraxas",
			["encounterID"] = 1792,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91005,
		},
		[405366] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[369411] = {
			["source"] = "Cavern Seeker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184301,
		},
		[377732] = {
			["source"] = "Refti Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184319,
		},
		[200700] = {
			["encounterName"] = "Dargrul the Underking",
			["source"] = "Dargrul",
			["encounterID"] = 1793,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91007,
		},
		[207865] = {
			["source"] = "Genn Greymane",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 214073,
		},
		[427858] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[428908] = {
			["source"] = "Meredy Huntswell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209059,
		},
		[413044] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grotesque Horror",
			["npcID"] = 138187,
		},
		[56860] = {
			["source"] = "Mage Hunter Initiate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26728,
		},
		[352520] = {
			["npcID"] = 178601,
		},
		[375687] = {
			["source"] = "Decay Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190426,
		},
		[423257] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Druid of the Moon",
			["npcID"] = 210686,
		},
		[384899] = {
			["source"] = "Rotbow Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186208,
		},
		[81576] = {
			["source"] = "Stonecore Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43537,
		},
		[367500] = {
			["source"] = "Bracken Warscourge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185529,
		},
		[345495] = {
			["npcID"] = 175519,
		},
		[421746] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Stonewarmer",
			["npcID"] = 210235,
		},
		[427343] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208445,
		},
		[396159] = {
			["source"] = "Lava Burster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186836,
		},
		[372107] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189232,
		},
		[197105] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Arcanist",
			["npcID"] = 97171,
		},
		[428400] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Burning Colossus",
			["encounterID"] = 2677,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207796,
		},
		[192003] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Blazing Hydra Spawn",
			["npcID"] = 97259,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1813,
		},
		[411001] = {
			["source"] = "Lurking Tempest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45704,
		},
		[3110] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Yazbis",
			["npcID"] = 416,
		},
		[428401] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213770,
		},
		[367503] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[411002] = {
			["source"] = "Cloud Prince",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45917,
		},
		[403326] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[201983] = {
			["source"] = "Emberhusk Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113537,
		},
		[373017] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189886,
		},
		[200154] = {
			["source"] = "Understone Demolisher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102253,
		},
		[413562] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Lurking Tempest",
			["encounterID"] = 1043,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204337,
		},
		[412027] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Infinite Keeper",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205212,
		},
		[381834] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186122,
		},
		[374158] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hecutta",
			["npcID"] = 207300,
		},
		[372623] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[416999] = {
			["source"] = "Paladin of the Silver Hand",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208193,
		},
		[76588] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Zealot",
			["npcID"] = 39990,
		},
		[406911] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sarek Cinderbreath",
			["npcID"] = 205619,
		},
		[377594] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[387465] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Altered Wymling",
			["npcID"] = 190776,
		},
		[422776] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2709,
		},
		[207815] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1868,
		},
		[266181] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Gorak Tul",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131864,
		},
		[407936] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[195801] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skrog Tidestomper",
			["npcID"] = 95939,
		},
		[421636] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[421754] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Moltenbinder",
			["npcID"] = 206477,
		},
		[407891] = {
			["source"] = "Horde Farseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204206,
		},
		[418684] = {
			["source"] = "Alliance Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208208,
		},
		[427384] = {
			["source"] = "Gilgoblin Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40935,
		},
		[236529] = {
			["encounterName"] = "Sisters of the Moon",
			["source"] = "Huntress Kasparian",
			["npcID"] = 118523,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2050,
		},
		[389515] = {
			["source"] = "Shiverweb Creeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185811,
		},
		[209628] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["npcID"] = 104218,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1870,
		},
		[76717] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defiled Earth Rager",
			["npcID"] = 40023,
		},
		[399086] = {
			["source"] = "Zaqali Firecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200454,
		},
		[424315] = {
			["source"] = "Druid of the Moon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211086,
		},
		[193502] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glayvianna Soulrender",
			["npcID"] = 98177,
		},
		[400777] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[118297] = {
			["source"] = "Primal Fire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61029,
		},
		[226296] = {
			["source"] = "Vileshard Hulk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91000,
		},
		[390897] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scalepiercer",
			["npcID"] = 186632,
		},
		[418531] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2709,
		},
		[427899] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 82682,
		},
		[196870] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Stormweaver",
			["npcID"] = 91783,
		},
		[256489] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[411012] = {
			["source"] = "Young Storm Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45919,
		},
		[376725] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["npcID"] = 190294,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[369049] = {
			["encounterName"] = "Emberon",
			["source"] = "Vault Keeper",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186107,
		},
		[76590] = {
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40936,
		},
		[224682] = {
			["source"] = "Scarlet Houndsmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211882,
		},
		[369563] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184581,
		},
		[369050] = {
			["source"] = "Primalist Worshipper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186759,
		},
		[420737] = {
			["source"] = "Flame-Warped Sister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207016,
		},
		[256922] = {
			["source"] = "Faceless Maiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131821,
		},
		[376727] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[372561] = {
			["source"] = "Qalashi Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189227,
		},
		[428926] = {
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40936,
		},
		[201141] = {
			["isChanneled"] = true,
			["source"] = "Wrathguard Bladelord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98810,
		},
		[75823] = {
			["encounterName"] = "Corla, Herald of Twilight",
			["source"] = "Corla, Herald of Twilight",
			["npcID"] = 39679,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1038,
		},
		[401642] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[209410] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Arcanist",
			["npcID"] = 104247,
		},
		[408969] = {
			["source"] = "Monstrous Mud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192519,
		},
		[169445] = {
			["source"] = "Twisted Abomination",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84767,
		},
		[427885] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[404364] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202789,
		},
		[76719] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Incendiary Spark",
			["npcID"] = 40021,
		},
		[423811] = {
			["source"] = "Overseer Chardryn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210912,
		},
		[397110] = {
			["source"] = "Air Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203743,
		},
		[383866] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Incarnated Wick",
			["npcID"] = 205407,
		},
		[412448] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deepflayer Broodmatron",
			["npcID"] = 200115,
		},
		[200185] = {
			["encounterName"] = "Shade of Xavius",
			["source"] = "Shade of Xavius",
			["npcID"] = 99192,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1839,
		},
		[193803] = {
			["isChanneled"] = true,
			["source"] = "Tarspitter Grub",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 92538,
		},
		[424836] = {
			["source"] = "Sylvanesh the Ascended",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207107,
		},
		[195046] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Oracle",
			["npcID"] = 95861,
		},
		[250096] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["encounterID"] = 2087,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122968,
		},
		[383385] = {
			["source"] = "Filth Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185656,
		},
		[367521] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[387960] = {
			["source"] = "Caldera Stomper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187919,
		},
		[274383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vermin Trapper",
			["npcID"] = 130404,
		},
		[254959] = {
			["source"] = "Dazar'ai Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122984,
		},
		[396180] = {
			["source"] = "Lava Burster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186836,
		},
		[369399] = {
			["source"] = "Earthen Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186420,
		},
		[418187] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Urctos",
			["npcID"] = 208363,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[416139] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199000,
		},
		[392087] = {
			["source"] = "Stubborn Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186834,
		},
		[408975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sarek Cinderbreath",
			["npcID"] = 205619,
		},
		[264150] = {
			["source"] = "Thornguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131858,
		},
		[405905] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Henri Snufftail",
			["npcID"] = 210075,
		},
		[371618] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Farseer",
			["npcID"] = 201117,
		},
		[382704] = {
			["source"] = "Grand Artificer Zeerak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201553,
		},
		[257736] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Stormcaller",
			["npcID"] = 126919,
		},
		[375201] = {
			["source"] = "Bright Gustfeather",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195002,
		},
		[201226] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodtainted Fury",
			["npcID"] = 100531,
		},
		[201139] = {
			["source"] = "Wrathguard Bladelord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98810,
		},
		[369061] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184422,
		},
		[420236] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[408466] = {
			["source"] = "Drogbar Crystal-collector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204407,
		},
		[421260] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[264153] = {
			["source"] = "Devouring Maggot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134024,
		},
		[389532] = {
			["source"] = "Giant Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194588,
		},
		[196563] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Warlord Parjesh",
			["npcID"] = 91784,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1810,
		},
		[396520] = {
			["source"] = "Stoneclaw Terror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194119,
		},
		[423820] = {
			["source"] = "Overseer Chardryn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210912,
		},
		[200205] = {
			["source"] = "Reaves",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101462,
		},
		[375716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Primalist Mage",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191206,
		},
		[384416] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[409492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Afflicted Soul",
			["npcID"] = 204773,
		},
		[411994] = {
			["isChanneled"] = true,
			["source"] = "Infinite Chronoweaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205384,
		},
		[410516] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199659,
		},
		[421672] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["encounterID"] = 2737,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208478,
		},
		[207881] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1869,
		},
		[410848] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Neltharion",
			["npcID"] = 201668,
		},
		[194064] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Foul Mother",
			["npcID"] = 98533,
		},
		[211464] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felbound Enforcer",
			["npcID"] = 104278,
		},
		[382883] = {
			["source"] = "Vile Rothexer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194241,
		},
		[430476] = {
			["source"] = "Hallowed Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211933,
		},
		[375719] = {
			["source"] = "Primalbound Water Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190739,
		},
		[192005] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Arcane Hydra Spawn",
			["npcID"] = 97260,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1813,
		},
		[415106] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["encounterID"] = 2668,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198997,
		},
		[424241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amirdrassil Sentinel",
			["npcID"] = 207782,
		},
		[422172] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["npcID"] = 200927,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2824,
		},
		[415125] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["encounterID"] = 2668,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 207638,
		},
		[413590] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Dazhak",
			["encounterID"] = 2668,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201788,
		},
		[390531] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uranto the Swift",
			["npcID"] = 191103,
		},
		[428823] = {
			["encounterName"] = "Yalnu",
			["source"] = "Yalnu",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83846,
		},
		[398750] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[384933] = {
			["isChanneled"] = true,
			["source"] = "Primalist Flowbreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188067,
		},
		[371956] = {
			["source"] = "Primal Terrasentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188011,
		},
		[86830] = {
			["source"] = "Millhouse Manastorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43391,
		},
		[273185] = {
			["source"] = "Shieldbearer of Zul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127879,
		},
		[374699] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[430292] = {
			["source"] = "Inquisitor Fairbell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211930,
		},
		[197137] = {
			["source"] = "Hatecoil Wrangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100216,
		},
		[378282] = {
			["source"] = "Qalashi Thaumaturge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192788,
		},
		[266209] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fallen Deathspeaker",
			["npcID"] = 134284,
		},
		[416152] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199000,
		},
		[385959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Titan Defense Matrix",
			["npcID"] = 193244,
		},
		[233983] = {
			["encounterName"] = "Demonic Inquisition",
			["source"] = "Belac",
			["npcID"] = 116691,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2048,
		},
		[79922] = {
			["source"] = "Stonecore Flayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42808,
		},
		[418200] = {
			["source"] = "Infinite Riftmage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208698,
		},
		[125212] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Initiate Oman",
			["npcID"] = 205818,
		},
		[191941] = {
			["encounterName"] = "Tirathon Saltheril",
			["source"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1815,
		},
		[392574] = {
			["source"] = "Tempest Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198047,
		},
		[369073] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Tundrafur",
			["npcID"] = 193231,
		},
		[388008] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["npcID"] = 186737,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2583,
		},
		[389474] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Flowbreaker",
			["npcID"] = 203748,
		},
		[387343] = {
			["source"] = "Bouldron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193644,
		},
		[418202] = {
			["source"] = "Infinite Riftmage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208698,
		},
		[375727] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[260852] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Solena",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131824,
		},
		[429973] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
		[381357] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Clearwater Ottuk",
			["npcID"] = 192854,
		},
		[408483] = {
			["source"] = "Zaqali Lavatongue",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208661,
		},
		[256405] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[401316] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[412063] = {
			["isChanneled"] = true,
			["source"] = "Epoch Ripper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205435,
		},
		[164887] = {
			["source"] = "Everbloom Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81820,
		},
		[372147] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Balara",
			["npcID"] = 193457,
		},
		[374706] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[81459] = {
			["source"] = "Stonecore Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43537,
		},
		[426905] = {
			["source"] = "Minion of Ghur'sha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212778,
		},
		[427417] = {
			["source"] = "Prophet of the Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207315,
		},
		[401318] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[405924] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Krono Sandtongue",
			["npcID"] = 205622,
		},
		[197141] = {
			["source"] = "Hatecoil Wrangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100216,
		},
		[427252] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
		[401319] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[412378] = {
			["source"] = "Infinite Timebender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205337,
		},
		[422813] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Ordan",
			["npcID"] = 208727,
		},
		[257784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Brinescale",
			["npcID"] = 129600,
		},
		[386991] = {
			["source"] = "Primal Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184869,
		},
		[395594] = {
			["source"] = "Zurgaz Corebreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193680,
		},
		[172578] = {
			["isChanneled"] = true,
			["source"] = "Melded Berserker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 86372,
		},
		[370104] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Protector",
			["npcID"] = 186600,
		},
		[405415] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[387504] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[422815] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Ordan",
			["npcID"] = 208727,
		},
		[164357] = {
			["encounterName"] = "Witherbark",
			["source"] = "Witherbark",
			["encounterID"] = 1746,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81522,
		},
		[393454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Battlehorn Pyrhus",
			["npcID"] = 190986,
		},
		[268202] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Deathtouched Slaver",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135552,
		},
		[196883] = {
			["source"] = "Lord Etheldrin Ravencrest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98521,
		},
		[389423] = {
			["source"] = "Thieving Conjurer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196388,
		},
		[214003] = {
			["source"] = "Risen Swordsman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102094,
		},
		[395694] = {
			["source"] = "Primalist Shocktrooper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199037,
		},
		[199663] = {
			["source"] = "Ghostly Councilor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98370,
		},
		[201902] = {
			["source"] = "Taintheart Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100539,
		},
		[425875] = {
			["isChanneled"] = true,
			["source"] = "Lingering Torment",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 209564,
		},
		[427376] = {
			["source"] = "Gilgoblin Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40935,
		},
		[197144] = {
			["source"] = "Hatecoil Wrangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100216,
		},
		[423734] = {
			["source"] = "Doomfiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210910,
		},
		[401325] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[407978] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Ahnzon",
			["encounterID"] = 2668,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201792,
		},
		[384365] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Plainstomper",
			["npcID"] = 191847,
		},
		[427727] = {
			["source"] = "Reefbreaker Moruud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209898,
		},
		[188907] = {
			["source"] = "Darkfiend Dreadbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92789,
		},
		[266225] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Gorak Tul",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131864,
		},
		[373692] = {
			["source"] = "Blazebound Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190034,
		},
		[425379] = {
			["source"] = "Flamespreader",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210294,
		},
		[189469] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit of Vengeance",
			["npcID"] = 100364,
		},
		[260551] = {
			["encounterName"] = "Soulbound Goliath",
			["source"] = "Soulbound Goliath",
			["encounterID"] = 2114,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131667,
		},
		[373693] = {
			["source"] = "Blazebound Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190034,
		},
		[235271] = {
			["encounterName"] = "Maiden of Vigilance",
			["source"] = "Maiden of Vigilance",
			["npcID"] = 118289,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2052,
		},
		[428963] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Burning Colossus",
			["npcID"] = 207796,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[387440] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ukhel Beastcaller",
			["npcID"] = 195878,
		},
		[199193] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Dantalionax",
			["encounterID"] = 1835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98970,
		},
		[425381] = {
			["isChanneled"] = true,
			["source"] = "Firelands Flameguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210290,
		},
		[399225] = {
			["isChanneled"] = true,
			["source"] = "Glakis, Winter's Wrath",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199502,
		},
		[423259] = {
			["source"] = "Wildfire Blazekin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210685,
		},
		[257739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blacktooth Scrapper",
			["npcID"] = 129529,
		},
		[241305] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Razorjaw Acolyte",
			["npcID"] = 117154,
		},
		[374719] = {
			["source"] = "Stonejaw Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188128,
		},
		[394037] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Walker",
			["npcID"] = 201063,
		},
		[397729] = {
			["source"] = "Glakis, Winter's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199502,
		},
		[198079] = {
			["encounterName"] = "Smashspite the Hateful",
			["source"] = "Smashspite the Hateful",
			["encounterID"] = 1834,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98949,
		},
		[406962] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Horde Axe Thrower",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203799,
		},
		[264694] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131863,
		},
		[200218] = {
			["source"] = "Reaves",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101462,
		},
		[409009] = {
			["source"] = "Summitshaper Lorac",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201522,
		},
		[428374] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[403891] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198999,
		},
		[404403] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[376257] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Tarasek Earthreaver",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191225,
		},
		[268278] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lady Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131545,
		},
		[391610] = {
			["source"] = "Gusting Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190401,
		},
		[404916] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198999,
		},
		[421292] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["npcID"] = 208365,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[167385] = {
			["npcID"] = 109096,
		},
		[389564] = {
			["source"] = "Huntergreen Salamanther",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212145,
		},
		[252923] = {
			["source"] = "Zanchuli Witch-Doctor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122969,
		},
		[413105] = {
			["encounterName"] = "Chronikar",
			["source"] = "Chronikar",
			["encounterID"] = 2666,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198995,
		},
		[374724] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[259531] = {
			["encounterName"] = "Vol'kaal",
			["source"] = "Reanimation Totem",
			["encounterID"] = 2085,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 125977,
		},
		[420782] = {
			["isChanneled"] = true,
			["source"] = "Zaqali Lavatongue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208661,
		},
		[425388] = {
			["source"] = "Flamewaker Infernoguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210295,
		},
		[378155] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186125,
		},
		[375237] = {
			["source"] = "Arcane Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190776,
		},
		[406886] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["encounterID"] = 2668,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198997,
		},
		[196078] = {
			["encounterName"] = "Amalgam of Souls",
			["source"] = "Amalgam of Souls",
			["encounterID"] = 1832,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98542,
		},
		[395196] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Proto-Dragon",
			["npcID"] = 185883,
		},
		[375011] = {
			["source"] = "Seismic Force",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192745,
		},
		[196127] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Mak'rana Siltwalker",
			["npcID"] = 91790,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1813,
		},
		[263961] = {
			["source"] = "Heartsbane Soulcharmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131812,
		},
		[389056] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[405433] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[381663] = {
			["source"] = "Apex Blazewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193291,
		},
		[416048] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2709,
		},
		[413621] = {
			["source"] = "Infinite Infiltrator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206214,
		},
		[392640] = {
			["source"] = "Thunderhead",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197698,
		},
		[214001] = {
			["source"] = "Risen Lancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102095,
		},
		[409016] = {
			["source"] = "Summitshaper Lorac",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201522,
		},
		[413622] = {
			["source"] = "Infinite Infiltrator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206214,
		},
		[395991] = {
			["source"] = "Awakened Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191129,
		},
		[391385] = {
			["source"] = "Summoned Lava Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182815,
		},
		[263959] = {
			["source"] = "Heartsbane Soulcharmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131812,
		},
		[372683] = {
			["source"] = "Infused Whelp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187894,
		},
		[169657] = {
			["source"] = "Twisted Abomination",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84767,
		},
		[406399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malgosa Spellbinder",
			["npcID"] = 205620,
		},
		[382410] = {
			["source"] = "Trickclaw Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185528,
		},
		[270334] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Portal Breacher",
			["npcID"] = 209821,
		},
		[389572] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Feral Umbraclaw",
			["npcID"] = 211401,
		},
		[426783] = {
			["source"] = "Faceless Seer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212775,
		},
		[204574] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["npcID"] = 103344,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1837,
		},
		[425397] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Fiery Treant",
			["npcID"] = 208459,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2731,
		},
		[401338] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sawscale Viper",
			["npcID"] = 208691,
		},
		[422837] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[396738] = {
			["source"] = "The Blue Gulper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195976,
		},
		[376780] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["encounterID"] = 2611,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189901,
		},
		[428468] = {
			["source"] = "Shuja Grimaxe",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 214390,
		},
		[408509] = {
			["source"] = "Portalkeeper Cimbra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202613,
		},
		[427444] = {
			["source"] = "Prophet of the Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207315,
		},
		[392406] = {
			["source"] = "Storm Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197982,
		},
		[387528] = {
			["source"] = "Igneous Stonemauler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210043,
		},
		[200105] = {
			["source"] = "Ghostly Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98368,
		},
		[253583] = {
			["isChanneled"] = true,
			["source"] = "Dazar'ai Augur",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 122972,
		},
		[374735] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[197546] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Illysanna Ravencrest",
			["encounterID"] = 1833,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98696,
		},
		[398276] = {
			["source"] = "Glakis, Winter's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199502,
		},
		[401214] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elder Honeypelt",
			["npcID"] = 202451,
		},
		[257756] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Buccaneer",
			["npcID"] = 129527,
		},
		[172567] = {
			["source"] = "Frostwall Grunt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81368,
		},
		[408970] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Preserver",
			["npcID"] = 198870,
		},
		[282110] = {
			["source"] = "Kaldorei Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210645,
		},
		[195109] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Hatecoil Stormweaver",
			["npcID"] = 91783,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1810,
		},
		[378832] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Bruiser",
			["npcID"] = 195058,
		},
		[428983] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Urctos",
			["npcID"] = 210518,
		},
		[82362] = {
			["encounterName"] = "Corla, Herald of Twilight",
			["source"] = "Evolved Twilight Zealot",
			["npcID"] = 50284,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1038,
		},
		[191527] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blade Dancer Illianna",
			["npcID"] = 96657,
		},
		[428472] = {
			["isChanneled"] = true,
			["source"] = "Violetwing Stagbeetle",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210295,
		},
		[268234] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Bile Oozeling",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 136541,
		},
		[78903] = {
			["encounterName"] = "Ozruk",
			["source"] = "Ozruk",
			["encounterID"] = 1058,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42188,
		},
		[82858] = {
			["source"] = "High Priestess Azil",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42333,
		},
		[375251] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181861,
		},
		[76047] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[241680] = {
			["encounterName"] = "Harjatan",
			["source"] = "Mistress Sassz'ine",
			["npcID"] = 121184,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2036,
		},
		[377661] = {
			["source"] = "Sparring Vorquin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195048,
		},
		[202019] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Dantalionax",
			["encounterID"] = 1835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98970,
		},
		[388046] = {
			["source"] = "Stinkbreath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187033,
		},
		[56934] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26731,
		},
		[79932] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nevo",
			["npcID"] = 81999,
		},
		[213688] = {
			["source"] = "Fel Lord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107024,
		},
		[383953] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bakar Companion",
			["npcID"] = 194255,
		},
		[413123] = {
			["source"] = "Forgemaster Kraglin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201625,
		},
		[391118] = {
			["source"] = "Scalebane Lieutenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191739,
		},
		[413131] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[419524] = {
			["source"] = "Loose Time",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209170,
		},
		[400842] = {
			["source"] = "Zaqali Keeneye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208660,
		},
		[384978] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["npcID"] = 186738,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2584,
		},
		[420289] = {
			["source"] = "Primalist Stormchaser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207276,
		},
		[421059] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[265741] = {
			["source"] = "Matron Bryndle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135329,
		},
		[207906] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1869,
		},
		[197418] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Illysanna Ravencrest",
			["encounterID"] = 1833,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98696,
		},
		[269843] = {
			["encounterName"] = "Unbound Abomination",
			["source"] = "Unbound Abomination",
			["npcID"] = 133007,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2123,
		},
		[423617] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elisande",
			["npcID"] = 208668,
		},
		[395222] = {
			["source"] = "Kain Firebrand",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193675,
		},
		[225562] = {
			["encounterName"] = "Dresaron",
			["source"] = "Bloodtainted Burster",
			["npcID"] = 100532,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1838,
		},
		[400333] = {
			["source"] = "Cliffkeeper Bouldani",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202612,
		},
		[427456] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40765,
		},
		[255371] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["encounterID"] = 2086,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122963,
		},
		[391634] = {
			["source"] = "Glacial Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190403,
		},
		[85692] = {
			["source"] = "Doomguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11859,
		},
		[421316] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
		[388817] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["npcID"] = 186616,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2637,
		},
		[413135] = {
			["source"] = "Forgemaster Kraglin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201625,
		},
		[400335] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200584,
		},
		[183088] = {
			["source"] = "Mightstone Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90997,
		},
		[372701] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[387427] = {
			["source"] = "Arcane Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190776,
		},
		[188587] = {
			["source"] = "Understone Demolisher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102253,
		},
		[427459] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83893,
		},
		[419790] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Druid of the Moon",
			["npcID"] = 210686,
		},
		[412868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Karokta",
			["npcID"] = 203625,
		},
		[86331] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Grand Vizier Ertan",
			["encounterID"] = 1043,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43878,
		},
		[252687] = {
			["source"] = "Shadowblade Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122970,
		},
		[268306] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lady Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131545,
		},
		[208165] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["npcID"] = 104217,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1869,
		},
		[196144] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mak'rana Siltwalker",
			["npcID"] = 91790,
		},
		[384474] = {
			["source"] = "Fathomless Lurker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209580,
		},
		[387039] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Commander",
			["npcID"] = 195761,
		},
		[393686] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Turboris",
			["npcID"] = 187886,
		},
		[193069] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felsworn Infester",
			["npcID"] = 96587,
		},
		[392663] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crazed Alpha",
			["npcID"] = 194224,
		},
		[272402] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cutwater Knife Juggler",
			["npcID"] = 129599,
		},
		[383452] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rugren",
			["npcID"] = 201563,
		},
		[259597] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Child of Gonk",
			["npcID"] = 127254,
		},
		[384476] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Longbow",
			["npcID"] = 192789,
		},
		[378847] = {
			["source"] = "Qalashi Spinecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192787,
		},
		[194611] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow Hunter",
			["npcID"] = 98926,
		},
		[386012] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormcaller Boroo",
			["npcID"] = 194317,
		},
		[392665] = {
			["source"] = "Time-Lost Thunderhide",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187258,
		},
		[197422] = {
			["encounterName"] = "Cordana Felsong",
			["source"] = "Cordana Felsong",
			["npcID"] = 95888,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1818,
		},
		[398770] = {
			["source"] = "Akiormi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200702,
		},
		[388060] = {
			["source"] = "Stinkbreath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187033,
		},
		[413136] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[387037] = {
			["source"] = "Primal Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195917,
		},
		[381408] = {
			["source"] = "Shiverweb Crawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192591,
		},
		[397514] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Warlord Kagni",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199659,
		},
		[421325] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
		[378850] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Elemental",
			["npcID"] = 190780,
		},
		[193585] = {
			["source"] = "Rockbound Trapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102232,
		},
		[373733] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[376292] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[266266] = {
			["encounterName"] = "Gorak Tul",
			["source"] = "Gorak Tul",
			["encounterID"] = 2117,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131864,
		},
		[404442] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200584,
		},
		[376723] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["npcID"] = 190294,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[260879] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["npcID"] = 131318,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2111,
		},
		[197797] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Risen Arcanist",
			["encounterID"] = 1833,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100486,
		},
		[369129] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Modak Flamespit",
			["npcID"] = 186509,
		},
		[278044] = {
			["source"] = "Enraged Velvet Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210185,
		},
		[382435] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[373972] = {
			["isChanneled"] = true,
			["source"] = "Primalist Flamedancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 190206,
		},
		[412117] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[420817] = {
			["source"] = "Priestess of the Moon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211076,
		},
		[372201] = {
			["source"] = "Qalashi Irontorch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189464,
		},
		[391136] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakonid Breaker",
			["npcID"] = 187240,
		},
		[420306] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamebound Sentinel",
			["npcID"] = 206900,
		},
		[192050] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Serpentrix",
			["npcID"] = 91808,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1813,
		},
		[372202] = {
			["isChanneled"] = true,
			["source"] = "Qalashi Irontorch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189464,
		},
		[374765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ravine Vulture",
			["npcID"] = 190943,
		},
		[198820] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Latosius",
			["encounterID"] = 1835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98970,
		},
		[387559] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[265759] = {
			["source"] = "Matron Bryndle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135329,
		},
		[401342] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sawscale Viper",
			["npcID"] = 208691,
		},
		[200099] = {
			["isChanneled"] = true,
			["source"] = "Ghostly Protector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98368,
		},
		[390115] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sarana",
			["npcID"] = 190161,
		},
		[265760] = {
			["source"] = "Matron Bryndle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135329,
		},
		[372719] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[382670] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["npcID"] = 186339,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[394440] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Huntmaster Yrgena",
			["npcID"] = 201538,
		},
		[413145] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[419798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Druid of the Moon",
			["npcID"] = 210686,
		},
		[383693] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Beastmaster",
			["npcID"] = 192794,
		},
		[385339] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["npcID"] = 186338,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[419287] = {
			["source"] = "Crenna Earth-Daughter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209072,
		},
		[188470] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Noxious Seedling",
			["npcID"] = 211410,
		},
		[408029] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Loszkeleth",
			["encounterID"] = 2668,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201790,
		},
		[373742] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[413147] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[259092] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Stormcaller",
			["npcID"] = 126919,
		},
		[263943] = {
			["source"] = "Heartsbane Runeweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131677,
		},
		[413151] = {
			["encounterName"] = "Grand Vizier Ertan",
			["source"] = "Grand Vizier Ertan",
			["encounterID"] = 1043,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43878,
		},
		[386028] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Thunderbeast",
			["npcID"] = 195696,
		},
		[387049] = {
			["source"] = "Bouldron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193644,
		},
		[56937] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26930,
		},
		[386026] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Squall",
			["npcID"] = 194895,
		},
		[385517] = {
			["source"] = "Rotbow Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187021,
		},
		[61326] = {
			["source"] = "Azure Scale-Binder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26735,
		},
		[424408] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bodwin",
			["npcID"] = 209153,
		},
		[31707] = {
			["source"] = "Water Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78116,
		},
		[396774] = {
			["source"] = "Cragsworn Conqueror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195839,
		},
		[421340] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Anvil",
			["npcID"] = 206478,
		},
		[196916] = {
			["source"] = "Lady Velandras Ravencrest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98538,
		},
		[80195] = {
			["source"] = "Stonecore Bruiser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42692,
		},
		[396775] = {
			["source"] = "Cragsworn Conqueror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195839,
		},
		[427992] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keeper of the Dream",
			["npcID"] = 210423,
		},
		[387564] = {
			["source"] = "Conjured Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196102,
		},
		[22907] = {
			["source"] = "Alliance Ranger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26802,
		},
		[253721] = {
			["isChanneled"] = true,
			["source"] = "Shieldbearer of Zul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 127879,
		},
		[401382] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Past Self",
			["npcID"] = 185800,
		},
		[412129] = {
			["source"] = "Lerai, Timesworn Maiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205152,
		},
		[405696] = {
			["encounterName"] = "Manifested Timeways",
			["source"] = "Manifested Timeways",
			["encounterID"] = 2667,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198996,
		},
		[56837] = {
			["source"] = "Mage Hunter Ascendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26727,
		},
		[401383] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[422090] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Treant",
			["npcID"] = 54983,
		},
		[425437] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Surging Lasher",
			["npcID"] = 210111,
		},
		[372151] = {
			["source"] = "Gutchewer Bear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186284,
		},
		[428004] = {
			["isChanneled"] = true,
			["source"] = "Keeper of the Dream",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210423,
		},
		[429021] = {
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40936,
		},
		[377844] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Rira Hackclaw",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186122,
		},
		[421343] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["npcID"] = 200927,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2824,
		},
		[392398] = {
			["source"] = "Primal Thundercloud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197509,
		},
		[395756] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Cauldron Keeper",
			["npcID"] = 186606,
		},
		[404456] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[396780] = {
			["source"] = "Rimebound Subjugator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195837,
		},
		[417737] = {
			["source"] = "Whispering Behemoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207171,
		},
		[56938] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26928,
		},
		[408551] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Walker",
			["npcID"] = 201063,
		},
		[386546] = {
			["source"] = "Arcane Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186741,
		},
		[427999] = {
			["encounterName"] = "Smolderon",
			["source"] = "Smolderon",
			["npcID"] = 200927,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2824,
		},
		[420746] = {
			["source"] = "Kaldorei Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207117,
		},
		[385419] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overseer Stonetongue",
			["npcID"] = 201552,
		},
		[212784] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Watchful Inquisitor",
			["npcID"] = 105715,
		},
		[417764] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Empowered Dreadstalker",
			["npcID"] = 208538,
		},
		[381430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Protector",
			["npcID"] = 186849,
		},
		[195129] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Crusher",
			["npcID"] = 91782,
		},
		[400877] = {
			["source"] = "Smoldering Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205045,
		},
		[376827] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[412136] = {
			["source"] = "Valow, Timesworn Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201222,
		},
		[200248] = {
			["source"] = "Risen Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98280,
		},
		[257458] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[372735] = {
			["source"] = "Flashfrost Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187969,
		},
		[414184] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198933,
		},
		[390979] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Titan Defense Matrix",
			["npcID"] = 193244,
		},
		[423396] = {
			["source"] = "Lethka",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208740,
		},
		[226347] = {
			["source"] = "Stoneclaw Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91332,
		},
		[420326] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flamebound Sentinel",
			["npcID"] = 206900,
		},
		[177731] = {
			["encounterName"] = "Witherbark",
			["source"] = "Enchanted Waters",
			["encounterID"] = 1746,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88862,
		},
		[372222] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["npcID"] = 186739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[87618] = {
			["encounterName"] = "Asaad",
			["source"] = "Asaad",
			["encounterID"] = 1042,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43875,
		},
		[395763] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Cauldron Keeper",
			["npcID"] = 186606,
		},
		[385531] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[372223] = {
			["source"] = "Qalashi Bonetender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189265,
		},
		[376829] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[377341] = {
			["source"] = "Aqua Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190407,
		},
		[84037] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["npcID"] = 40792,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[388374] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elusive Deepstrider",
			["npcID"] = 204833,
		},
		[407535] = {
			["source"] = "Horde Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203861,
		},
		[264757] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["npcID"] = 131318,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2111,
		},
		[398324] = {
			["isChanneled"] = true,
			["source"] = "Winter's Aegis",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200399,
		},
		[372225] = {
			["source"] = "Qalashi Bonesplitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189467,
		},
		[193597] = {
			["encounterName"] = "Lady Hatecoil",
			["source"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1811,
		},
		[375296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Bruiser",
			["npcID"] = 195058,
		},
		[204344] = {
			["source"] = "Blacktalon Assassin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191955,
		},
		[372226] = {
			["source"] = "Qalashi Bonetender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189265,
		},
		[198715] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Val'kyr Battlemaiden",
			["npcID"] = 100876,
		},
		[381438] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tormented Steam",
			["npcID"] = 188696,
		},
		[20801] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imp Minion",
			["npcID"] = 12922,
		},
		[421355] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Anvil",
			["npcID"] = 206478,
		},
		[427498] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Life Warden Gola",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83892,
		},
		[369157] = {
			["source"] = "Primal Tarasek",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188372,
		},
		[196157] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Shadowmoon Technician",
			["npcID"] = 99645,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[415215] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Alliance Archer",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206352,
		},
		[405492] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[422699] = {
			["source"] = "Phebis of the Burning Sea",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210306,
		},
		[406516] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[260894] = {
			["encounterName"] = "Elder Leaxa",
			["source"] = "Elder Leaxa",
			["npcID"] = 131318,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2111,
		},
		[409473] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voracious Magma Worm",
			["npcID"] = 203825,
		},
		[420334] = {
			["source"] = "Keeper Adranas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209931,
		},
		[420846] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["npcID"] = 206172,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2708,
		},
		[239401] = {
			["encounterName"] = "Demonic Inquisition",
			["source"] = "Belac",
			["npcID"] = 116691,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2048,
		},
		[385024] = {
			["source"] = "Salty Salamander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188027,
		},
		[376049] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184125,
		},
		[374789] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[198723] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rotheart Dryad",
			["npcID"] = 99358,
		},
		[372743] = {
			["isChanneled"] = true,
			["source"] = "Flashfrost Chillweaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188067,
		},
		[387067] = {
			["source"] = "Arcane Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186740,
		},
		[404472] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[409271] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199703,
		},
		[369674] = {
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184022,
		},
		[405375] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[429037] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40825,
		},
		[425455] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Surging Lasher",
			["npcID"] = 210111,
		},
		[407544] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[428526] = {
			["encounterName"] = "Ozumat",
			["source"] = "Splotch",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213806,
		},
		[369675] = {
			["source"] = "Stonevault Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184022,
		},
		[385029] = {
			["encounterName"] = "Gutshot",
			["source"] = "Fleshripper Vulture",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186246,
		},
		[265540] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fetid Maggot",
			["npcID"] = 130909,
		},
		[258338] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Raoul",
			["npcID"] = 126847,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[369865] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonhunter Igordan",
			["npcID"] = 191611,
		},
		[423410] = {
			["source"] = "Isaqa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209919,
		},
		[197696] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Illysanna Ravencrest",
			["encounterID"] = 1833,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98696,
		},
		[257315] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Irontide Grenadier",
			["npcID"] = 129758,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[369677] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Olaf",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184580,
		},
		[384961] = {
			["source"] = "Rotbow Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186208,
		},
		[425970] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verdant Boughwalker",
			["npcID"] = 213576,
		},
		[200768] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crazed Razorbeak",
			["npcID"] = 95766,
		},
		[385036] = {
			["source"] = "Primalist Galesinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190373,
		},
		[88308] = {
			["encounterName"] = "Altairus",
			["source"] = "Altairus",
			["encounterID"] = 1041,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43873,
		},
		[87622] = {
			["encounterName"] = "Asaad",
			["source"] = "Asaad",
			["encounterID"] = 1042,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43875,
		},
		[428530] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ink of Ozumat",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213770,
		},
		[200256] = {
			["source"] = "Arcane Minion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101549,
		},
		[203163] = {
			["source"] = "Felspite Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102788,
		},
		[374797] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Divebeak Ohuna",
			["npcID"] = 189373,
		},
		[387571] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[390150] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmeater",
			["npcID"] = 186612,
		},
		[382474] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[411644] = {
			["source"] = "Time-Lost Tidehunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205365,
		},
		[412156] = {
			["source"] = "Time-Lost Aerobot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205723,
		},
		[398339] = {
			["isChanneled"] = true,
			["source"] = "Seismodor, Earth's Wrath",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199664,
		},
		[407039] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Sundered Edgelord",
			["encounterID"] = 2684,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203812,
		},
		[428023] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keeper of the Dream",
			["npcID"] = 210423,
		},
		[391958] = {
			["source"] = "Cloying Gale",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198126,
		},
		[193093] = {
			["encounterName"] = "King Deepbeard",
			["source"] = "King Deepbeard",
			["npcID"] = 91797,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1812,
		},
		[427510] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Dulhu",
			["encounterID"] = 1757,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 83894,
		},
		[407552] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[379406] = {
			["source"] = "Qalashi Lavabearer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189472,
		},
		[408576] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[384524] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[387083] = {
			["source"] = "Time-Lost Briarback",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187264,
		},
		[420347] = {
			["source"] = "Kaldorei Archdruid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211066,
		},
		[256551] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Sawtooth Shark",
			["npcID"] = 129359,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[372730] = {
			["source"] = "Primal Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188244,
		},
		[384493] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shikaar Hunter",
			["npcID"] = 184657,
		},
		[387596] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Mystic",
			["npcID"] = 195877,
		},
		[410625] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201754,
		},
		[371984] = {
			["source"] = "Flashfrost Chillweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188067,
		},
		[424646] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flametouched Enforcer",
			["npcID"] = 210150,
		},
		[281329] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Jolly",
			["npcID"] = 126845,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[89415] = {
			["encounterName"] = "The Headless Horseman",
			["source"] = "Ghost Iron Dragonling",
			["encounterID"] = 2725,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 57783,
		},
		[413872] = {
			["source"] = "Meredy Huntswell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209059,
		},
		[416256] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron's Creation",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204918,
		},
		[385551] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[386063] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["npcID"] = 186338,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[419327] = {
			["source"] = "Timeline Marauder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199748,
		},
		[57047] = {
			["source"] = "Crazed Mana-Surge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26737,
		},
		[391050] = {
			["source"] = "High Channeler Ryvati",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197535,
		},
		[429051] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40825,
		},
		[409093] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["npcID"] = 201579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2683,
		},
		[212031] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Bound Energy",
			["npcID"] = 105705,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1868,
		},
		[385553] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Stormseeker Acolyte",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194990,
		},
		[200261] = {
			["source"] = "Soul-Torn Champion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98243,
		},
		[204611] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["npcID"] = 103344,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1837,
		},
		[272457] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Sporecaller Zancha",
			["npcID"] = 131383,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2112,
		},
		[401810] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[403978] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["npcID"] = 202375,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2689,
		},
		[32637] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Doomwalker",
			["npcID"] = 167749,
		},
		[375094] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Swift Hornstrider",
			["npcID"] = 188089,
		},
		[428542] = {
			["source"] = "Naz'jar Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40577,
		},
		[417481] = {
			["source"] = "Timeline Marauder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199748,
		},
		[396814] = {
			["source"] = "Rimebound Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195836,
		},
		[387091] = {
			["source"] = "Time-Lost Sunseeker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187239,
		},
		[235968] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Ghastly Bonewarden",
			["npcID"] = 118728,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2054,
		},
		[405431] = {
			["encounterName"] = "Manifested Timeways",
			["source"] = "Manifested Timeways",
			["encounterID"] = 2667,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198996,
		},
		[401421] = {
			["encounterName"] = "Chronikar",
			["source"] = "Chronikar",
			["encounterID"] = 2666,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198995,
		},
		[274507] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilge Rat Swabby",
			["npcID"] = 129526,
		},
		[426663] = {
			["isChanneled"] = true,
			["source"] = "Vicious Snap Dragon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 212681,
		},
		[375834] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[47731] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["encounterID"] = 2010,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26929,
		},
		[385046] = {
			["source"] = "Gutstabber",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197857,
		},
		[385558] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[57091] = {
			["encounterName"] = "Keristrasza",
			["source"] = "Keristrasza",
			["encounterID"] = 2011,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26723,
		},
		[37624] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadlord Defiler",
			["npcID"] = 41471,
		},
		[332500] = {
			["source"] = "Fathomless Lurker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209580,
		},
		[416264] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199000,
		},
		[424615] = {
			["source"] = "Elder Cassaphine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206818,
		},
		[427694] = {
			["source"] = "Reefbreaker Moruud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209898,
		},
		[409612] = {
			["source"] = "Whisper in the Dark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203806,
		},
		[426500] = {
			["source"] = "Gnarlroot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81984,
		},
		[386745] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormbrand Ko'mal",
			["npcID"] = 206684,
		},
		[260907] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Solena",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131824,
		},
		[395284] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rugren",
			["npcID"] = 201563,
		},
		[183633] = {
			["source"] = "Rockbound Pelter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91008,
		},
		[373279] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thing From Beyond",
			["npcID"] = 189988,
		},
		[378397] = {
			["source"] = "Primal Earth Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187322,
		},
		[389947] = {
			["source"] = "Warmonger Kharad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190932,
		},
		[375327] = {
			["source"] = "Subterranean Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190404,
		},
		[209477] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mana Wyrm",
			["npcID"] = 105703,
		},
		[75543] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["npcID"] = 39665,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1040,
		},
		[372474] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ranger Bolor",
			["npcID"] = 188782,
		},
		[378818] = {
			["source"] = "Qalashi Thaumaturge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192788,
		},
		[385757] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mender Eskros",
			["npcID"] = 195303,
		},
		[9734] = {
			["source"] = "Scarlet Purifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210969,
		},
		[421898] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[13860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadlord Defiler",
			["npcID"] = 41471,
		},
		[388635] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Volatile Spark",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194999,
		},
		[370212] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Shieldcracker",
			["npcID"] = 186609,
		},
		[376865] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[191823] = {
			["encounterName"] = "Tirathon Saltheril",
			["source"] = "Tirathon Saltheril",
			["npcID"] = 95885,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1815,
		},
		[317791] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
		},
		[423607] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elisande",
			["npcID"] = 208668,
		},
		[272469] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Abyssal Reach",
			["npcID"] = 138538,
		},
		[387613] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ukhel Corruptor",
			["npcID"] = 195842,
		},
		[396313] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Stormcaller",
			["npcID"] = 185147,
		},
		[396825] = {
			["source"] = "Rimebound Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195836,
		},
		[425995] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keeper of the Dream",
			["npcID"] = 210423,
		},
		[165213] = {
			["source"] = "Everbloom Cultivator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81985,
		},
		[369703] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184018,
		},
		[419343] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["encounterID"] = 2731,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 208445,
		},
		[425492] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[422053] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Tainted Lasher",
			["npcID"] = 210231,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[396315] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Stormcaller",
			["npcID"] = 185147,
		},
		[392733] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dewdrop Tortoise",
			["npcID"] = 211145,
		},
		[265168] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Rummy Mancomb",
			["npcID"] = 133219,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[369193] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Mender",
			["npcID"] = 186602,
		},
		[396316] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Huntmaster",
			["npcID"] = 185353,
		},
		[387122] = {
			["source"] = "Arcane Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186740,
		},
		[374823] = {
			["source"] = "Squallbringer Cyraz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190370,
		},
		[407069] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[420881] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Ashwarden",
			["npcID"] = 208659,
		},
		[415769] = {
			["source"] = "Coalesced Time",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206140,
		},
		[408605] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Devastator",
			["npcID"] = 198869,
		},
		[373947] = {
			["source"] = "Skaara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192949,
		},
		[415770] = {
			["source"] = "Coalesced Time",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206140,
		},
		[387127] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Thunderbeast",
			["npcID"] = 195696,
		},
		[428047] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verlann Timbercrush",
			["npcID"] = 207554,
		},
		[377384] = {
			["source"] = "Aqua Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190407,
		},
		[390834] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sarana",
			["npcID"] = 190161,
		},
		[388643] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[204885] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twinkle",
			["npcID"] = 204964,
		},
		[369197] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Firebinder",
			["npcID"] = 186599,
		},
		[373803] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Infused Whelp",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189893,
		},
		[409635] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198933,
		},
		[386096] = {
			["source"] = "Screechflight Witherer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183954,
		},
		[391726] = {
			["source"] = "Thunderhead",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197698,
		},
		[22883] = {
			["source"] = "Novice Timewalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189583,
		},
		[392239] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunhide Stomphoof",
			["npcID"] = 190953,
		},
		[385063] = {
			["source"] = "Primalist Cinderweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190207,
		},
		[377411] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mature Slyvern",
			["npcID"] = 192169,
		},
		[200084] = {
			["source"] = "Ghostly Retainer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98366,
		},
		[405022] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["npcID"] = 201754,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2685,
		},
		[200784] = {
			["source"] = "Wyrmtongue Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98792,
		},
		[395811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Soldier",
			["npcID"] = 186607,
		},
		[377900] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Scavenger",
			["npcID"] = 191833,
		},
		[389804] = {
			["source"] = "Unstable Curator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187154,
		},
		[385065] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[253239] = {
			["source"] = "Dazar'ai Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122971,
		},
		[412700] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Dreamcrusher",
			["npcID"] = 211057,
		},
		[370225] = {
			["source"] = "Shrieking Whelp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187159,
		},
		[423459] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["npcID"] = 209800,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2708,
		},
		[385578] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["npcID"] = 186739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[209485] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Manifestation",
			["npcID"] = 105704,
		},
		[387125] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Thunderbeast",
			["npcID"] = 195696,
		},
		[428054] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[116] = {
			["npcID"] = 188027,
		},
		[386107] = {
			["source"] = "Screechflight Hexclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183995,
		},
		[421402] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Pyremancer",
			["npcID"] = 209963,
		},
		[415773] = {
			["source"] = "Interval",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206065,
		},
		[407207] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[201298] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodtainted Burster",
			["npcID"] = 100532,
		},
		[405042] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Thadrion",
			["npcID"] = 200913,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[396856] = {
			["source"] = "Firava the Rekindler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195915,
		},
		[395816] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Shieldcracker",
			["npcID"] = 186609,
		},
		[398403] = {
			["source"] = "Furious Earth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200431,
		},
		[209495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[255041] = {
			["source"] = "Feasting Skyscreamer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128434,
		},
		[391723] = {
			["source"] = "Flamegullet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197697,
		},
		[418464] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Empowered Felguard",
			["npcID"] = 208542,
		},
		[202075] = {
			["isChanneled"] = true,
			["source"] = "Burning Geode",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 101437,
		},
		[164965] = {
			["source"] = "Everbloom Naturalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81819,
		},
		[375348] = {
			["source"] = "Gusting Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190401,
		},
		[396330] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Sentry",
			["npcID"] = 185357,
		},
		[394795] = {
			["source"] = "Grizzlerock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193652,
		},
		[377923] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Spark",
			["npcID"] = 186624,
		},
		[426524] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Fiery Treant",
			["npcID"] = 208459,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
		[420895] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[378420] = {
			["source"] = "Cracking Sediment",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212820,
		},
		[386223] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Stormshield",
			["npcID"] = 194896,
		},
		[197974] = {
			["encounterName"] = "Ilysanna Ravencrest",
			["source"] = "Soul-torn Vanguard",
			["npcID"] = 100485,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1833,
		},
		[408614] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Devastator",
			["npcID"] = 198869,
		},
		[135029] = {
			["source"] = "Water Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78116,
		},
		[374839] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189478,
		},
		[375351] = {
			["source"] = "Glacial Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190403,
		},
		[398380] = {
			["source"] = "Seismodor, Earth's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199664,
		},
		[369335] = {
			["source"] = "Runic Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184107,
		},
		[385075] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[87761] = {
			["source"] = "Executor of the Caliph",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45928,
		},
		[372296] = {
			["source"] = "Irontorch Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189466,
		},
		[396346] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oppressive Artificer",
			["npcID"] = 184444,
		},
		[372794] = {
			["isChanneled"] = true,
			["source"] = "Defier Draghar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187897,
		},
		[193633] = {
			["source"] = "Risen Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98275,
		},
		[227913] = {
			["source"] = "Felspite Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102788,
		},
		[194966] = {
			["source"] = "Lord Etheldrin Ravencrest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98521,
		},
		[377927] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Feather",
			["npcID"] = 192690,
		},
		[412200] = {
			["source"] = "Time-Lost Aerobot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205723,
		},
		[400430] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[402989] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["npcID"] = 201579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2683,
		},
		[249919] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["encounterID"] = 2087,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122968,
		},
		[377402] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[260666] = {
			["encounterName"] = "Priestess Alun'za",
			["source"] = "Gilded Priestess",
			["encounterID"] = 2084,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 132126,
		},
		[404027] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[407596] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[87762] = {
			["source"] = "Minister of Air",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45930,
		},
		[408620] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Obsidian Guard",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200836,
		},
		[373939] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Rotburst Totem",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190381,
		},
		[168040] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83893,
		},
		[75992] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Tempest Witch",
			["npcID"] = 40634,
		},
		[424997] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Fiery Treant",
			["npcID"] = 208459,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2731,
		},
		[191325] = {
			["encounterName"] = "Dresaron",
			["source"] = "Dresaron",
			["npcID"] = 99200,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1838,
		},
		[396350] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodbeak the Ravenous",
			["npcID"] = 201535,
		},
		[265352] = {
			["source"] = "Blight Toad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135052,
		},
		[375870] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[78807] = {
			["encounterName"] = "Ozruk",
			["source"] = "Ozruk",
			["encounterID"] = 1058,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42188,
		},
		[372800] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Expedition Guardian",
			["npcID"] = 187125,
		},
		[381512] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[375871] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[398400] = {
			["source"] = "Seismodor, Earth's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199664,
		},
		[391849] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Flame",
			["npcID"] = 186626,
		},
		[210261] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Sentry",
			["npcID"] = 104251,
		},
		[212564] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Tormenting Orb",
			["npcID"] = 107114,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1850,
		},
		[396854] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brutal Motivator",
			["npcID"] = 184453,
		},
		[428082] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[396355] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tarasek Marauder",
			["npcID"] = 184461,
		},
		[420907] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["npcID"] = 206172,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2708,
		},
		[405043] = {
			["source"] = "Primal Nightflame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200931,
		},
		[76508] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crazed Mage",
			["npcID"] = 39982,
		},
		[422443] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sickened Growth",
			["npcID"] = 207926,
		},
		[200289] = {
			["encounterName"] = "Shade of Xavius",
			["source"] = "Shade of Xavius",
			["npcID"] = 99192,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1839,
		},
		[374339] = {
			["source"] = "Refti Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190340,
		},
		[387657] = {
			["source"] = "Earthborne Charger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201471,
		},
		[407200] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[265337] = {
			["source"] = "Gorestained Piglet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135048,
		},
		[394833] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmammoth Breaker",
			["npcID"] = 194912,
		},
		[164973] = {
			["source"] = "Everbloom Naturalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81819,
		},
		[261438] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lord Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131527,
		},
		[75610] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corla, Herald of Twilight",
			["npcID"] = 39679,
		},
		[83926] = {
			["encounterName"] = "Ozumat",
			["source"] = "Vicious Mindlasher",
			["npcID"] = 44715,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[387135] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Arcblade",
			["npcID"] = 194898,
		},
		[370259] = {
			["source"] = "Primal Earth Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187322,
		},
		[272609] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faceless Corruptor",
			["npcID"] = 138281,
		},
		[396859] = {
			["source"] = "Earth Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203742,
		},
		[411700] = {
			["source"] = "Time-Lost Tidehunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205365,
		},
		[426541] = {
			["source"] = "Runic Disciple",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131685,
		},
		[76634] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tainted Sentry",
			["npcID"] = 40925,
		},
		[400954] = {
			["source"] = "Volgoth The Flamebringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209129,
		},
		[372808] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188252,
		},
		[204896] = {
			["isChanneled"] = true,
			["source"] = "Bloodscent Felhound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98813,
		},
		[377435] = {
			["source"] = "Time-Lost Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187265,
		},
		[396861] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Golem",
			["npcID"] = 190779,
		},
		[417843] = {
			["source"] = "Listless Nae'dra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211164,
		},
		[261440] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lord Waycrest",
			["encounterID"] = 2116,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131527,
		},
		[422961] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2709,
		},
		[426645] = {
			["source"] = "Naz'jar Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212673,
		},
		[200291] = {
			["source"] = "Risen Scout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98691,
		},
		[412215] = {
			["source"] = "Spurlok, Timesworn Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205158,
		},
		[396882] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enraged Air Elemental",
			["npcID"] = 196155,
		},
		[429615] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["npcID"] = 206172,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2708,
		},
		[370764] = {
			["source"] = "Crystal Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187160,
		},
		[420925] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[191848] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Serpentrix",
			["npcID"] = 91808,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1813,
		},
		[198496] = {
			["encounterName"] = "Ularogg Cragshaper",
			["source"] = "Ularogg Cragshaper",
			["encounterID"] = 1791,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91004,
		},
		[387151] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["npcID"] = 186737,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2583,
		},
		[420405] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempest Caller",
			["npcID"] = 207041,
		},
		[422964] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aurostor",
			["npcID"] = 209574,
		},
		[429116] = {
			["isChanneled"] = true,
			["source"] = "Inquisitor Fairbell",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 211930,
		},
		[370766] = {
			["source"] = "Crystal Thrasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187139,
		},
		[396877] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enraged Air Elemental",
			["npcID"] = 196155,
		},
		[385108] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rampaging Podling",
			["npcID"] = 209630,
		},
		[169839] = {
			["source"] = "Putrid Pyromancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84957,
		},
		[420419] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tempest Caller",
			["npcID"] = 207041,
		},
		[82137] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rom'ogg Bonecrusher",
			["npcID"] = 39665,
		},
		[422966] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nolaki",
			["npcID"] = 208706,
		},
		[372397] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snowhide Brute",
			["npcID"] = 189653,
		},
		[421013] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[377421] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amberfur Prowler",
			["npcID"] = 187455,
		},
		[429108] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Cycle Warden",
			["npcID"] = 209800,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2708,
		},
		[255814] = {
			["source"] = "Reanimated Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127757,
		},
		[387145] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormcaller Boroo",
			["npcID"] = 194317,
		},
		[381516] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[195172] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Crusher",
			["npcID"] = 91782,
		},
		[57984] = {
			["source"] = "Greater Fire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95061,
		},
		[384597] = {
			["source"] = "Qalashi Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193293,
		},
		[381517] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[383062] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189531,
		},
		[169841] = {
			["source"] = "Addled Arcanomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84990,
		},
		[374865] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ravenous Rockfang",
			["npcID"] = 185903,
		},
		[157348] = {
			["source"] = "Primal Storm Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77942,
		},
		[427585] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stalwart Bristlebruin",
			["npcID"] = 210507,
		},
		[420422] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[397383] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199703,
		},
		[381519] = {
			["source"] = "Wrathion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201412,
		},
		[396360] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tarasek Marauder",
			["npcID"] = 184461,
		},
		[199567] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Image of Latosius",
			["encounterID"] = 1835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101028,
		},
		[398494] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Shalewing",
			["npcID"] = 207090,
		},
		[204646] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["npcID"] = 103344,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1837,
		},
		[422972] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Valunei",
			["npcID"] = 208709,
		},
		[211299] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Watchful Inquisitor",
			["npcID"] = 105715,
		},
		[397907] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Baalgar the Watchful",
			["npcID"] = 104274,
		},
		[397897] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1869,
		},
		[369751] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Djaradin",
			["npcID"] = 195032,
		},
		[427579] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stalwart Bristlebruin",
			["npcID"] = 210507,
		},
		[397386] = {
			["encounterName"] = "Assault of the Zaqali",
			["source"] = "Magma Mystic",
			["encounterID"] = 2682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199703,
		},
		[382555] = {
			["source"] = "Bracken Warscourge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185529,
		},
		[236115] = {
			["encounterName"] = "Sisters of the Moon",
			["source"] = "Captain Yathae Moonstrike",
			["npcID"] = 118374,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2050,
		},
		[372311] = {
			["source"] = "Qalashi Trainee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189266,
		},
		[257870] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Buccaneer",
			["npcID"] = 130011,
		},
		[417868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Feral Umbraclaw",
			["npcID"] = 211401,
		},
		[241233] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rez the Tombwatcher",
			["npcID"] = 121003,
		},
		[427581] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stalwart Bristlebruin",
			["npcID"] = 210507,
		},
		[401482] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198998,
		},
		[386722] = {
			["source"] = "Stormbrand Ko'mal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206684,
		},
		[369754] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["encounterID"] = 2556,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184018,
		},
		[378454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Worldbreaker Brute",
			["npcID"] = 185589,
		},
		[384161] = {
			["source"] = "Qalashi Irontorch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189464,
		},
		[381525] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[396366] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimetalon Spellflinger",
			["npcID"] = 195756,
		},
		[407122] = {
			["source"] = "Horde Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203857,
		},
		[417860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Feral Umbraclaw",
			["npcID"] = 211401,
		},
		[375385] = {
			["source"] = "Primalbound Water Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190739,
		},
		[429119] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["npcID"] = 208365,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[396879] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enraged Air Elemental",
			["npcID"] = 196155,
		},
		[191595] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felsworn Infester",
			["npcID"] = 96587,
		},
		[209033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Guard",
			["npcID"] = 104246,
		},
		[253517] = {
			["source"] = "Dazar'ai Confessor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122973,
		},
		[200551] = {
			["encounterName"] = "Dargrul the Underking",
			["source"] = "Dargrul",
			["encounterID"] = 1793,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91007,
		},
		[372828] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Shaman",
			["npcID"] = 186679,
		},
		[395857] = {
			["source"] = "Qalashi Stonemender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187600,
		},
		[420933] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["encounterID"] = 2737,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208478,
		},
		[374364] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[265368] = {
			["source"] = "Bewitched Captain",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131587,
		},
		[393811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maiden of Diligence",
			["npcID"] = 192718,
		},
		[396370] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ice Elemental",
			["npcID"] = 203752,
		},
		[374365] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181861,
		},
		[411738] = {
			["source"] = "Rashok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[408141] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Dazhak",
			["encounterID"] = 2668,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201788,
		},
		[256589] = {
			["encounterName"] = "Council o' Captains",
			["source"] = "Captain Raoul",
			["npcID"] = 126847,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2094,
		},
		[400977] = {
			["source"] = "Zaqali Firecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200454,
		},
		[270481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Demonic Tyrant",
			["npcID"] = 135002,
		},
		[395860] = {
			["source"] = "The Red Gulper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195974,
		},
		[425030] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Juggernaut",
			["npcID"] = 210172,
		},
		[265876] = {
			["source"] = "Matron Alma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135365,
		},
		[192621] = {
			["encounterName"] = "Ash'Golm",
			["source"] = "Ash'Golm",
			["npcID"] = 95886,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1816,
		},
		[425037] = {
			["source"] = "Ancient Core Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210288,
		},
		[377950] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186125,
		},
		[256846] = {
			["source"] = "Dinomancer Kish'o",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129553,
		},
		[372839] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Harrier",
			["npcID"] = 195758,
		},
		[374892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tamed Magmammoth Calf",
			["npcID"] = 197224,
		},
		[255567] = {
			["source"] = "T'lonja",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 128455,
		},
		[407121] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Horde Warlock",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203857,
		},
		[428103] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Frost Witch",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 44404,
		},
		[406678] = {
			["encounterName"] = "The Vigilant Steward, Zskarn",
			["source"] = "Zskarn",
			["npcID"] = 202375,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2689,
		},
		[264923] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131863,
		},
		[59638] = {
			["source"] = "Mirror Image",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 31216,
		},
		[430218] = {
			["source"] = "Inquisitor Fairbell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211930,
		},
		[381535] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Pebbles",
			["npcID"] = 186628,
		},
		[371812] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tarasek Marauder",
			["npcID"] = 184461,
		},
		[265880] = {
			["source"] = "Matron Alma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135365,
		},
		[204905] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Mogu'shan Secret-Keeper",
			["npcID"] = 99676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[426576] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dream Seedling",
			["npcID"] = 211339,
		},
		[425035] = {
			["source"] = "Ancient Core Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210288,
		},
		[407124] = {
			["source"] = "Alliance Knight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208165,
		},
		[268440] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crackshot",
			["npcID"] = 126918,
		},
		[386660] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[421971] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[407125] = {
			["source"] = "Alliance Knight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208165,
		},
		[374885] = {
			["source"] = "Astral Attendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189555,
		},
		[201839] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taintheart Summoner",
			["npcID"] = 99366,
		},
		[265371] = {
			["source"] = "Enthralled Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131585,
		},
		[256849] = {
			["source"] = "Dinomancer Kish'o",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129553,
		},
		[38209] = {
			["source"] = "Scarlet Purifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210969,
		},
		[423010] = {
			["source"] = "Zealous Dryad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210813,
		},
		[265372] = {
			["source"] = "Bewitched Captain",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131587,
		},
		[409174] = {
			["source"] = "Incarnation of Entropy",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203811,
		},
		[376934] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[20296] = {
			["source"] = "Scarlet Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211884,
		},
		[422026] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[403034] = {
			["source"] = "Fyrakk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200832,
		},
		[201837] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taintheart Summoner",
			["npcID"] = 99366,
		},
		[371306] = {
			["source"] = "Arcane Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186741,
		},
		[196208] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Shadowmoon Warlock",
			["npcID"] = 99704,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[388706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Turbulent Gust",
			["npcID"] = 186917,
		},
		[401500] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[395871] = {
			["source"] = "Qalashi Stonemender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187600,
		},
		[420947] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Urctos",
			["npcID"] = 208363,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[409177] = {
			["source"] = "Entropic Hatred",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203809,
		},
		[207979] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Jazshariu",
			["npcID"] = 104273,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1869,
		},
		[371313] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Manifestation",
			["npcID"] = 186336,
		},
		[265376] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fanatical Headhunter",
			["npcID"] = 133663,
		},
		[376426] = {
			["source"] = "Summoned Ripple",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192463,
		},
		[390760] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chief Grrlgllmesh",
			["npcID"] = 186678,
		},
		[225635] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lunar Archer",
			["npcID"] = 120721,
		},
		[412761] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[51963] = {
			["source"] = "Ebon Gargoyle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 27829,
		},
		[207980] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Baalgar the Watchful",
			["npcID"] = 104274,
		},
		[375929] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[390245] = {
			["source"] = "Embertooth Spearhunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188725,
		},
		[226406] = {
			["source"] = "Emberhusk Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113537,
		},
		[255577] = {
			["encounterName"] = "Priestess Alun'za",
			["source"] = "Priestess Alun'za",
			["encounterID"] = 2084,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122967,
		},
		[385181] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[382578] = {
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184131,
		},
		[371875] = {
			["source"] = "Qalashi Trainee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189266,
		},
		[413787] = {
			["source"] = "Entropic Hatred",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203809,
		},
		[372863] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189232,
		},
		[371824] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tarasek Marauder",
			["npcID"] = 184461,
		},
		[429652] = {
			["source"] = "Shuja Grimaxe",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 214390,
		},
		[389274] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Shaman",
			["npcID"] = 186679,
		},
		[393830] = {
			["source"] = "Gragza the Dragon-Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191507,
		},
		[375919] = {
			["source"] = "Primal Scythid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191104,
		},
		[17290] = {
			["source"] = "Mage Hunter Ascendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26727,
		},
		[383084] = {
			["source"] = "Primalist Springfeeder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192456,
		},
		[279199] = {
			["source"] = "Scarlet Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211937,
		},
		[273570] = {
			["source"] = "Ringtail Bandicoon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 139166,
		},
		[384620] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["npcID"] = 186615,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2636,
		},
		[385145] = {
			["source"] = "Time-Lost Raptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187256,
		},
		[410728] = {
			["source"] = "Sabellian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201411,
		},
		[76133] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["npcID"] = 40792,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[420490] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crustbreaker Conduit",
			["npcID"] = 207038,
		},
		[374898] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Meadowhoof Musken",
			["npcID"] = 190905,
		},
		[414303] = {
			["encounterName"] = "Manifested Timeways",
			["source"] = "Manifested Timeways",
			["encounterID"] = 2667,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198996,
		},
		[369781] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184582,
		},
		[388716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[393876] = {
			["source"] = "Gragza the Dragon-Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191507,
		},
		[373364] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gerenth the Vile",
			["npcID"] = 107435,
		},
		[172673] = {
			["source"] = "Calia Menethil",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 214074,
		},
		[384623] = {
			["source"] = "Qalashi Blacksmith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189471,
		},
		[194682] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Imp",
			["npcID"] = 98963,
		},
		[428130] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verlann Timbercrush",
			["npcID"] = 207554,
		},
		[377971] = {
			["source"] = "Spawning Thresher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200038,
		},
		[194956] = {
			["encounterName"] = "Amalgam of Souls",
			["source"] = "Amalgam of Souls",
			["encounterID"] = 1832,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98542,
		},
		[375924] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184581,
		},
		[275110] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodbeak the Ravenous",
			["npcID"] = 201535,
		},
		[408677] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Scaleguard",
			["npcID"] = 198871,
		},
		[411236] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[426596] = {
			["source"] = "Coven Diviner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131819,
		},
		[414307] = {
			["encounterName"] = "Manifested Timeways",
			["source"] = "Manifested Timeways",
			["encounterID"] = 2667,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198996,
		},
		[425054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Portalkeeper",
			["npcID"] = 211756,
		},
		[387192] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Hammer",
			["npcID"] = 209831,
		},
		[394869] = {
			["source"] = "Boneshaper Jardak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188693,
		},
		[422023] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2820,
		},
		[260696] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Malady",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131823,
		},
		[421473] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["npcID"] = 206172,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2708,
		},
		[410225] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2677,
		},
		[412262] = {
			["source"] = "Time-Lost Rocketeer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205727,
		},
		[255579] = {
			["encounterName"] = "Priestess Alun'za",
			["source"] = "Priestess Alun'za",
			["encounterID"] = 2084,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122967,
		},
		[386675] = {
			["source"] = "Novice Timewalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189583,
		},
		[372858] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["encounterID"] = 2606,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189232,
		},
		[87779] = {
			["source"] = "Temple Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45935,
		},
		[369788] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Djaradin",
			["npcID"] = 188296,
		},
		[84451] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Doomguard Destroyer",
			["npcID"] = 41470,
		},
		[385141] = {
			["source"] = "Primalist Galesinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190373,
		},
		[377500] = {
			["source"] = "Infinite Agent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184335,
		},
		[398447] = {
			["source"] = "Seismodor, Earth's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199664,
		},
		[423523] = {
			["source"] = "Anguished Dream Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210304,
		},
		[387189] = {
			["source"] = "Srivantor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201555,
		},
		[389270] = {
			["source"] = "Expedition Guarantor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187062,
		},
		[260698] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Solena",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131824,
		},
		[272046] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Sharkbait",
			["npcID"] = 126841,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[411754] = {
			["source"] = "Conduit Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205478,
		},
		[115030] = {
			["source"] = "Muck Brawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192630,
		},
		[369791] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184582,
		},
		[188046] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Denizen of the Dream",
			["npcID"] = 198489,
		},
		[372862] = {
			["source"] = "Primal Splash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185645,
		},
		[250208] = {
			["source"] = "Enriched Rockshell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130776,
		},
		[260699] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Solena",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131824,
		},
		[425573] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keeper of the Dream",
			["npcID"] = 210423,
		},
		[415850] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Roiling Deathstalker",
			["npcID"] = 211242,
		},
		[428674] = {
			["encounterName"] = "Ozumat",
			["source"] = "Neptulon",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40792,
		},
		[425062] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Steelshaper",
			["npcID"] = 210173,
		},
		[403057] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[387708] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maiden of Diligence",
			["npcID"] = 192718,
		},
		[368287] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[260700] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Malady",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131823,
		},
		[375937] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[110168] = {
			["encounterName"] = "Echo of Baine",
			["source"] = "The Black Brewmaiden",
			["encounterID"] = 1881,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54336,
		},
		[410223] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[265881] = {
			["source"] = "Matron Alma",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135365,
		},
		[423529] = {
			["source"] = "Anguished Dream Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210304,
		},
		[235638] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Treant Grovetender",
			["npcID"] = 207616,
		},
		[429674] = {
			["source"] = "Shuja Grimaxe",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 214390,
		},
		[260701] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Briar",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131825,
		},
		[411763] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Infinite Keeper",
			["encounterID"] = 2673,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205212,
		},
		[198024] = {
			["encounterName"] = "Rokmora",
			["source"] = "Rokmora",
			["encounterID"] = 1790,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91003,
		},
		[377473] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["encounterID"] = 2611,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189901,
		},
		[22121] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Timberstep Archer",
			["npcID"] = 194041,
		},
		[423531] = {
			["source"] = "Anguished Dream Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210304,
		},
		[192138] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Hatecoil Crestrider",
			["npcID"] = 97269,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1810,
		},
		[194942] = {
			["encounterName"] = "Glazer",
			["source"] = "Glazer",
			["npcID"] = 95887,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1817,
		},
		[394362] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rasnar the War Ender",
			["npcID"] = 193232,
		},
		[256864] = {
			["source"] = "Dinomancer Kish'o",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129553,
		},
		[390290] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[391825] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Iceslinger",
			["npcID"] = 203750,
		},
		[407159] = {
			["encounterName"] = "Blight of Galakrond",
			["source"] = "Blight of Galakrond",
			["encounterID"] = 2668,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198997,
		},
		[382593] = {
			["source"] = "Cruel Bonecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186206,
		},
		[428139] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[381570] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Stones",
			["npcID"] = 186630,
		},
		[260703] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Malady",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131823,
		},
		[197502] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Hatecoil Crestrider",
			["encounterID"] = 1810,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97269,
		},
		[412806] = {
			["source"] = "Risen Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205804,
		},
		[202108] = {
			["source"] = "Blightshard Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90998,
		},
		[396430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Custodial Protector",
			["npcID"] = 192694,
		},
		[204667] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["npcID"] = 103344,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1837,
		},
		[209027] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Guard",
			["npcID"] = 111563,
		},
		[157331] = {
			["source"] = "Primal Storm Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77942,
		},
		[120149] = {
			["source"] = "Mirror Image",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194853,
		},
		[206459] = {
			["encounterName"] = "Cordana Felsong",
			["source"] = "Avatar of Shadow",
			["npcID"] = 104293,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1818,
		},
		[373912] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[389251] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overgrown Lasher",
			["npcID"] = 208626,
		},
		[394367] = {
			["source"] = "Morchok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187306,
		},
		[256106] = {
			["encounterName"] = "Skycap'n Kragg",
			["source"] = "Skycap'n Kragg",
			["npcID"] = 126832,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2093,
		},
		[410236] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203678,
		},
		[386694] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormsurge Totem",
			["npcID"] = 194897,
		},
		[265407] = {
			["source"] = "Banquet Steward",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131586,
		},
		[402050] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[409721] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Winglord Dezran",
			["npcID"] = 202610,
		},
		[414330] = {
			["encounterName"] = "Iridikron",
			["source"] = "Chromie",
			["encounterID"] = 2669,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 204449,
		},
		[384134] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Warspear",
			["npcID"] = 192791,
		},
		[401022] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[387205] = {
			["source"] = "Tyrhold Gryphon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198417,
		},
		[410234] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Anduin Lothar",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203679,
		},
		[369806] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[390788] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chief Grrlgllmesh",
			["npcID"] = 186678,
		},
		[373392] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Hornsounder",
			["npcID"] = 192796,
		},
		[393859] = {
			["source"] = "Thaldraszian Hoverbug",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195380,
		},
		[386700] = {
			["source"] = "Rimebound Froststalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199795,
		},
		[384648] = {
			["source"] = "Keeper Adranas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209931,
		},
		[409724] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Neltharion",
			["npcID"] = 201668,
		},
		[422518] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[6358] = {
			["source"] = "Betlissa",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 1863,
		},
		[427638] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nuoberon",
			["npcID"] = 209113,
		},
		[253544] = {
			["source"] = "Dazar'ai Confessor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122973,
		},
		[377488] = {
			["source"] = "Rune Seal Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187155,
		},
		[429172] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40788,
		},
		[429176] = {
			["source"] = "Gilgoblin Aquamage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40943,
		},
		[23337] = {
			["source"] = "Stars' Rest Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26448,
		},
		[375439] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["encounterID"] = 2610,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 181861,
		},
		[414844] = {
			["encounterName"] = "The Headless Horseman",
			["source"] = "Headless Horseman",
			["encounterID"] = 2725,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207438,
		},
		[372369] = {
			["source"] = "Hyena Tender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192506,
		},
		[264390] = {
			["source"] = "Runic Disciple",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131685,
		},
		[373395] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Batak",
			["npcID"] = 193462,
		},
		[255591] = {
			["encounterName"] = "Priestess Alun'za",
			["source"] = "Priestess Alun'za",
			["encounterID"] = 2084,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 122967,
		},
		[409216] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Manaweaver",
			["npcID"] = 198872,
		},
		[389258] = {
			["source"] = "Piskato",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195973,
		},
		[381582] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brutal Motivator",
			["npcID"] = 184453,
		},
		[192135] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Hatecoil Shellbreaker",
			["encounterID"] = 1810,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97264,
		},
		[409217] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Manaweaver",
			["npcID"] = 198872,
		},
		[201858] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taintheart Deadeye",
			["npcID"] = 100539,
		},
		[420476] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crustbreaker Conduit",
			["npcID"] = 207038,
		},
		[369813] = {
			["source"] = "Summoned Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193288,
		},
		[270022] = {
			["source"] = "Silverback Thumpknuckle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 130543,
		},
		[193152] = {
			["encounterName"] = "King Deepbeard",
			["source"] = "King Deepbeard",
			["npcID"] = 91797,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1812,
		},
		[418430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Empowered Imp",
			["npcID"] = 208545,
		},
		[241263] = {
			["encounterName"] = "Harjatan",
			["source"] = "Tidescale Witch",
			["npcID"] = 121011,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2036,
		},
		[421501] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["npcID"] = 208367,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[388747] = {
			["source"] = "Boggy Bullfrog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193699,
		},
		[381585] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brutal Motivator",
			["npcID"] = 184453,
		},
		[379023] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hillside Forager",
			["npcID"] = 191240,
		},
		[200580] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Festerhide Grizzly",
			["npcID"] = 95779,
		},
		[398471] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[194951] = {
			["source"] = "Scarlet Siegemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211937,
		},
		[375950] = {
			["source"] = "Primalist Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190377,
		},
		[168082] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Life Warden Gola",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83892,
		},
		[369811] = {
			["source"] = "Hulking Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[375446] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunhide Stomphoof",
			["npcID"] = 190953,
		},
		[429180] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cycle Warden",
			["npcID"] = 210518,
		},
		[236142] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Engine of Souls",
			["npcID"] = 118460,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2054,
		},
		[403593] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magma Burster",
			["npcID"] = 200801,
		},
		[387729] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Trudging Devourer",
			["npcID"] = 201066,
		},
		[369818] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Hulking Berserker",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184020,
		},
		[375945] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Argali",
			["npcID"] = 191553,
		},
		[377486] = {
			["source"] = "Infinite Agent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184335,
		},
		[169613] = {
			["encounterName"] = "Yalnu",
			["source"] = "Yalnu",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83846,
		},
		[382101] = {
			["source"] = "Grand Artificer Zeerak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201553,
		},
		[381593] = {
			["source"] = "Ebonstone Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184300,
		},
		[204666] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["npcID"] = 103344,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1837,
		},
		[418436] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Empowered Imp",
			["npcID"] = 208545,
		},
		[410760] = {
			["source"] = "Wild Vortex",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45912,
		},
		[252781] = {
			["source"] = "Zanchuli Witch-Doctor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122969,
		},
		[387711] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tyrhold Watcher",
			["npcID"] = 192696,
		},
		[410249] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[396432] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Proto-Dragon",
			["npcID"] = 189798,
		},
		[257899] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Ravager",
			["npcID"] = 130012,
		},
		[379033] = {
			["source"] = "Edai",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192952,
		},
		[382102] = {
			["source"] = "Grand Artificer Zeerak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201553,
		},
		[387732] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forge-Keep Sentinel",
			["npcID"] = 192700,
		},
		[384663] = {
			["source"] = "Forgewrought Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194816,
		},
		[389269] = {
			["source"] = "Expedition Guarantor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187062,
		},
		[371358] = {
			["source"] = "Unstable Curator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187154,
		},
		[369823] = {
			["source"] = "Vicious Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184023,
		},
		[389268] = {
			["source"] = "Expedition Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187135,
		},
		[35913] = {
			["source"] = "Fel-Blessed Highborne",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207147,
		},
		[424581] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[378012] = {
			["source"] = "Lavacaller Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186823,
		},
		[179091] = {
			["source"] = "Nar'thalas Magister",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88783,
		},
		[272592] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Faceless Corruptor",
			["npcID"] = 138281,
		},
		[395924] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maeleera",
			["npcID"] = 193677,
		},
		[398483] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[392854] = {
			["source"] = "Primal Scythid Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184853,
		},
		[411755] = {
			["source"] = "Conduit Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205478,
		},
		[410254] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203678,
		},
		[417928] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Invading Flameclaw",
			["npcID"] = 206805,
		},
		[382620] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[389273] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmeater",
			["npcID"] = 186612,
		},
		[377503] = {
			["source"] = "Rune Seal Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187155,
		},
		[429663] = {
			["source"] = "Shuja Grimaxe",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 214390,
		},
		[260697] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Briar",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131825,
		},
		[264407] = {
			["source"] = "Faceless Maiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131821,
		},
		[375457] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Juvenile Frost Proto-Dragon",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191222,
		},
		[369828] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Vicious Basilisk",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184023,
		},
		[377502] = {
			["source"] = "Time-Lost Murloc",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190584,
		},
		[422027] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Spirit of the Kaldorei",
			["npcID"] = 207800,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[387740] = {
			["source"] = "Tyrhold Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192696,
		},
		[88170] = {
			["source"] = "Turbulent Squall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45924,
		},
		[427657] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nuoberon",
			["npcID"] = 209113,
		},
		[200050] = {
			["encounterName"] = "Shade of Xavius",
			["source"] = "Shade of Xavius",
			["npcID"] = 99192,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1839,
		},
		[375459] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunder Lizard",
			["npcID"] = 191827,
		},
		[265433] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodsworn Defiler",
			["npcID"] = 133912,
		},
		[265377] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fanatical Headhunter",
			["npcID"] = 133663,
		},
		[407701] = {
			["isChanneled"] = true,
			["source"] = "Pendule",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 204030,
		},
		[406165] = {
			["encounterName"] = "Rashok, the Elder",
			["source"] = "Rashok",
			["encounterID"] = 2680,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201320,
		},
		[218755] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Festerhide Grizzly",
			["npcID"] = 95779,
		},
		[257904] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ludwig Von Tortollan",
			["npcID"] = 129699,
		},
		[168092] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Life Warden Gola",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83892,
		},
		[391837] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Emerald Healer",
			["npcID"] = 207048,
		},
		[258672] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crackshot",
			["npcID"] = 126918,
		},
		[388211] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shale Giant",
			["npcID"] = 188122,
		},
		[387232] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Emerald Preserver",
			["npcID"] = 209202,
		},
		[418449] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rune Bear",
			["npcID"] = 207050,
		},
		[382561] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snowhide Shaman",
			["npcID"] = 189654,
		},
		[255824] = {
			["source"] = "Dazar'ai Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122971,
		},
		[81008] = {
			["source"] = "Crystalspawn Giant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42810,
		},
		[383651] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193944,
		},
		[381602] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[256882] = {
			["source"] = "Monzumi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 129552,
		},
		[411798] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oozing Sludge",
			["npcID"] = 205644,
		},
		[381605] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[407120] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Horde Axe Thrower",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203799,
		},
		[267997] = {
			["npcID"] = 135816,
		},
		[258162] = {
			["source"] = "Lago the Drowned",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193025,
		},
		[377512] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Basalt Shell",
			["npcID"] = 186622,
		},
		[410776] = {
			["source"] = "Infinite Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 204658,
		},
		[195473] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gritslime Snail",
			["npcID"] = 91786,
		},
		[193682] = {
			["encounterName"] = "Lady Hatecoil",
			["source"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1811,
		},
		[412233] = {
			["source"] = "Time-Lost Rocketeer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205727,
		},
		[82800] = {
			["source"] = "Fel Queen's Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207152,
		},
		[423491] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raelas Firewind",
			["npcID"] = 209152,
		},
		[383143] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blightpaw the Depraved",
			["npcID"] = 193128,
		},
		[420501] = {
			["source"] = "Wildfire Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209200,
		},
		[373932] = {
			["encounterName"] = "Azureblade",
			["source"] = "Draconic Image",
			["npcID"] = 190187,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[417431] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[259187] = {
			["encounterName"] = "Yazma",
			["source"] = "Yazma",
			["encounterID"] = 2087,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122968,
		},
		[195944] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skrog Wavecrasher",
			["npcID"] = 91796,
		},
		[398497] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Karokta",
			["npcID"] = 203625,
		},
		[257908] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Officer",
			["npcID"] = 127106,
		},
		[395427] = {
			["source"] = "Overseer Lahar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189235,
		},
		[264931] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["encounterID"] = 2115,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131863,
		},
		[371887] = {
			["isChanneled"] = true,
			["source"] = "Enraged Shards",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188067,
		},
		[427668] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40765,
		},
		[422039] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[257397] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Bonesaw",
			["npcID"] = 129788,
		},
		[378029] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186124,
		},
		[375388] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Iceslinger",
			["npcID"] = 203750,
		},
		[424087] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Devastator",
			["npcID"] = 207089,
		},
		[373424] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["encounterID"] = 2613,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189340,
		},
		[397892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imacu'tya",
			["npcID"] = 104275,
		},
		[427670] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40765,
		},
		[169840] = {
			["source"] = "Infested Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84989,
		},
		[193941] = {
			["source"] = "Embershard Scorpion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98406,
		},
		[398501] = {
			["source"] = "Hunting Rock Viper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203783,
		},
		[395855] = {
			["source"] = "The Black Gulper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195975,
		},
		[375384] = {
			["source"] = "Primalist Earthshaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190371,
		},
		[428695] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[95826] = {
			["source"] = "Starfall Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82506,
		},
		[427672] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40765,
		},
		[381521] = {
			["source"] = "Summoned Downpour",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192462,
		},
		[369750] = {
			["source"] = "Qalashi Scaleripper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187602,
		},
		[421020] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Urctos",
			["npcID"] = 208363,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[384686] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["npcID"] = 186615,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2636,
		},
		[405668] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drazos Blackwing",
			["npcID"] = 205623,
		},
		[377522] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Raging Ember",
			["encounterID"] = 2611,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192464,
		},
		[425115] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fruitface",
			["npcID"] = 209913,
		},
		[428077] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keeper of the Dream",
			["npcID"] = 210423,
		},
		[278755] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Befouled Spirit",
			["npcID"] = 133685,
		},
		[408228] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Grommash Hellscream",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203678,
		},
		[253562] = {
			["source"] = "Dazar'ai Augur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122972,
		},
		[407205] = {
			["source"] = "Alliance Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208208,
		},
		[411811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bubbling Slime",
			["npcID"] = 205651,
		},
		[371383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snowhide Shaman",
			["npcID"] = 189654,
		},
		[373942] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[411300] = {
			["source"] = "Time-Lost Waveshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205363,
		},
		[417953] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galok Wingslicer",
			["npcID"] = 206460,
		},
		[406183] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Krono Sandtongue",
			["npcID"] = 205622,
		},
		[421024] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["npcID"] = 208367,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[76790] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Naz'jar Invader",
			["npcID"] = 39616,
		},
		[403625] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[261446] = {
			["encounterName"] = "Lord and Lady Waycrest",
			["source"] = "Lady Waycrest",
			["encounterID"] = 2116,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 131545,
		},
		[389686] = {
			["source"] = "Crystal Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187160,
		},
		[376892] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[390194] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uranto the Swift",
			["npcID"] = 191103,
		},
		[257402] = {
			["encounterName"] = "Lord Harlan Sweete",
			["source"] = "Harlan Sweete",
			["npcID"] = 126983,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2096,
		},
		[372793] = {
			["isChanneled"] = true,
			["source"] = "Primal Avalanche",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188244,
		},
		[186269] = {
			["source"] = "Blightshard Shaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90998,
		},
		[374969] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189478,
		},
		[395819] = {
			["source"] = "Qalashi Scaleripper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187602,
		},
		[387629] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Desecrated Ohuna",
			["npcID"] = 195876,
		},
		[396975] = {
			["source"] = "Firava the Rekindler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195915,
		},
		[377017] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["encounterID"] = 2611,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189901,
		},
		[426519] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["npcID"] = 206172,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2708,
		},
		[369853] = {
			["source"] = "Burly Rock-Thrower",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184019,
		},
		[421400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Djaradin Spear",
			["npcID"] = 209973,
		},
		[428564] = {
			["isChanneled"] = true,
			["source"] = "Molten Scorpid",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 210290,
		},
		[419351] = {
			["source"] = "Infinite Saboteur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208438,
		},
		[421029] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Pip",
			["npcID"] = 208367,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[412693] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Dreamcrusher",
			["npcID"] = 211057,
		},
		[426147] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["npcID"] = 206172,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2708,
		},
		[191900] = {
			["encounterName"] = "Warlord Parjesh",
			["source"] = "Warlord Parjesh",
			["encounterID"] = 1810,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91784,
		},
		[419344] = {
			["source"] = "Crenna Earth-Daughter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209072,
		},
		[372262] = {
			["source"] = "Qalashi Bonesplitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189467,
		},
		[387614] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ukhel Deathspeaker",
			["npcID"] = 195851,
		},
		[421398] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[382749] = {
			["source"] = "Stubborn Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186834,
		},
		[409261] = {
			["encounterName"] = "Iridikron",
			["source"] = "Iridikron",
			["encounterID"] = 2669,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198933,
		},
		[372696] = {
			["source"] = "Primal Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188244,
		},
		[382802] = {
			["source"] = "Vile Rothexer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194241,
		},
		[200345] = {
			["isChanneled"] = true,
			["source"] = "Risen Archer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 98275,
		},
		[415403] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2677,
		},
		[381721] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Titan Defense Matrix",
			["npcID"] = 193244,
		},
		[418474] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Empowered Felhunter",
			["npcID"] = 208791,
		},
		[418478] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rune Bear",
			["npcID"] = 207050,
		},
		[79351] = {
			["encounterName"] = "High Priestess Azil",
			["source"] = "High Priestess Azil",
			["encounterID"] = 1057,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42333,
		},
		[392594] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Meatgrinder Sotok",
			["npcID"] = 186777,
		},
		[400052] = {
			["source"] = "Swooping Flayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199809,
		},
		[394423] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rohzor Forgesmash",
			["npcID"] = 187598,
		},
		[9739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Moonalli",
			["npcID"] = 82015,
		},
		[383165] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blightpaw the Depraved",
			["npcID"] = 193128,
		},
		[375605] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Golem",
			["npcID"] = 190779,
		},
		[388801] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Warrior",
			["npcID"] = 195855,
		},
		[384531] = {
			["encounterName"] = "Gutshot",
			["source"] = "Rotfang Hyena",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194745,
		},
		[430247] = {
			["source"] = "Hallowed Monstrosity",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211933,
		},
		[257407] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["encounterID"] = 2086,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122963,
		},
		[205231] = {
			["npcID"] = 103673,
		},
		[83914] = {
			["encounterName"] = "Ozumat",
			["source"] = "Vicious Mindlasher",
			["npcID"] = 44715,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1047,
		},
		[387261] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[420525] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Urctos",
			["npcID"] = 208363,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[400055] = {
			["source"] = "Scavenging Slicer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203384,
		},
		[417455] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[384014] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[193951] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Barbed Spiderling",
			["npcID"] = 97677,
		},
		[396805] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorger",
			["npcID"] = 192759,
		},
		[376644] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[407733] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[76026] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["npcID"] = 40765,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1044,
		},
		[427509] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["encounterID"] = 1757,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83893,
		},
		[420856] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["npcID"] = 208365,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[376170] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[381770] = {
			["encounterName"] = "Treemouth",
			["source"] = "Decaying Slime",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192481,
		},
		[388288] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arcane Elemental",
			["npcID"] = 190780,
		},
		[372235] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Mender",
			["npcID"] = 195064,
		},
		[384194] = {
			["source"] = "Primalist Cinderweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190207,
		},
		[398012] = {
			["source"] = "Primalist Earthrazer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203739,
		},
		[373960] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[419506] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Fyrakk",
			["npcID"] = 204931,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[389433] = {
			["source"] = "Qiraji Prophet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195641,
		},
		[395184] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Proto-Dragon",
			["npcID"] = 185883,
		},
		[241290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tidescale Witch",
			["npcID"] = 121011,
		},
		[421554] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elisande",
			["npcID"] = 208668,
		},
		[386559] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["encounterID"] = 2617,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189727,
		},
		[13323] = {
			["source"] = "Mage Hunter Ascendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26727,
		},
		[368983] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rebel Incinerator",
			["npcID"] = 195062,
		},
		[396991] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakonid Breaker",
			["npcID"] = 187240,
		},
		[61353] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dagna Flintlock",
			["npcID"] = 96779,
		},
		[423912] = {
			["source"] = "The Stonewarmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210235,
		},
		[400883] = {
			["source"] = "Zaqali Keeneye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208660,
		},
		[386757] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["encounterID"] = 2617,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189727,
		},
		[80158] = {
			["source"] = "Stonecore Warbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42696,
		},
		[409581] = {
			["source"] = "Whisper in the Dark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203806,
		},
		[212786] = {
			["encounterName"] = "Oakheart",
			["source"] = "Oakheart",
			["npcID"] = 103344,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1837,
		},
		[397809] = {
			["source"] = "Glakis, Winter's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199502,
		},
		[267824] = {
			["source"] = "Soul Essence",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135240,
		},
		[412346] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Corsair",
			["npcID"] = 126928,
		},
		[430051] = {
			["encounterName"] = "Fyrakk the Blazing",
			["source"] = "Screaming Soul",
			["npcID"] = 214608,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2677,
		},
		[419511] = {
			["source"] = "Chronaxie",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206070,
		},
		[386547] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["npcID"] = 186339,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[207261] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1868,
		},
		[419516] = {
			["source"] = "Chronaxie",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206070,
		},
		[426974] = {
			["source"] = "Addled Arcanomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84990,
		},
		[183465] = {
			["source"] = "Tarspitter Lurker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91001,
		},
		[400066] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Preying Dustmoth",
			["npcID"] = 201068,
		},
		[204852] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nightmare Dweller",
			["npcID"] = 101991,
		},
		[196515] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Binder Ashioi",
			["npcID"] = 100250,
		},
		[258181] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 130400,
		},
		[424825] = {
			["source"] = "Sylvanesh the Ascended",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207107,
		},
		[378835] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blightpaw the Depraved",
			["npcID"] = 193128,
		},
		[421852] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irate Gladehart",
			["npcID"] = 207785,
		},
		[81530] = {
			["source"] = "Stonecore Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43537,
		},
		[385005] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "General Rajaxx",
			["npcID"] = 195628,
		},
		[75645] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Corla, Herald of Twilight",
			["npcID"] = 39679,
		},
		[196516] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ritualist Lesha",
			["npcID"] = 100248,
		},
		[382434] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[406210] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thorak Greenscale",
			["npcID"] = 205618,
		},
		[260741] = {
			["encounterName"] = "Heartsbane Triad",
			["source"] = "Sister Briar",
			["encounterID"] = 2113,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131825,
		},
		[423610] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2731,
		},
		[384492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Beastmaster",
			["npcID"] = 192794,
		},
		[369365] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184132,
		},
		[392394] = {
			["source"] = "Flamegullet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197697,
		},
		[386024] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Stormspeaker",
			["npcID"] = 194894,
		},
		[387277] = {
			["source"] = "Primal Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195917,
		},
		[33844] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Treant Grovetender",
			["npcID"] = 207616,
		},
		[392395] = {
			["source"] = "Thunderhead",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197698,
		},
		[376811] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[393419] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Penumbrus",
			["npcID"] = 189289,
		},
		[418561] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Banehollow",
			["npcID"] = 204243,
		},
		[200238] = {
			["encounterName"] = "Shade of Xavius",
			["source"] = "Shade of Xavius",
			["npcID"] = 99192,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1839,
		},
		[79868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alya",
			["npcID"] = 82002,
		},
		[422078] = {
			["source"] = "Emerald Wingguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210278,
		},
		[426684] = {
			["source"] = "Naz'jar Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 212673,
		},
		[425149] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zaqali Juggernaut",
			["npcID"] = 210172,
		},
		[427708] = {
			["source"] = "Reefbreaker Moruud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209898,
		},
		[386015] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Stormspeaker",
			["npcID"] = 194894,
		},
		[398806] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nimbulatus, Storm's Wrath",
			["npcID"] = 199667,
		},
		[396492] = {
			["source"] = "Piskato",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195973,
		},
		[412488] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crawling Goo",
			["npcID"] = 205820,
		},
		[256138] = {
			["source"] = "Dazar'ai Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127799,
		},
		[406481] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198999,
		},
		[407504] = {
			["encounterName"] = "Morchie",
			["source"] = "Morchie",
			["encounterID"] = 2671,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198999,
		},
		[372441] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Feral Umbraclaw",
			["npcID"] = 211401,
		},
		[413133] = {
			["source"] = "Forgemaster Kraglin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201625,
		},
		[377559] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[265084] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Devout Blood Priest",
			["npcID"] = 131492,
		},
		[202661] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel Scorcher",
			["npcID"] = 102583,
		},
		[401361] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elusive Deepstrider",
			["npcID"] = 204833,
		},
		[76031] = {
			["encounterName"] = "Beauty",
			["source"] = "Beauty",
			["npcID"] = 39700,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1037,
		},
		[265487] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodsworn Defiler",
			["npcID"] = 133912,
		},
		[203685] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Mogu'shan Secret-Keeper",
			["npcID"] = 99676,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[369110] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["encounterID"] = 2558,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184422,
		},
		[374137] = {
			["source"] = "Angerdrool",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195968,
		},
		[421570] = {
			["encounterName"] = "Council of Dreams",
			["source"] = "Aerwynn",
			["npcID"] = 208365,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2728,
		},
		[407496] = {
			["encounterName"] = "Scalecommander Sarkareth",
			["source"] = "Sarkareth",
			["encounterID"] = 2685,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201754,
		},
		[385434] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["npcID"] = 186339,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2581,
		},
		[256959] = {
			["source"] = "Reanimated Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127757,
		},
		[271174] = {
			["source"] = "Pallid Gorger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 137830,
		},
		[413385] = {
			["source"] = "Minister of Air",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45930,
		},
		[391380] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormcaller Narkena",
			["npcID"] = 201539,
		},
		[255373] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["encounterID"] = 2086,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122963,
		},
		[388310] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Custodial Protector",
			["npcID"] = 192694,
		},
		[369072] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Plainswalker Mammoth",
			["npcID"] = 187938,
		},
		[88186] = {
			["source"] = "Empyrean Assassin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45922,
		},
		[235927] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Reanimated Templar",
			["npcID"] = 118715,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2054,
		},
		[411000] = {
			["source"] = "Armored Mistral",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45915,
		},
		[413387] = {
			["source"] = "Executor of the Caliph",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45928,
		},
		[195108] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Stormweaver",
			["npcID"] = 91783,
		},
		[381659] = {
			["source"] = "Augmented Flood",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192457,
		},
		[56775] = {
			["source"] = "Azure Magus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26722,
		},
		[415435] = {
			["source"] = "Coalesced Moment",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206064,
		},
		[393430] = {
			["isChanneled"] = true,
			["source"] = "Forge-Keep Overseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192703,
		},
		[378827] = {
			["source"] = "Qalashi Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192786,
		},
		[76584] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Zealot",
			["npcID"] = 39990,
		},
		[415436] = {
			["source"] = "Coalesced Moment",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206064,
		},
		[424352] = {
			["encounterName"] = "Gnarlroot",
			["source"] = "Gnarlroot",
			["npcID"] = 209333,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2820,
		},
		[102132] = {
			["encounterName"] = "Echo of Baine",
			["source"] = "Time-Twisted Breaker",
			["encounterID"] = 1881,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 54552,
		},
		[390361] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Stormslinger",
			["npcID"] = 203746,
		},
		[415437] = {
			["source"] = "Timestream Leech",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206066,
		},
		[393432] = {
			["source"] = "Refti Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190340,
		},
		[250258] = {
			["encounterName"] = "Vol'kaal",
			["source"] = "Vol'kaal",
			["encounterID"] = 2085,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122965,
		},
		[425392] = {
			["source"] = "Flamewaker Infernoguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 210295,
		},
		[56969] = {
			["source"] = "Azure Scale-Binder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 26735,
		},
		[236542] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "The Desolate Host",
			["npcID"] = 119072,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2054,
		},
		[406227] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[388316] = {
			["source"] = "Grand Artificer Zeerak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201553,
		},
		[372452] = {
			["source"] = "Snowstorm Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194158,
		},
		[215204] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Vigilant Duskwatch",
			["npcID"] = 104918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1868,
		},
		[386781] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["npcID"] = 186737,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2583,
		},
		[384223] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["npcID"] = 186739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2585,
		},
		[391613] = {
			["source"] = "Subterranean Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190404,
		},
		[424140] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[374045] = {
			["source"] = "Containment Apparatus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190342,
		},
		[423117] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["encounterID"] = 2737,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208478,
		},
		[392924] = {
			["source"] = "High Channeler Ryvati",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197535,
		},
		[403671] = {
			["encounterName"] = "Magmorax",
			["source"] = "Magmorax",
			["npcID"] = 201579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2683,
		},
		[422606] = {
			["source"] = "Volgoth The Flamebringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209129,
		},
		[211477] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Legion Hound",
			["npcID"] = 104277,
		},
		[259572] = {
			["encounterName"] = "Vol'kaal",
			["source"] = "Vol'kaal",
			["encounterID"] = 2085,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 122965,
		},
		[427432] = {
			["source"] = "Prophet of the Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207315,
		},
		[369573] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["encounterID"] = 2555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184581,
		},
		[382179] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Senior Researcher Alydrus",
			["npcID"] = 208734,
		},
		[381765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ice Elemental",
			["npcID"] = 203752,
		},
		[387297] = {
			["source"] = "Srivantor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201555,
		},
		[391903] = {
			["source"] = "Sendrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190171,
		},
		[427428] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Greedy Gessie",
			["npcID"] = 209936,
		},
		[78754] = {
			["source"] = "Ashenvale Scout",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 34177,
		},
		[264050] = {
			["source"] = "Thistle Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135474,
		},
		[257426] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Enforcer",
			["npcID"] = 129602,
		},
		[241306] = {
			["encounterName"] = "Harjatan",
			["source"] = "Razorjaw Acolyte",
			["npcID"] = 117154,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2036,
		},
		[88061] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Armored Mistral",
			["npcID"] = 45915,
		},
		[75907] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["npcID"] = 40633,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1045,
		},
		[413607] = {
			["source"] = "Infinite Twilight Magus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201223,
		},
		[198641] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Kur'talos Ravencrest",
			["encounterID"] = 1835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98965,
		},
		[408811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Siegemaster",
			["npcID"] = 198874,
		},
		[372971] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Qalashi Blacksmith",
			["encounterID"] = 2612,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189471,
		},
		[422611] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
		[369901] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Feather",
			["npcID"] = 186965,
		},
		[405391] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Rionthus",
			["npcID"] = 200918,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[395489] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Karantun",
			["npcID"] = 193647,
		},
		[419626] = {
			["source"] = "Calderamor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 207136,
		},
		[410999] = {
			["source"] = "Armored Mistral",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45915,
		},
		[382696] = {
			["source"] = "Earthen Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184131,
		},
		[375671] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Iceslinger",
			["npcID"] = 203750,
		},
		[414425] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2709,
		},
		[204243] = {
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nightmare Dweller",
			["npcID"] = 101991,
		},
		[211470] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow Mistress",
			["npcID"] = 104300,
		},
		[198833] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Latosius",
			["encounterID"] = 1835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98970,
		},
		[422614] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
		[199345] = {
			["encounterName"] = "Dresaron",
			["source"] = "Dresaron",
			["npcID"] = 99200,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1838,
		},
		[373680] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188252,
		},
		[418009] = {
			["encounterName"] = "Time-Lost Battlefield",
			["source"] = "Alliance Archer",
			["encounterID"] = 2672,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 206352,
		},
		[385258] = {
			["source"] = "Coastal Eel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198782,
		},
		[259732] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Sporecaller Zancha",
			["npcID"] = 131383,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2112,
		},
		[201733] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Dantalionax",
			["encounterID"] = 1835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98970,
		},
		[196787] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel-Infused Fury",
			["npcID"] = 99956,
		},
		[207278] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1868,
		},
		[168666] = {
			["encounterName"] = "Yalnu",
			["source"] = "Lady Baihu",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84358,
		},
		[425873] = {
			["source"] = "Lingering Torment",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 209564,
		},
		[193717] = {
			["encounterName"] = "Lady Hatecoil",
			["source"] = "Lady Hatecoil",
			["npcID"] = 91789,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1811,
		},
		[209378] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imacu'tya",
			["npcID"] = 104275,
		},
		[427223] = {
			["isChanneled"] = true,
			["source"] = "Putrid Pyromancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 84957,
		},
		[214989] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit of Vengeance",
			["npcID"] = 100364,
		},
		[418539] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Banehollow",
			["npcID"] = 204243,
		},
		[385442] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[265511] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit Drain Totem",
			["npcID"] = 135169,
		},
		[409313] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[196111] = {
			["encounterName"] = "Serpentrix",
			["source"] = "Seaspray Crab",
			["npcID"] = 91793,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1813,
		},
		[377765] = {
			["source"] = "Primalist Tempest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190946,
		},
		[88959] = {
			["source"] = "Temple Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45935,
		},
		[209413] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Construct",
			["npcID"] = 104270,
		},
		[258199] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontide Crusher",
			["npcID"] = 130400,
		},
		[391915] = {
			["source"] = "Cragsworn Stoneshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195838,
		},
		[195254] = {
			["encounterName"] = "Amalgam of Souls",
			["source"] = "Amalgam of Souls",
			["encounterID"] = 1832,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98542,
		},
		[274213] = {
			["encounterName"] = "Sporecaller Zancha",
			["source"] = "Sporecaller Zancha",
			["npcID"] = 131383,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2112,
		},
		[385263] = {
			["source"] = "Coastal Eel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198782,
		},
		[265002] = {
			["encounterName"] = "Raal the Gluttonous",
			["source"] = "Raal the Gluttonous",
			["npcID"] = 131863,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2115,
		},
		[256494] = {
			["encounterName"] = "Ring of Booty",
			["source"] = "Trothak",
			["npcID"] = 126969,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2095,
		},
		[272167] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilescourge",
			["npcID"] = 136404,
		},
		[217260] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Shaman",
			["npcID"] = 186679,
		},
		[369400] = {
			["source"] = "Earthen Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184132,
		},
		[408805] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Incorporeal Being",
			["npcID"] = 204560,
		},
		[369055] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Mender",
			["npcID"] = 186602,
		},
		[393453] = {
			["source"] = "Scalesmith Mita",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191010,
		},
		[381683] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Warspear",
			["npcID"] = 192791,
		},
		[169494] = {
			["source"] = "Gnarlroot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81984,
		},
		[386801] = {
			["source"] = "Zurgaz Corebreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193680,
		},
		[426206] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
		[428765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
		},
		[404713] = {
			["encounterName"] = "The Forgotten Experiments",
			["source"] = "Neldris",
			["npcID"] = 200912,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2693,
		},
		[382708] = {
			["source"] = "Qalashi Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193293,
		},
		[427863] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["encounterID"] = 1751,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82682,
		},
		[387826] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ukhel Beastcaller",
			["npcID"] = 195878,
		},
		[416996] = {
			["encounterName"] = "Igira the Cruel",
			["source"] = "Igira the Cruel",
			["npcID"] = 200926,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2709,
		},
		[200630] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mindshattered Screecher",
			["npcID"] = 95769,
		},
		[255421] = {
			["encounterName"] = "Rezan",
			["source"] = "Rezan",
			["npcID"] = 122963,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 2086,
		},
		[397109] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Air Revenant",
			["npcID"] = 203743,
		},
		[412012] = {
			["isChanneled"] = true,
			["source"] = "Infinite Timeslicer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205408,
		},
		[421603] = {
			["encounterName"] = "Tindral Sageswift, Seer of the Flame",
			["source"] = "Tindral Sageswift",
			["npcID"] = 209090,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2786,
		},
		[395541] = {
			["source"] = "Emblazion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193650,
		},
		[207806] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["npcID"] = 104215,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1868,
		},
		[392576] = {
			["source"] = "Tempest Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198047,
		},
		[264520] = {
			["source"] = "Maddened Survivalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131850,
		},
		[387317] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ruby Culler",
			["npcID"] = 190093,
		},
		[375547] = {
			["source"] = "Molten Eruption",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191286,
		},
		[201399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadfire Imp",
			["npcID"] = 100527,
		},
		[75272] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["npcID"] = 39665,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1040,
		},
		[201176] = {
			["source"] = "Wyrmtongue Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98792,
		},
		[198073] = {
			["encounterName"] = "Smashspite the Hateful",
			["source"] = "Smashspite the Hateful",
			["encounterID"] = 1834,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98949,
		},
		[426845] = {
			["source"] = "Infested Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84989,
		},
		[417634] = {
			["encounterName"] = "Larodar, Keeper of the Flame",
			["source"] = "Larodar, Keeper of the Flame",
			["npcID"] = 208445,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2731,
		},
		[88194] = {
			["source"] = "Young Storm Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45919,
		},
		[270264] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Portal Breacher",
			["npcID"] = 209821,
		},
		[265523] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodsworn Defiler",
			["npcID"] = 133912,
		},
		[384761] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["npcID"] = 186615,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2636,
		},
		[407790] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[196027] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Arcanist",
			["npcID"] = 97171,
		},
		[369921] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Firesquall",
			["npcID"] = 195448,
		},
		[266036] = {
			["source"] = "Thistle Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 135474,
		},
		[385351] = {
			["source"] = "Unstable Arcanogolem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201554,
		},
		[260508] = {
			["encounterName"] = "Soulbound Goliath",
			["source"] = "Soulbound Goliath",
			["encounterID"] = 2114,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 131667,
		},
		[130414] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rainiara the Kingslayer",
			["npcID"] = 82260,
		},
		[426855] = {
			["encounterName"] = "Nymue, Weaver of the Cycle",
			["source"] = "Nymue",
			["npcID"] = 206172,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2708,
		},
		[191678] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Viletongue Belcher",
			["npcID"] = 96480,
		},
		[196028] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Arcanist",
			["npcID"] = 97171,
		},
		[394487] = {
			["source"] = "Death's Shadow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190985,
		},
		[169929] = {
			["encounterName"] = "Yalnu",
			["source"] = "Flourishing Ancient",
			["encounterID"] = 1756,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84400,
		},
		[428263] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[418540] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Banehollow",
			["npcID"] = 204243,
		},
		[419052] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Future Self",
			["npcID"] = 208959,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[272180] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grotesque Horror",
			["npcID"] = 138187,
		},
		[412922] = {
			["source"] = "Spurlok, Timesworn Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 205158,
		},
		[265016] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chosen Blood Matron",
			["npcID"] = 131436,
		},
		[414959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten Runebear",
			["npcID"] = 207101,
		},
		[425706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Astromancer's Guard",
			["npcID"] = 208729,
		},
		[383231] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193944,
		},
		[376683] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["npcID"] = 186151,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[374020] = {
			["source"] = "Containment Apparatus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190342,
		},
		[194545] = {
			["source"] = "Scarlet Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 211884,
		},
		[407796] = {
			["encounterName"] = "Echo of Neltharion",
			["source"] = "Neltharion",
			["npcID"] = 201668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2684,
		},
		[426731] = {
			["source"] = "Naz'jar Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41096,
		},
		[400642] = {
			["encounterName"] = "Tyr, the Infinite Keeper",
			["source"] = "Tyr, the Infinite Keeper",
			["encounterID"] = 2670,
			["isChanneled"] = true,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198998,
		},
		[374533] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["encounterID"] = 2612,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189478,
		},
		[411954] = {
			["isChanneled"] = true,
			["source"] = "Infinite Chronoweaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 205384,
		},
		[265019] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chosen Blood Matron",
			["npcID"] = 131436,
		},
		[378143] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Infiltrator",
			["npcID"] = 189895,
		},
		[392957] = {
			["source"] = "Mountain Herdstallion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192640,
		},
		[404744] = {
			["encounterName"] = "Kazzara, the Hellforged",
			["source"] = "Kazzara, the Hellforged",
			["encounterID"] = 2688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201261,
		},
		[372568] = {
			["isChanneled"] = true,
			["source"] = "Flashfrost Earthshaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 188067,
		},
		[76682] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Element Warden",
			["npcID"] = 40017,
		},
		[421616] = {
			["encounterName"] = "Volcoross",
			["source"] = "Volcoross",
			["encounterID"] = 2737,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 208478,
		},
		[235692] = {
			["source"] = "Lord Darius Crowley",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 213057,
		},
		[231854] = {
			["encounterName"] = "Harjatan",
			["source"] = "Harjatan",
			["npcID"] = 116407,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2036,
		},
		[410870] = {
			["source"] = "Wild Vortex",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45912,
		},
		[196290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormwake Hydra",
			["npcID"] = 91792,
		},
	},
	["InterruptableSpells"] = {
		[253562] = true,
		[271174] = true,
		[256849] = true,
		[168092] = true,
		[426783] = true,
		[164965] = true,
		[417481] = true,
		[169839] = true,
		[266225] = true,
		[47528] = true,
		[411958] = true,
		[255041] = true,
		[169840] = true,
		[266036] = true,
		[426596] = true,
		[415770] = true,
		[225562] = true,
		[147362] = true,
		[57994] = true,
		[404754] = true,
		[420090] = true,
		[411994] = true,
		[204243] = true,
		[417011] = true,
		[31935] = true,
		[76813] = true,
		[253583] = true,
		[264390] = true,
		[427459] = true,
		[412378] = true,
		[260696] = true,
		[413427] = true,
		[168082] = true,
		[426731] = true,
		[260697] = true,
		[200642] = true,
		[97547] = true,
		[347008] = true,
		[255824] = true,
		[267824] = true,
		[32747] = true,
		[260698] = true,
		[420320] = true,
		[413607] = true,
		[227913] = true,
		[426541] = true,
		[412922] = true,
		[260699] = true,
		[259572] = true,
		[164973] = true,
		[265876] = true,
		[426768] = true,
		[416256] = true,
		[260700] = true,
		[264050] = true,
		[200248] = true,
		[183752] = true,
		[428103] = true,
		[415435] = true,
		[196883] = true,
		[96231] = true,
		[93985] = true,
		[428263] = true,
		[200630] = true,
		[165213] = true,
		[400165] = true,
		[415437] = true,
		[201837] = true,
		[418200] = true,
		[252923] = true,
		[220543] = true,
		[263959] = true,
		[264024] = true,
		[201298] = true,
		[199663] = true,
		[268278] = true,
		[252781] = true,
		[418202] = true,
		[260701] = true,
		[407124] = true,
		[1766] = true,
		[408805] = true,
		[265368] = true,
		[351338] = true,
		[253544] = true,
		[417030] = true,
		[201839] = true,
		[429176] = true,
		[201411] = true,
		[116705] = true,
		[412233] = true,
		[168040] = true,
		[19647] = true,
		[2139] = true,
		[253517] = true,
		[164887] = true,
		[169841] = true,
		[417018] = true,
		[428526] = true,
		[278444] = true,
		[6552] = true,
		[429812] = true,
	},
	["profiles"] = {
		["Default"] = {
			["target_shady_combat_only"] = false,
			["aura_breakline_space"] = 2,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 632,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Add the buff name in the trigger box.",
					["SpellIds"] = {
						398151, -- [1]
						377738, -- [2]
						378149, -- [3]
					},
					["Name"] = "Aura - Buff Alert [Plater]",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 533,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
					["Icon"] = 2175503,
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
					},
					["Name"] = "Explosion Affix M+ [Plater]",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 368,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Add the debuff name in the trigger box.",
					["SpellIds"] = {
					},
					["Name"] = "Aura - Debuff Alert [Plater]",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 1213,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["SpellIds"] = {
					},
					["Name"] = "Cast - Alert + Timer [P]",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 694,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Name"] = "Health Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.431372, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						372107, -- [21]
						388923, -- [22]
						376934, -- [23]
						384899, -- [24]
						373960, -- [25]
						374724, -- [26]
						385551, -- [27]
						259732, -- [28]
						373424, -- [29]
						373084, -- [30]
						87618, -- [31]
						255041, -- [32]
						428926, -- [33]
						76634, -- [34]
						200050, -- [35]
						197546, -- [36]
						198079, -- [37]
						199193, -- [38]
						266181, -- [39]
					},
					["Name"] = "Cast - Ultra Important [P]",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 662,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
						281420, -- [16]
						274383, -- [17]
						259092, -- [18]
						367521, -- [19]
						374544, -- [20]
						385039, -- [21]
						382474, -- [22]
						369823, -- [23]
						377500, -- [24]
						260879, -- [25]
						186269, -- [26]
						378818, -- [27]
						371875, -- [28]
						372225, -- [29]
						200658, -- [30]
						266036, -- [31]
						265407, -- [32]
						164965, -- [33]
						429176, -- [34]
						428526, -- [35]
						418200, -- [36]
						407124, -- [37]
						415437, -- [38]
						264050, -- [39]
						267824, -- [40]
					},
					["Name"] = "Cast - Small Alert [Plater]",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 375,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Timeleft to Blink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["SpellIds"] = {
					},
					["Name"] = "Aura - Blink by Time Left [Plater]",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 878,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Name"] = "Frame Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Highlight the target name",
					["SpellIds"] = {
					},
					["Name"] = "Cast - Important Target [P]",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["ScriptType"] = 2,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1680910379,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["NpcNames"] = {
					},
					["url"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["Revision"] = 829,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Very Important [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						392488, -- [21]
						257732, -- [22]
						256060, -- [23]
						257899, -- [24]
						384633, -- [25]
						374339, -- [26]
						395694, -- [27]
						391634, -- [28]
						372701, -- [29]
						369328, -- [30]
						265487, -- [31]
						413044, -- [32]
						183526, -- [33]
						88194, -- [34]
						87762, -- [35]
						413385, -- [36]
						411001, -- [37]
						378282, -- [38]
						384161, -- [39]
						259572, -- [40]
						255371, -- [41]
						427460, -- [42]
						429172, -- [43]
						426500, -- [44]
						413607, -- [45]
						412922, -- [46]
						417481, -- [47]
						201399, -- [48]
						411994, -- [49]
						415770, -- [50]
						260907, -- [51]
						260703, -- [52]
						260741, -- [53]
						265876, -- [54]
						263959, -- [55]
						266225, -- [56]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["semver"] = "",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = false,
					["Revision"] = 63,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Auto set skull marker",
					["SpellIds"] = {
					},
					["Name"] = "Auto Set Skull",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 206,
					["Options"] = {
					},
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["SpellIds"] = {
					},
					["Name"] = "Countdown",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1680910366,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["NpcNames"] = {
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["Revision"] = 621,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "animSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Speed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["Enabled"] = true,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Frontal Cone [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						381525, -- [6]
						386660, -- [7]
						385578, -- [8]
						384699, -- [9]
						153501, -- [10]
						153686, -- [11]
						154442, -- [12]
						192018, -- [13]
						219488, -- [14]
						372087, -- [15]
						391726, -- [16]
						391723, -- [17]
						377383, -- [18]
						388976, -- [19]
						370764, -- [20]
						387067, -- [21]
						391118, -- [22]
						391136, -- [23]
						382233, -- [24]
						209027, -- [25]
						212031, -- [26]
						207261, -- [27]
						207979, -- [28]
						198888, -- [29]
						199805, -- [30]
						199050, -- [31]
						191508, -- [32]
						152792, -- [33]
						153395, -- [34]
						209495, -- [35]
						257426, -- [36]
						255952, -- [37]
						257870, -- [38]
						413147, -- [39]
						383107, -- [40]
						377559, -- [41]
						388060, -- [42]
						376170, -- [43]
						384524, -- [44]
						375351, -- [45]
						390111, -- [46]
						369791, -- [47]
						369573, -- [48]
						369563, -- [49]
						369335, -- [50]
						369061, -- [51]
						375727, -- [52]
						265016, -- [53]
						265019, -- [54]
						260793, -- [55]
						260292, -- [56]
						272457, -- [57]
						272609, -- [58]
						269843, -- [59]
						183465, -- [60]
						226296, -- [61]
						188169, -- [62]
						183088, -- [63]
						410873, -- [64]
						411012, -- [65]
						88308, -- [66]
						382708, -- [67]
						375251, -- [68]
						375439, -- [69]
						372311, -- [70]
						373742, -- [71]
						372201, -- [72]
						374533, -- [73]
						377204, -- [74]
						201226, -- [75]
						204667, -- [76]
						198379, -- [77]
						200768, -- [78]
						253239, -- [79]
						250258, -- [80]
						255567, -- [81]
						194956, -- [82]
						427510, -- [83]
						426645, -- [84]
						412505, -- [85]
						412129, -- [86]
						419351, -- [87]
						401482, -- [88]
						404916, -- [89]
						200345, -- [90]
						200261, -- [91]
						198641, -- [92]
						265372, -- [93]
						271174, -- [94]
						264694, -- [95]
						264923, -- [96]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["semver"] = "",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 269,
					["Options"] = {
					},
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Icon"] = 1029718,
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["SpellIds"] = {
					},
					["Name"] = "Fixate [Plater]",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 1194,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						384194, -- [28]
						392451, -- [29]
						392924, -- [30]
						397889, -- [31]
						209413, -- [32]
						207980, -- [33]
						257397, -- [34]
						257736, -- [35]
						382787, -- [36]
						374699, -- [37]
						377402, -- [38]
						369602, -- [39]
						369465, -- [40]
						369400, -- [41]
						381593, -- [42]
						265091, -- [43]
						265433, -- [44]
						382791, -- [45]
						376780, -- [46]
						225573, -- [47]
						278444, -- [48]
						164887, -- [49]
						168082, -- [50]
						76813, -- [51]
						227913, -- [52]
						265368, -- [53]
					},
					["Name"] = "Cast - Big Alert [Plater]",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1675433496,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["url"] = "",
					["Enabled"] = true,
					["Revision"] = 190,
					["semver"] = "",
					["Icon"] = 135945,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["version"] = -1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Name"] = "M+ Spiteful",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["Desc"] = "Time to die Spiteful affix",
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 233,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Key"] = "fontSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Icon"] = 136048,
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Show the energy amount above the nameplate.",
					["SpellIds"] = {
					},
					["Name"] = "Unit - Show Energy [Plater]",
				}, -- [16]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 266,
					["Options"] = {
					},
					["Author"] = "Tecno-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Icon"] = 841383,
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["Name"] = "Fixate On You [Plater]",
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 65,
					["Options"] = {
					},
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Icon"] = 610472,
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["SpellIds"] = {
					},
					["Name"] = "Aura is Shield [P]",
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 33,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["SpellIds"] = {
						426662, -- [1]
						426663, -- [2]
					},
					["Name"] = "Fixate by Unit Buff [P]",
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 547,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Show a different animation for the cast bar.",
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						360850, -- [10]
						212784, -- [11]
						199033, -- [12]
						199034, -- [13]
						200969, -- [14]
						394512, -- [15]
						397881, -- [16]
						396020, -- [17]
						374430, -- [18]
						384353, -- [19]
						265376, -- [20]
						193941, -- [21]
						411002, -- [22]
						169445, -- [23]
					},
					["Name"] = "Cast - Glowing [P]",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 37,
					["Options"] = {
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Icon"] = 134229,
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["SpellIds"] = {
						191284, -- [1]
					},
					["Name"] = "Cast - Effect After Cast [P]",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1683596223,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 146,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
						"186227", -- [3]
						"184020", -- [4]
						"91005", -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Health Markers [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Vertical Line Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "indicatorColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Name"] = "Fill Alpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
						["npcColor"] = {
							{
								"196548", -- [1]
								"forestgreen", -- [2]
							}, -- [1]
							{
								"195580", -- [1]
								"forestgreen", -- [2]
							}, -- [2]
							{
								"195820", -- [1]
								"forestgreen", -- [2]
							}, -- [3]
							{
								"195821", -- [1]
								"forestgreen", -- [2]
							}, -- [4]
							{
								"189886", -- [1]
								"forestgreen", -- [2]
							}, -- [5]
							{
								"75966", -- [1]
								"forestgreen", -- [2]
							}, -- [6]
							{
								"102019 ", -- [1]
								"forestgreen", -- [2]
							}, -- [7]
							{
								"187159", -- [1]
								"forestgreen", -- [2]
							}, -- [8]
							{
								"194897", -- [1]
								"forestgreen", -- [2]
							}, -- [9]
							{
								"104251", -- [1]
								"forestgreen", -- [2]
							}, -- [10]
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1680910341,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["url"] = "",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
						190381, -- [14]
						92538, -- [15]
						192464, -- [16]
						131009, -- [17]
						127315, -- [18]
						133361, -- [19]
						136330, -- [20]
						214117, -- [21]
						212483, -- [22]
						101008, -- [23]
					},
					["Enabled"] = true,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["Revision"] = 573,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Key"] = "skullScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Name"] = "Add - Important [P]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["version"] = -1,
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["semver"] = "",
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
					["Enabled"] = false,
					["Revision"] = 161,
					["Options"] = {
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["SpellIds"] = {
					},
					["Name"] = "Add - Tag Number [P]",
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 887,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Play a very fast flash when the cast start",
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
						385029, -- [4]
						374563, -- [5]
						377341, -- [6]
						369675, -- [7]
						369365, -- [8]
						369411, -- [9]
						278961, -- [10]
						202108, -- [11]
						88186, -- [12]
						200630, -- [13]
						255824, -- [14]
						252781, -- [15]
						250096, -- [16]
						200248, -- [17]
						197797, -- [18]
						264520, -- [19]
						418202, -- [20]
						201839, -- [21]
						412012, -- [22]
						411958, -- [23]
					},
					["Name"] = "Cast - Quick Flash [P]",
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
						129758, -- [5]
						190426, -- [6]
						186696, -- [7]
						101075, -- [8]
						100818, -- [9]
						98081, -- [10]
						52019, -- [11]
					},
					["Enabled"] = true,
					["Revision"] = 162,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Change the color of  add",
					["SpellIds"] = {
					},
					["Name"] = "Add - Warning [P]",
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 18,
					["Options"] = {
					},
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Icon"] = 236209,
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["Name"] = "Aura While Casting [P]",
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
					["Enabled"] = true,
					["Revision"] = 111,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Scale",
						}, -- [5]
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "",
					["SpellIds"] = {
					},
					["Name"] = "Add - Non Elite Trash [P]",
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 101,
					["Options"] = {
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["Name"] = "Cast - Shield Interrupt [P]",
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 162,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Name"] = "Rotation Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "rotationDuration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animStartDuration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Start Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Texture Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureScale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
						258672, -- [20]
						258777, -- [21]
						257756, -- [22]
						257784, -- [23]
						256405, -- [24]
						256589, -- [25]
						393793, -- [26]
						388046, -- [27]
						375079, -- [28]
						390290, -- [29]
						369811, -- [30]
						369703, -- [31]
						226287, -- [32]
						410999, -- [33]
						372561, -- [34]
						256882, -- [35]
						172578, -- [36]
						412063, -- [37]
					},
					["Name"] = "Cast - Circle AoE [P]",
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["NpcNames"] = {
					},
					["Enabled"] = true,
					["Revision"] = 506,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "Just stop casting",
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
						200291, -- [5]
						268202, -- [6]
					},
					["Name"] = "Cast - Stop Casting [P]",
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
						189299, -- [6]
						131402, -- [7]
						135052, -- [8]
					},
					["Enabled"] = true,
					["Revision"] = 106,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Desc"] = "",
					["SpellIds"] = {
					},
					["Name"] = "Add - Explode on Die [P]",
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    envTable.ShowTargeted = scriptTable.config.ShowTargeted\n    envTable.ShowRaidMarked = scriptTable.config.ShowRaidMarked\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
					["UID"] = "0x63dd148012eb3a2",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
					["Time"] = 1683674519,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    envTable.ShowTargeted = scriptTable.config.ShowTargeted\n    envTable.ShowRaidMarked = scriptTable.config.ShowRaidMarked\n    \nend",
					["NpcNames"] = {
						"5913", -- [1]
						"53006", -- [2]
						"10467", -- [3]
						"97369", -- [4]
						"100943", -- [5]
						"78001", -- [6]
						"104818", -- [7]
						"97285", -- [8]
						"166523", -- [9]
						"55659", -- [10]
						"143622", -- [11]
						"3527", -- [12]
						"2630", -- [13]
						"6112", -- [14]
						"60561", -- [15]
						"199916", -- [16]
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend",
					["Revision"] = 756,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "ShowTargeted",
							["Value"] = true,
							["Name"] = "Show if Targeted",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Determines if the nameplate should be shown if you have the unit targeted",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "ShowRaidMarked",
							["Value"] = true,
							["Name"] = "Show if Raid Marked",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Determines if the nameplate should be shown if it has a raid mark applied",
						}, -- [2]
					},
					["ScriptType"] = 3,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Author"] = "Evolutious",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
					["Icon"] = 644389,
					["Prio"] = 99,
					["Name"] = "Hide Nameplate by UnitID",
					["PlaterCore"] = 1,
					["Enabled"] = true,
					["SpellIds"] = {
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
					["Desc"] = "Hide's nameplates based on the unit's name or npcID. Add the Unit Name or npcID as a trigger.",
				}, -- [33]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = true,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - On Going Cast [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots X Offset",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Dots Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Key"] = "speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Key"] = "minAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
				}, -- [34]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Show()\nend\n\n\n",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["Time"] = 1701163879,
					["Temp_Initialization"] = "function (scriptTable)\nend",
					["url"] = "https://wago.io/03uVqaHJI/1",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Show()\nend\n\n\n",
					["Enabled"] = true,
					["Revision"] = 106,
					["Options"] = {
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["Author"] = "Briarbreed-Area 52",
					["Initialization"] = "function (scriptTable)\nend",
					["Desc"] = "Hide Morchie nameplate during intermission.",
					["SpellIds"] = {
						404365, -- [1]
					},
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
					["Name"] = "Hide Morchie",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["version"] = 1,
					["semver"] = "1.0.0",
					["Icon"] = 644389,
				}, -- [35]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if not envTable.validUnit then return end\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    -- restore size/alpha\n    Plater.SetNameplateSize (unitFrame, envTable.defaultWidth, envTable.defaultHeight)\n    Plater.SetCastBarSize (unitFrame, envTable.defaultWidth, envTable.defaultHeight)\n    \n    --restore color\n    if scriptTable.config.changeNameplateColor then\n        Plater.DenyColorChange(unitFrame, false)\n    end\n    \n    envTable.validUnit = nil\n    \nend",
					["OptionsValues"] = {
						["creatureTypes"] = {
							{
								"Shadowfiend", -- [1]
								"Abberation", -- [2]
							}, -- [1]
							{
								"Psyfiend", -- [1]
								"Abberation", -- [2]
							}, -- [2]
							{
								"Ebon Gargoyle", -- [1]
								"Undead", -- [2]
							}, -- [3]
						},
						["defaultWidth"] = 10,
						["heightTable"] = {
						},
						["ignoreFriendly"] = false,
						["defaultHeight"] = 10,
						["npcColor"] = {
						},
						["nameplateColor"] = {
							1, -- [1]
							0, -- [2]
							0.9647059440612793, -- [3]
							1, -- [4]
						},
						["widthTable"] = {
						},
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    -- avoid changing nameplates of units which don't exist, have the wrong creature type or whose name has been mimic'd by Hunter pets\n    if  not UnitExists(unitId) then\n        return\n    end\n    \n    if scriptTable.config.ignoreFriendly and UnitIsFriend(\"player\", unitId) then return end\n    \n    local t = scriptTable.config.creatureTypes[unitFrame.namePlateUnitName]\n    if  (t and t ~= UnitCreatureType(unitId)) then\n        return \n    end\n    \n    if IsActiveBattlefieldArena() then\n        for i=1,5 do \n            \n            if UnitExists(\"arenapet\"..i) and UnitIsUnit(\"arenapet\"..i, unitId) and select(2, UnitClass(\"arena\"..i)) == \"HUNTER\" then\n                return\n            end\n            \n            if scriptTable.config.ignoreFriendlyHunterPets then\n                if UnitExists(\"party\"..i) and UnitExists(\"partypet\"..i) and UnitIsUnit(\"partypet\"..i, unitId) and select(2, UnitClass(\"party\"..i)) == \"HUNTER\" then\n                    return\n                end\n            end\n        end\n    end\n    \n    envTable.validUnit = true\n    \n    -- get the width/height data\n    envTable.defaultWidth, envTable.defaultHeight =  scriptTable.GetDefaultSize(unitId)\n    \n    \n    local tag = scriptTable.config.widthTable[npcId] and npcId or npcName\n    local widthOffsetValue = scriptTable.config.widthTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.widthTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultWidth\n    local heightOffsetValue = scriptTable.config.heightTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.heightTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultHeight\n    \n    local width = envTable.defaultWidth + widthOffsetValue\n    local height = envTable.defaultHeight + heightOffsetValue\n    \n    -- set size\n    Plater.SetNameplateSize (unitFrame, width, height)\n    Plater.SetCastBarSize (unitFrame, width, height)\n    \n    local color = scriptTable.config.npcColor[unitFrame.namePlateUnitName]\n    \n    Plater.SetNameplateColor(unitFrame, Plater.GetColorByPriority(unitFrame, color,  scriptTable.config.changeNameplateColor and scriptTable.config.nameplateColor or nil))\n    Plater.DenyColorChange(unitFrame, true)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["Temp_Initialization"] = "function (scriptTable)\n    scriptTable.GetDefaultSize = function(unitId)\n        local unitIsPlayer = UnitIsPlayer(unitId)\n        local unitIsFriendly = UnitIsFriend(\"player\", unitId)\n        if unitIsPlayer and unitIsFriendly then\n            return Plater.db.profile.plate_config.friendlyplayer.health_incombat [1], Plater.db.profile.plate_config.friendlyplayer.health_incombat [2]\n        elseif unitIsPlayer and not unitIsFriendly then\n            return Plater.db.profile.plate_config.enemyplayer.health_incombat [1], Plater.db.profile.plate_config.enemyplayer.health_incombat [2]\n        elseif not unitIsPlayer and unitIsFriendly then\n            return Plater.db.profile.plate_config.friendlynpc.health_incombat [1], Plater.db.profile.plate_config.friendlynpc.health_incombat [2]\n        else\n            return Plater.db.profile.plate_config.enemynpc.health_incombat [1], Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n    end\nend",
					["Time"] = 1701955835,
					["Icon"] = 135998,
					["url"] = "https://wago.io/1d1rWcAmP/2",
					["NpcNames"] = {
						"Shadowfiend", -- [1]
						"Psyfiend", -- [2]
						"Ebon Gargoyle", -- [3]
						"Cleansing Totem", -- [4]
						"Venomous Snake", -- [5]
						"Viper", -- [6]
						"Tremor Totem", -- [7]
						"Grounding Totem", -- [8]
						"Water Elemental", -- [9]
						"Incorporeal Being", -- [10]
						"Afflicted Soul", -- [11]
					},
					["semver"] = "1.0.1",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if not envTable.validUnit then return end\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    -- restore size/alpha\n    Plater.SetNameplateSize (unitFrame, envTable.defaultWidth, envTable.defaultHeight)\n    Plater.SetCastBarSize (unitFrame, envTable.defaultWidth, envTable.defaultHeight)\n    \n    --restore color\n    if scriptTable.config.changeNameplateColor then\n        Plater.DenyColorChange(unitFrame, false)\n    end\n    \n    envTable.validUnit = nil\n    \nend",
					["Revision"] = 54,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 6",
							["Value"] = "Enter the unit name in the \"Add Trigger\" box and hit \"Add\".",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = true,
							["Key"] = "changeNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set to true to change the default color of special units.",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.52549019607843, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set the preferred default color for special units.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Increase the nameplate height by this value (unless overriden by the specific table)",
							["Min"] = -100,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Nameplate Height Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "defaultHeight",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Increase the nameplate width by this value (unless overriden by the specific table)",
							["Min"] = -100,
							["Fraction"] = false,
							["Value"] = 31,
							["Name"] = "Nameplate Width Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "defaultWidth",
						}, -- [5]
						{
							["Type"] = 7,
							["Name"] = "NPC Type by Name or ID (Optional, used to keep Hunter pets from screwing things up)",
							["Value"] = {
								{
									"Shadowfiend", -- [1]
									"Abberation", -- [2]
								}, -- [1]
								{
									"Psyfiend", -- [1]
									"Abberation", -- [2]
								}, -- [2]
								{
									"Ebon Gargoyle", -- [1]
									"Undead", -- [2]
								}, -- [3]
							},
							["Key"] = "creatureTypes",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the unit name, value is the creature type",
						}, -- [6]
						{
							["Type"] = 7,
							["Name"] = "NPC Color by Name (Choose a special color for the unit)",
							["Value"] = {
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID/name, value is the color",
						}, -- [7]
						{
							["Type"] = 7,
							["Name"] = "NPC Nameplate Width by Name (Choose a special width for the units nameplate)",
							["Value"] = {
							},
							["Key"] = "widthTable",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID/name, value is the width",
						}, -- [8]
						{
							["Type"] = 7,
							["Name"] = "NPC Nameplate Height by Name (Choose a special height for the units nameplate)",
							["Value"] = {
							},
							["Key"] = "heightTable",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the name, value is the height",
						}, -- [9]
						{
							["Type"] = 4,
							["Name"] = "Ignore Friendly Hunter Pets",
							["Value"] = true,
							["Key"] = "ignoreFriendlyHunterPets",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "This option prevents Hunters in your group from griefing with pet naming.",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Ignore Friendly Units",
							["Value"] = false,
							["Key"] = "ignoreFriendly",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Ignores friendly units",
						}, -- [11]
					},
					["Desc"] = "Change the color and size of a nameplate of an important unit. Add the unit name into the trigger box to add more.",
					["version"] = 2,
					["Author"] = "Konjunktur-Firemaw",
					["Initialization"] = "function (scriptTable)\n    scriptTable.GetDefaultSize = function(unitId)\n        local unitIsPlayer = UnitIsPlayer(unitId)\n        local unitIsFriendly = UnitIsFriend(\"player\", unitId)\n        if unitIsPlayer and unitIsFriendly then\n            return Plater.db.profile.plate_config.friendlyplayer.health_incombat [1], Plater.db.profile.plate_config.friendlyplayer.health_incombat [2]\n        elseif unitIsPlayer and not unitIsFriendly then\n            return Plater.db.profile.plate_config.enemyplayer.health_incombat [1], Plater.db.profile.plate_config.enemyplayer.health_incombat [2]\n        elseif not unitIsPlayer and unitIsFriendly then\n            return Plater.db.profile.plate_config.friendlynpc.health_incombat [1], Plater.db.profile.plate_config.friendlynpc.health_incombat [2]\n        else\n            return Plater.db.profile.plate_config.enemynpc.health_incombat [1], Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n    end\nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    -- avoid changing nameplates of units which don't exist, have the wrong creature type or whose name has been mimic'd by Hunter pets\n    if  not UnitExists(unitId) then\n        return\n    end\n    \n    if scriptTable.config.ignoreFriendly and UnitIsFriend(\"player\", unitId) then return end\n    \n    local t = scriptTable.config.creatureTypes[unitFrame.namePlateUnitName]\n    if  (t and t ~= UnitCreatureType(unitId)) then\n        return \n    end\n    \n    if IsActiveBattlefieldArena() then\n        for i=1,5 do \n            \n            if UnitExists(\"arenapet\"..i) and UnitIsUnit(\"arenapet\"..i, unitId) and select(2, UnitClass(\"arena\"..i)) == \"HUNTER\" then\n                return\n            end\n            \n            if scriptTable.config.ignoreFriendlyHunterPets then\n                if UnitExists(\"party\"..i) and UnitExists(\"partypet\"..i) and UnitIsUnit(\"partypet\"..i, unitId) and select(2, UnitClass(\"party\"..i)) == \"HUNTER\" then\n                    return\n                end\n            end\n        end\n    end\n    \n    envTable.validUnit = true\n    \n    -- get the width/height data\n    envTable.defaultWidth, envTable.defaultHeight =  scriptTable.GetDefaultSize(unitId)\n    \n    \n    local tag = scriptTable.config.widthTable[npcId] and npcId or npcName\n    local widthOffsetValue = scriptTable.config.widthTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.widthTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultWidth\n    local heightOffsetValue = scriptTable.config.heightTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.heightTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultHeight\n    \n    local width = envTable.defaultWidth + widthOffsetValue\n    local height = envTable.defaultHeight + heightOffsetValue\n    \n    -- set size\n    Plater.SetNameplateSize (unitFrame, width, height)\n    Plater.SetCastBarSize (unitFrame, width, height)\n    \n    local color = scriptTable.config.npcColor[unitFrame.namePlateUnitName]\n    \n    Plater.SetNameplateColor(unitFrame, Plater.GetColorByPriority(unitFrame, color,  scriptTable.config.changeNameplateColor and scriptTable.config.nameplateColor or nil))\n    Plater.DenyColorChange(unitFrame, true)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Nameplate Remodelling",
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if not envTable.validUnit then return end\n    \n    -- get the width/height data\n    envTable.defaultWidth, envTable.defaultHeight =  scriptTable.GetDefaultSize(unitId)\n    \n    \n    local tag = scriptTable.config.widthTable[npcId] and npcId or npcName\n    local widthOffsetValue = scriptTable.config.widthTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.widthTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultWidth\n    local heightOffsetValue = scriptTable.config.heightTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.heightTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultHeight\n    \n    local width = envTable.defaultWidth + widthOffsetValue\n    local height = envTable.defaultHeight + heightOffsetValue\n    \n    -- set size\n    Plater.SetNameplateSize (unitFrame, width, height)\n    Plater.SetCastBarSize (unitFrame, width, height)\n    \n    local color = scriptTable.config.npcColor[unitFrame.namePlateUnitName]\n    \n    Plater.SetNameplateColor(unitFrame, Plater.GetColorByPriority(unitFrame, color,  scriptTable.config.changeNameplateColor and scriptTable.config.nameplateColor or nil))\n    Plater.DenyColorChange(unitFrame, true)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Enabled"] = true,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if not envTable.validUnit then return end\n    \n    -- get the width/height data\n    envTable.defaultWidth, envTable.defaultHeight =  scriptTable.GetDefaultSize(unitId)\n    \n    \n    local tag = scriptTable.config.widthTable[npcId] and npcId or npcName\n    local widthOffsetValue = scriptTable.config.widthTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.widthTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultWidth\n    local heightOffsetValue = scriptTable.config.heightTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.heightTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultHeight\n    \n    local width = envTable.defaultWidth + widthOffsetValue\n    local height = envTable.defaultHeight + heightOffsetValue\n    \n    -- set size\n    Plater.SetNameplateSize (unitFrame, width, height)\n    Plater.SetCastBarSize (unitFrame, width, height)\n    \n    local color = scriptTable.config.npcColor[unitFrame.namePlateUnitName]\n    \n    Plater.SetNameplateColor(unitFrame, Plater.GetColorByPriority(unitFrame, color,  scriptTable.config.changeNameplateColor and scriptTable.config.nameplateColor or nil))\n    Plater.DenyColorChange(unitFrame, true)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [36]
			},
			["saved_cvars_last_change"] = {
				["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:14006: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:14004>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:775: in function <Interface/AddOns/Details/Libs/DF/slider.lua:726>\n",
				["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:14104: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:14102>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:775: in function <Interface/AddOns/Details/Libs/DF/slider.lua:726>\n",
				["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMinAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4823: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4821: in function <Interface/AddOns/Plater/Plater.lua:4821>\n",
				["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["clampTargetNameplateToScreen"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:14088: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:14086>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:775: in function <Interface/AddOns/Details/Libs/DF/slider.lua:726>\n",
				["nameplateTargetBehindMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:100: in function `SetCVar'\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:129: in function `CVarReset'\n[string \"@Interface/AddOns/ElvUI/Core/General/Install.lua\"]:171: in function `SetupCVars'\n[string \"@Interface/AddOns/ElvUI_GennUI/core/chat.lua\"]:113: in function `SetupChat'\n[string \"@Interface/AddOns/ElvUI_GennUI/init.lua\"]:66: in function <Interface/AddOns/ElvUI_GennUI/init.lua:66>\n",
				["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"ALLNAMEPLATES\"]:4: in function <[string \"ALLNAMEPLATES\"]:1>\n",
				["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateSelectedAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4825: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4821: in function <Interface/AddOns/Plater/Plater.lua:4821>\n",
				["nameplateMotionSpeed"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:100: in function `SetCVar'\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:119: in function `CVarReset'\n[string \"@Interface/AddOns/ElvUI/Core/General/Install.lua\"]:171: in function `SetupCVars'\n[string \"@Interface/AddOns/ElvUI_GennUI/core/chat.lua\"]:113: in function `SetupChat'\n[string \"@Interface/AddOns/ElvUI_GennUI/init.lua\"]:66: in function <Interface/AddOns/ElvUI_GennUI/init.lua:66>\n",
				["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13630",
				["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:14056: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:14054>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:775: in function <Interface/AddOns/Details/Libs/DF/slider.lua:726>\n",
				["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriends"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"FRIENDNAMEPLATES\"]:3: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
				["nameplateMotion"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6940",
				["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4824: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4821: in function <Interface/AddOns/Plater/Plater.lua:4821>\n",
				["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater.lua:2204",
				["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:14072: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:14070>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:775: in function <Interface/AddOns/Details/Libs/DF/slider.lua:726>\n",
				["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:100: in function `SetCVar'\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:120: in function `CVarReset'\n[string \"@Interface/AddOns/ElvUI/Core/General/Install.lua\"]:171: in function `SetupCVars'\n[string \"@Interface/AddOns/ElvUI_GennUI/core/chat.lua\"]:113: in function `SetupChat'\n[string \"@Interface/AddOns/ElvUI_GennUI/init.lua\"]:66: in function <Interface/AddOns/ElvUI_GennUI/init.lua:66>\n",
				["nameplateLargeTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:100: in function `SetCVar'\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:112: in function `CVarReset'\n[string \"@Interface/AddOns/ElvUI/Core/General/Install.lua\"]:171: in function `SetupCVars'\n[string \"@Interface/AddOns/ElvUI_GennUI/core/chat.lua\"]:113: in function `SetupChat'\n[string \"@Interface/AddOns/ElvUI_GennUI/init.lua\"]:66: in function <Interface/AddOns/ElvUI_GennUI/init.lua:66>\n",
				["nameplateShowOnlyNames"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6975: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6973>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Plater/libs/DF/slider.lua\"]:773: in function <Interface/AddOns/Plater/libs/DF/slider.lua:724>\n",
				["nameplateShowEnemyGuardians"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13582",
				["nameplateLargerScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:100: in function `SetCVar'\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:111: in function `CVarReset'\n[string \"@Interface/AddOns/ElvUI/Core/General/Install.lua\"]:171: in function `SetupCVars'\n[string \"@Interface/AddOns/ElvUI_GennUI/core/chat.lua\"]:113: in function `SetupChat'\n[string \"@Interface/AddOns/ElvUI_GennUI/init.lua\"]:66: in function <Interface/AddOns/ElvUI_GennUI/init.lua:66>\n",
			},
			["blizzard_nameplate_font_override_enabled"] = true,
			["target_shady_enabled"] = false,
			["aura2_y_offset"] = 10,
			["extra_icon_caster_size"] = 8,
			["buffs_on_aura2"] = true,
			["indicator_quest"] = false,
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["cast_statusbar_color_nointerrupt"] = {
				0.8392156862745098, -- [1]
				0.08627450980392157, -- [2]
				0.08627450980392157, -- [3]
				1, -- [4]
			},
			["extra_icon_cooldown_reverse"] = false,
			["npc_cache"] = {
				[40788] = {
					"Mindbender Ghur'sha", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[169421] = {
					"Felguard", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[188100] = {
					"Cría estridente", -- [1]
					"La Bóveda Azur", -- [2]
				},
				[190403] = {
					"Protodragón glacial", -- [1]
					"Salas de Infusión", -- [2]
				},
				[168398] = {
					"Bocado limoso", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[195265] = {
					"Clamatormentas Arynga", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[183495] = {
					"Twisted Worldeater", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[99200] = {
					"Dresaron", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[190404] = {
					"Subterranean Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[120182] = {
					"Tormented Priestess", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[189893] = {
					"Infused Whelp", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[98177] = {
					"Glayvianna Soulrender", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[190405] = {
					"Infusora Sariya", -- [1]
					"Salas de Infusión", -- [2]
				},
				[180426] = {
					"Feeding Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164562] = {
					"Maestra de canes depravada", -- [1]
					"Salones de Expiación", -- [2]
				},
				[183497] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[164563] = {
					"Gargon sañoso", -- [1]
					"Salones de Expiación", -- [2]
				},
				[205759] = {
					"Whirling Torrent", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[91781] = {
					"Hatecoil Warrior", -- [1]
					"Eye of Azshara", -- [2]
				},
				[169425] = {
					"Felhound", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[196548] = {
					"Rama antigua", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[168658] = {
					"Forsworn Devastator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165076] = {
					"Garrapata glotona", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[169426] = {
					"Infernal", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[200387] = {
					"Infestador desgarbado", -- [1]
					"Templo del Dragón de Jade", -- [2]
				},
				[180429] = {
					"Astrovidente ornamentado", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[91782] = {
					"Hatecoil Crusher", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[167892] = {
					"Tormented Soul", -- [1]
					"Halls of Atonement", -- [2]
				},
				[98691] = {
					"Risen Scout", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[201668] = {
					"Neltharion", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[180431] = {
					"Ritualista concentrado", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[91783] = {
					"Hatecoil Stormweaver", -- [1]
					"Eye of Azshara", -- [2]
				},
				[169429] = {
					"Shivarra", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[180432] = {
					"Cómplice devoto", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[190923] = {
					"Zephyrling", -- [1]
					"Halls of Infusion", -- [2]
				},
				[213696] = {
					"Molten Scorpid", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[26800] = {
					"Alliance Berserker", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[169430] = {
					"Ur'zul", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[78734] = {
					"Zipteq", -- [1]
					"Auchindoun", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[180433] = {
					"Entidad desconocida", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[131817] = {
					"Cragmaw the Infested", -- [1]
					"The Underrot", -- [2]
				},
				[102019] = {
					"Stormforged Obliterator", -- [1]
					"Halls of Valor", -- [2]
				},
				[189901] = {
					"Warlord Sargha", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[170199] = {
					"Harnessed Specter", -- [1]
					"Castle Nathria", -- [2]
				},
				[98693] = {
					"Shackled Servitor", -- [1]
					"Maw of Souls", -- [2]
				},
				[129526] = {
					"Bilge Rat Swabby", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[98949] = {
					"Smashspite the Hateful", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[200137] = {
					"Tejedor de niebla depravado", -- [1]
					"Templo del Dragón de Jade", -- [2]
				},
				[178388] = {
					"Bazaar Strongarm", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[152033] = {
					"Inconspicuous Plant", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[131819] = {
					"Adivina del aquelarre", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[67093] = {
					"Sik'thik Battle-Mender", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[197835] = {
					"Kaurdyth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196044] = {
					"Unruly Textbook", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184018] = {
					"Bromach", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
					"enUS", -- [3]
				},
				[102404] = {
					"Amo de Larvas Garrapétrea", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[100485] = {
					"Soul-torn Vanguard", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[176598] = {
					"Torment Golem", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[102788] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[173016] = {
					"Recolector de cadáveres", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[196045] = {
					"Maligno de maná corrupto", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[184019] = {
					"Lanzarrocas fornido", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
					"enUS", -- [3]
				},
				[101637] = {
					"Aspirante Valarjar", -- [1]
					"Salones del Valor", -- [2]
				},
				[120188] = {
					"Wailing Soul", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[91786] = {
					"Gritslime Snail", -- [1]
					"Eye of Azshara", -- [2]
				},
				[175576] = {
					"Containment Cell", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[102277] = {
					"Deadeye Decoy", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[126969] = {
					"Trothak", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[100486] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[113536] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[196559] = {
					"Volatile Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[178392] = {
					"Guardián de la puerta Zo'mazz", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[133870] = {
					"Azotador enfermo", -- [1]
					"Bardoma", -- [2]
				},
				[91787] = {
					"Cove Seagull", -- [1]
					"Eye of Azshara", -- [2]
				},
				[184022] = {
					"Geomante grutacanto", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
				},
				[26737] = {
					"Crazed Mana-Surge", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[113537] = {
					"Dominador Cascarascuas", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[26929] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[101639] = {
					"Doncella escudera Valarjar", -- [1]
					"Salones del Valor", -- [2]
				},
				[81297] = {
					"Dreadfang", -- [1]
					"Iron Docks", -- [2]
				},
				[39705] = {
					"Ascendant Lord Obsidius", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[178139] = {
					"Rompevalvas salsombría", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[200912] = {
					"Neldris", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[164578] = {
					"Creación de Suturas", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[200913] = {
					"Thadrion", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[150250] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[177117] = {
					"Orb of Torment", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[79507] = {
					"Felguard", -- [1]
					"Auchindoun", -- [2]
				},
				[178141] = {
					"Vinculaescamas salsombría", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[137713] = {
					"Big Money Crab", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[150251] = {
					"Mecánico pistonero", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[98954] = {
					"Felsworn Myrmidon", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[178142] = {
					"Pescamante salsombría", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[137458] = {
					"Rotting Spore", -- [1]
					"The Underrot", -- [2]
				},
				[199124] = {
					"Primalist Chillblaster", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[91790] = {
					"Mak'rana Siltwalker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[126845] = {
					"Captain Jolly", -- [1]
					"Freehold", -- [2]
				},
				[131318] = {
					"Elder Leaxa", -- [1]
					"The Underrot", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[150253] = {
					"Reptador armado", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[168932] = {
					"Doomguard", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[82579] = {
					"Clarividente Grom'kar", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[129788] = {
					"Sierraósea mareaférrea", -- [1]
					"Puerto Libre", -- [2]
				},
				[190426] = {
					"Tótem de descomposición", -- [1]
					"Hondonada Frondacuero", -- [2]
				},
				[198870] = {
					"Sundered Preserver", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[150254] = {
					"Chataperro", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[95885] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[177889] = {
					"Juzgaalmas fauceforjada", -- [1]
					"Sagrario de Dominación", -- [2]
				},
				[200918] = {
					"Rionthus", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[117123] = {
					"Tidescale Legionnaire", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[168934] = {
					"Espíritu enfurecido", -- [1]
					"El Otro Lado", -- [2]
				},
				[26802] = {
					"Alliance Ranger", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[26930] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[120194] = {
					"Ghostly Acolyte", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[45912] = {
					"Vórtice salvaje", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[177891] = {
					"Entidad desconocida", -- [1]
					"Sagrario de Dominación", -- [2]
				},
				[100364] = {
					"Spirit of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[198873] = {
					"Sundered Edgelord", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[134137] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[190174] = {
					"Hypnosis Bat", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[190686] = {
					"Frozen Destroyer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[77080] = {
					"Sargerei Arbiter", -- [1]
					"Auchindoun", -- [2]
				},
				[168681] = {
					"Vándalo Rechazado", -- [1]
					"Torres de Ascensión", -- [2]
				},
				[197595] = {
					"Earthwrought Smasher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[79511] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[96015] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[126848] = {
					"Captain Eudora", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[94224] = {
					"Entidad desconocida", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[76057] = {
					"Gusano carroñero", -- [1]
					"Cementerios de Sombraluna", -- [2]
				},
				[136186] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[173800] = {
					"Sewer Rat", -- [1]
					"Castle Nathria", -- [2]
				},
				[186338] = {
					"Maruuk", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[172265] = {
					"Remanente de furia", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[160495] = {
					"Atrapaalmas maníaco", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[39708] = {
					"Twilight Flame Caller", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[91794] = {
					"Saltscale Lurker", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[186339] = {
					"Teera", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[202971] = {
					"Null Glimmer", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[169196] = {
					"Crimson Cabalist", -- [1]
					"Castle Nathria", -- [2]
				},
				[192481] = {
					"Entidad desconocida", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[190690] = {
					"Thundering Ravager", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[118022] = {
					"Infernal Chaosbringer", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[81432] = {
					"Técnico Grom'kar", -- [1]
					"Muelles de hierro", -- [2]
				},
				[114312] = {
					"Moroes", -- [1]
					"Return to Karazhan", -- [2]
				},
				[194273] = {
					"Witherling", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[196576] = {
					"Cetro encantado", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[127106] = {
					"Oficial mareaférrea", -- [1]
					"Puerto Libre", -- [2]
				},
				[190947] = {
					"Altered Wymling", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[96657] = {
					"Blade Dancer Illianna", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[168942] = {
					"Portavoz de la muerte", -- [1]
					"El Otro Lado", -- [2]
				},
				[142587] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[165872] = {
					"Modelador de carne", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[200927] = {
					"Smolderon", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[99728] = {
					"Grimguard", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[134144] = {
					"Living Current", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[91796] = {
					"Skrog Wavecrasher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[102287] = {
					"Dominador Cascarascuas", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[205790] = {
					"Time-Lost Smack-o-Tron", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[101008] = {
					"Entidad desconocida", -- [1]
					"Fuerte Torre Oscura", -- [2]
					"enUS", -- [3]
				},
				[97170] = {
					"Hatecoil Wavebinder", -- [1]
					"Eye of Azshara", -- [2]
				},
				[135169] = {
					"Entidad desconocida", -- [1]
					"Bardoma", -- [2]
				},
				[196835] = {
					"Kroshk", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[170480] = {
					"Caminamuerte Atal'ai", -- [1]
					"El Otro Lado", -- [2]
				},
				[191206] = {
					"Primalist Mage", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[91797] = {
					"King Deepbeard", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[40925] = {
					"Avizor corrupto", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[98706] = {
					"Commander Shemdah'sohn", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[86552] = {
					"Gorged Burster", -- [1]
					"The Everbloom", -- [2]
				},
				[97043] = {
					"Seacursed Slaver", -- [1]
					"Maw of Souls", -- [2]
				},
				[97171] = {
					"Hatecoil Arcanist", -- [1]
					"Eye of Azshara", -- [2]
				},
				[162038] = {
					"Bailarín de la niebla regio", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[45915] = {
					"Mistral acorazado", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[81819] = {
					"Everbloom Naturalist", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[184300] = {
					"Gólem de rocaébano", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
				},
				[162039] = {
					"Opresora siniestra", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[76446] = {
					"Dominador de Sombraluna", -- [1]
					"Cementerios de Sombraluna", -- [2]
				},
				[86809] = {
					"Incineradora Grom'kar", -- [1]
					"Muelles de hierro", -- [2]
				},
				[97172] = {
					"Saltsea Droplet", -- [1]
					"Eye of Azshara", -- [2]
				},
				[184301] = {
					"Buscador de caverna", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
				},
				[162040] = {
					"Gran sobrestante", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[120201] = {
					"Spectral Guardian", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[114316] = {
					"Baroness Dorothea Millstipe", -- [1]
					"Return to Karazhan", -- [2]
				},
				[81820] = {
					"Everbloom Mender", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[173044] = {
					"Asistente de costuras", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[97173] = {
					"Restless Tides", -- [1]
					"Eye of Azshara", -- [2]
				},
				[184303] = {
					"Reptador sigiloso", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
					"enUS", -- [3]
				},
				[137478] = {
					"Queen Wasi", -- [1]
					"Kings' Rest", -- [2]
				},
				[156157] = {
					"Coldheart Ascendant", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[131849] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[95766] = {
					"Crazed Razorbeak", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[114317] = {
					"Lady Catriona Von'Indi", -- [1]
					"Return to Karazhan", -- [2]
				},
				[204262] = {
					"Necrofrost", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[126983] = {
					"Harlan Sweete", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[127111] = {
					"Remero mareaférrea", -- [1]
					"Puerto Libre", -- [2]
				},
				[131850] = {
					"Superviviente enajenado", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[54552] = {
					"Time-Twisted Breaker", -- [1]
					"End Time", -- [2]
					"enUS", -- [3]
				},
				[98965] = {
					"Kur'talos Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[175861] = {
					"Glacial Spike", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[213219] = {
					"Congealed Ooze", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[205799] = {
					"Cinderstep Melter", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[114318] = {
					"Baron Rafe Dreuger", -- [1]
					"Return to Karazhan", -- [2]
				},
				[178165] = {
					"Goliat caminacosta", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[191215] = {
					"Tarasek Legionnaire", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[199659] = {
					"Warlord Kagni", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[82590] = {
					"Exploradora de Riel siniestro", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[170490] = {
					"Sumo sacerdote Atal'ai", -- [1]
					"El Otro Lado", -- [2]
				},
				[150276] = {
					"Robot chatarra pesado", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[164861] = {
					"Zurcecorteza spriggan", -- [1]
					"El Otro Lado", -- [2]
				},
				[75426] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[151812] = {
					"Detect-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[96664] = {
					"Gravacuevas Valarjar", -- [1]
					"Salones del Valor", -- [2]
				},
				[134157] = {
					"Shadow-Borne Warrior", -- [1]
					"Kings' Rest", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[74787] = {
					"Slave Watcher Crushto", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[137484] = {
					"King A'akul", -- [1]
					"Kings' Rest", -- [2]
				},
				[174842] = {
					"Belligerent Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[95769] = {
					"Mindshattered Screecher", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[114320] = {
					"Lord Robin Daris", -- [1]
					"Return to Karazhan", -- [2]
				},
				[171772] = {
					"Defensora de Veloniebla", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[174843] = {
					"Stoneborn Maitre D'", -- [1]
					"Castle Nathria", -- [2]
				},
				[205804] = {
					"Dragón resucitado", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[26805] = {
					"Alliance Cleric", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[84767] = {
					"Twisted Abomination", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[61910] = {
					"Resin Flake", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[180473] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[114321] = {
					"Lord Crispin Ference", -- [1]
					"Return to Karazhan", -- [2]
				},
				[187894] = {
					"Infused Whelp", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[102295] = {
					"Emberhusk Dominator", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[178171] = {
					"Guardián tronaforjado", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[200944] = {
					"Nokhud Fighter", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[207341] = {
					"Blistering Spear", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[183033] = {
					"Grim Reflection", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[134417] = {
					"Deepsea Ritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[208365] = {
					"Aerwynn", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[179963] = {
					"Terror Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[200945] = {
					"Nokhud Warmonger", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[182778] = {
					"Collapsing Quasar", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[191222] = {
					"Juvenile Frost Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[95771] = {
					"Dreadsoul Ruiner", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[134418] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[104215] = {
					"Patrol Captain Gerdo", -- [1]
					"Court of Stars", -- [2]
				},
				[120719] = {
					"Lunar Priestess", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[59544] = {
					"El Tigre Asertivo", -- [1]
					"Templo del Dragón de Jade", -- [2]
				},
				[168962] = {
					"Reborn Phoenix", -- [1]
					"Castle Nathria", -- [2]
				},
				[206064] = {
					"Coalesced Moment", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[59800] = {
					"Krik'thik Rager", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[118289] = {
					"Maiden of Vigilance", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[45919] = {
					"Dragón de tormenta joven", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[96028] = {
					"Wrath of Azshara", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[186107] = {
					"Vault Keeper", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[191225] = {
					"Tarasek Earthreaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[129548] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
				},
				[206066] = {
					"Parásito del flujo temporal", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[127757] = {
					"Reanimated Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[196855] = {
					"Braekkas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[172803] = {
					"Afterimage of Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[104217] = {
					"Talixae Flamewreath", -- [1]
					"Court of Stars", -- [2]
				},
				[77734] = {
					"Teron'gor", -- [1]
					"Auchindoun", -- [2]
				},
				[162057] = {
					"Centinela de la cámara", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[59545] = {
					"El Alfazaque Dorado", -- [1]
					"Templo del Dragón de Jade", -- [2]
				},
				[131864] = {
					"Gorak Tul", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[136214] = {
					"Windspeaker Heldis", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[191739] = {
					"Scalebane Lieutenant", -- [1]
					"The Azure Vault", -- [2]
				},
				[59801] = {
					"Krik'thik Wind Shaper", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[80805] = {
					"Makogg Hoja de brasal", -- [1]
					"Muelles de hierro", -- [2]
				},
				[184319] = {
					"Refti Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
					"enUS", -- [3]
				},
				[133912] = {
					"Profanador jurasangre", -- [1]
					"Bardoma", -- [2]
				},
				[164873] = {
					"Vetecuerno venado rúnico", -- [1]
					"El Otro Lado", -- [2]
				},
				[43873] = {
					"Altairus", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[104218] = {
					"Advisor Melandrus", -- [1]
					"Court of Stars", -- [2]
					"enUS", -- [3]
				},
				[190205] = {
					"Scorchling", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[192764] = {
					"Guardiano della Fiamma", -- [1]
					"Segrete delle Incarnazioni", -- [2]
				},
				[164362] = {
					"Bocado limoso", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[201464] = {
					"Cinderstep Weaver", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[195579] = {
					"Primal Gust", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[82597] = {
					"Capitana Grom'kar", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[97182] = {
					"Night Watch Mariner", -- [1]
					"Maw of Souls", -- [2]
				},
				[191230] = {
					"Dragonspawn Flamebender", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[195580] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190207] = {
					"Tejecenizas primalista", -- [1]
					"Estanques de Vida Rubí", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[201466] = {
					"Cinderstep Igniter", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[185346] = {
					"Dominated Eradicator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[167691] = {
					"Stasis Trap", -- [1]
					"Castle Nathria", -- [2]
				},
				[80935] = {
					"Explotador Grom'kar", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[192767] = {
					"Primal Icebulk", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191232] = {
					"Drakonid Stormbringer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163086] = {
					"Bolsa de gas rancio", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[210423] = {
					"Keeper of the Dream", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[184580] = {
					"Olaf", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
				},
				[187139] = {
					"Crystal Thrasher", -- [1]
					"La Bóveda Azur", -- [2]
				},
				[132126] = {
					"Gilded Priestess", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[206074] = {
					"Péndulo", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[186116] = {
					"Gutshot", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[99359] = {
					"Rotheart Keeper", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[184581] = {
					"Baelog", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
					"enUS", -- [3]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168973] = {
					"High Torturer Darithos", -- [1]
					"Castle Nathria", -- [2]
				},
				[114584] = {
					"Equipo fantasma", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[102430] = {
					"Tarspitter Slug", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[184582] = {
					"Eric \"The Swift\"", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
					"enUS", -- [3]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[205820] = {
					"Crawling Goo", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[210170] = {
					"Zaqali Flamemancer", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[80937] = {
					"Artillero Grom'kar", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[176395] = {
					"Elemental postal sobrecargado", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[201471] = {
					"Earthborne Charger", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[77483] = {
					"Artillero Grom'kar", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[98081] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[176396] = {
					"Defective Sorter", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[150297] = {
					"Renormalizadora de Mecalópolis", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[84520] = {
					"Pitwarden Gwarnok", -- [1]
					"Iron Docks", -- [2]
				},
				[210172] = {
					"Zaqali Juggernaut", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[186120] = {
					"Treemouth", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[80938] = {
					"Mole Grom'kar", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[185353] = {
					"Huntmaster", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[114330] = {
					"Babblet", -- [1]
					"Return to Karazhan", -- [2]
				},
				[186121] = {
					"Decatriarch Wratheye", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[127124] = {
					"Freehold Barhand", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[186122] = {
					"Rira Hachagarra", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[184331] = {
					"Atracadora del Tiempo Infinito", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
				},
				[153882] = {
					"Deadsoul Spirit", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[193799] = {
					"Entidad desconocida", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[196102] = {
					"Azotador conjurado", -- [1]
					"La Bóveda Azur", -- [2]
				},
				[163862] = {
					"Defensora de muchos ojos", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[54431] = {
					"Echo of Baine", -- [1]
					"End Time", -- [2]
					"enUS", -- [3]
				},
				[193544] = {
					"Nokhudon Houndsman", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189706] = {
					"Chaotic Essence", -- [1]
					"Castle Nathria", -- [2]
				},
				[151325] = {
					"Alarm-o-Bot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[180495] = {
					"Enraged Direhorn", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[185357] = {
					"Sentry", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[189707] = {
					"Chaotic Mote", -- [1]
					"Castle Nathria", -- [2]
				},
				[186125] = {
					"Trucatótem", -- [1]
					"Hondonada Frondacuero", -- [2]
				},
				[165911] = {
					"Creación leal", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[201222] = {
					"Valow, Vigilante vetusto", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[96677] = {
					"Oso pardo Quijacero", -- [1]
					"Salones del Valor", -- [2]
				},
				[184335] = {
					"Agente infinito", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
					"enUS", -- [3]
				},
				[201223] = {
					"Magus Crepuscular infinito", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[193291] = {
					"Alardiente alfa", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[45924] = {
					"Borrasca turbulenta", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[194315] = {
					"Clamatormentas Solongo", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[176404] = {
					"Dark Sentinel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[106785] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[195851] = {
					"Portavoz de la muerte ukhel", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[54688] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
					"enUS", -- [3]
				},
				[194316] = {
					"Clamatormentas Zarii", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[99365] = {
					"Taintheart Stalker", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[192781] = {
					"Ore Elemental", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[193293] = {
					"Celador qalashi", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[61213] = {
					"Krik'thik Conscript", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[114334] = {
					"Damaged Golem", -- [1]
					"Return to Karazhan", -- [2]
				},
				[210437] = {
					"Verdant Boughwalker", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[194317] = {
					"Clamatormentas Boroo", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[167962] = {
					"Taladro dental destrozado", -- [1]
					"El Otro Lado", -- [2]
				},
				[172312] = {
					"Atiborrador espinafauces", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[106786] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[138281] = {
					"Corruptor ignoto", -- [1]
					"Bardoma", -- [2]
				},
				[45477] = {
					"Soldado de ráfaga", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[99366] = {
					"Taintheart Summoner", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[187154] = {
					"Arcane Curator", -- [1]
					"The Azure Vault", -- [2]
				},
				[185363] = {
					"Manifestor Krugan", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[43878] = {
					"Grand Vizier Ertan", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[212483] = {
					"Gnarled Roots", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[145185] = {
					"Gnomercy 4.U.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"El Otro Lado", -- [2]
				},
				[82594] = {
					"Estibador de Riel siniestro", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[106787] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[187155] = {
					"Rune Seal Keeper", -- [1]
					"The Azure Vault", -- [2]
				},
				[168988] = {
					"Overgrowth", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[195855] = {
					"Risen Warrior", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[134701] = {
					"Blood Effigy", -- [1]
					"The Underrot", -- [2]
				},
				[80816] = {
					"Ahri'ok Dugru", -- [1]
					"Muelles de hierro", -- [2]
				},
				[167965] = {
					"Lubricante", -- [1]
					"El Otro Lado", -- [2]
				},
				[186644] = {
					"Leymor", -- [1]
					"The Azure Vault", -- [2]
				},
				[199182] = {
					"Jumping Spiderling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[1863] = {
					"Shah-sahar", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[193553] = {
					"Nokhudon Warhound", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[120477] = {
					"Deep Stalker", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[54553] = {
					"Time-Twisted Seer", -- [1]
					"End Time", -- [2]
					"enUS", -- [3]
				},
				[40936] = {
					"Vigía ignoto", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[165919] = {
					"Merodeador esqueletal", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[137517] = {
					"Ashvane Destroyer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[189669] = {
					"Binding Spear", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[203763] = {
					"Alliance Footman", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[105636] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[129550] = {
					"Bilge Rat Padfoot", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[76595] = {
					"Sargerei Soulpriest", -- [1]
					"Auchindoun", -- [2]
				},
				[171805] = {
					"Escriba investigadora", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[190484] = {
					"Kyrakka", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[192787] = {
					"Rompespaldas qalashi", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[102781] = {
					"Murciélago vil cachorro", -- [1]
					"Fuerte Torre Oscura", -- [2]
					"enUS", -- [3]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[174071] = {
					"Gargon sañoso", -- [1]
					"Castillo Nathria", -- [2]
				},
				[197905] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[210436] = {
					"Flowering Lasher", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[163618] = {
					"Nigromante de Zolramus", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[190485] = {
					"Erkhart Stormvein", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[192788] = {
					"Taumaturga qalashi", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[205326] = {
					"Gust Soldier", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[187159] = {
					"Cría estridente", -- [1]
					"La Bóveda Azur", -- [2]
				},
				[168992] = {
					"Cultista resucitado", -- [1]
					"El Otro Lado", -- [2]
				},
				[195842] = {
					"Corruptor ukhel", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[163619] = {
					"Zolramus Bonecarver", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[97677] = {
					"Barbed Spiderling", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[192789] = {
					"Arco largo nokhud", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[167116] = {
					"Atracador espinafauces", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[187160] = {
					"Furia de cristal", -- [1]
					"La Bóveda Azur", -- [2]
				},
				[191510] = {
					"Smoldering Hellion", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[189719] = {
					"Watcher Irideus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[196116] = {
					"Furia de cristal", -- [1]
					"La Bóveda Azur", -- [2]
				},
				[163620] = {
					"Gangrenoso", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[75829] = {
					"Nhallish", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[59552] = {
					"El Hozen Llorica", -- [1]
					"Templo del Dragón de Jade", -- [2]
				},
				[168907] = {
					"Tentáculo de baba", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[193558] = {
					"Primalist Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[133852] = {
					"Living Rot", -- [1]
					"The Underrot", -- [2]
				},
				[196117] = {
					"Crystal Thrasher", -- [1]
					"La Bóveda Azur", -- [2]
				},
				[163621] = {
					"Muelecarne", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[83761] = {
					"Trabajador ogron", -- [1]
					"Muelles de hierro", -- [2]
				},
				[192791] = {
					"Nokhud Warspear", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[200936] = {
					"Fiamma Vivente", -- [1]
					"Segrete delle Incarnazioni", -- [2]
				},
				[97678] = {
					"Aranasi Broodmother", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[195821] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[98963] = {
					"Blazing Imp", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[100248] = {
					"Ritualist Lesha", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[182045] = {
					"Necrotic Ritualist", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[39978] = {
					"Twilight Torturer", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[198933] = {
					"Iridikron", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[133685] = {
					"Espíritu turbio", -- [1]
					"Bardoma", -- [2]
				},
				[197398] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[189466] = {
					"Comandante de antorcha de hierro", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[189722] = {
					"Gulping Goliath", -- [1]
					"Halls of Infusion", -- [2]
				},
				[165414] = {
					"Desintegrador depravado", -- [1]
					"Salones de Expiación", -- [2]
				},
				[101414] = {
					"Saltscale Skulker", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[95886] = {
					"Ash'Golm", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[131383] = {
					"Sporecaller Zancha", -- [1]
					"The Underrot", -- [2]
				},
				[189467] = {
					"Partehuesos qalashi", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[176929] = {
					"Remnant of Kel'Thuzad", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[205843] = {
					"Cinderstep Melter", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[65310] = {
					"Naba de boxeo", -- [1]
					"Torres de Ascensión", -- [2]
				},
				[83763] = {
					"Técnico Grom'kar", -- [1]
					"Muelles de hierro", -- [2]
				},
				[165111] = {
					"Garra maliciosa drust", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[198872] = {
					"Sundered Manaweaver", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[192794] = {
					"Nokhud Beastmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[59553] = {
					"La Reina Cantora", -- [1]
					"Templo del Dragón de Jade", -- [2]
				},
				[26746] = {
					"Crazed Mana-Wraith", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[199703] = {
					"Magma Mystic", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[95887] = {
					"Glazer", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[173604] = {
					"Sinister Antiquarian", -- [1]
					"Castle Nathria", -- [2]
				},
				[59873] = {
					"Agua viviente corrupta", -- [1]
					"Templo del Dragón de Jade", -- [2]
				},
				[45672] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[133432] = {
					"Venture Co. Alchemist", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[126847] = {
					"Captain Raoul", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[196115] = {
					"Cuidador arcano", -- [1]
					"La Bóveda Azur", -- [2]
				},
				[176581] = {
					"Spiked Ball", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[45928] = {
					"Ejecutor del califa", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[83764] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[83892] = {
					"Life Warden Gola", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[163882] = {
					"Gigante de carne descompuesto", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[192796] = {
					"Soplacuernos nokhud", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[210150] = {
					"Flametouched Enforcer", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[91808] = {
					"Serpentrix", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[189470] = {
					"Bengala de lava", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[86684] = {
					"Azotador feroz", -- [1]
					"El Sempibrote", -- [2]
				},
				[189886] = {
					"Blazebound Firestorm", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[167956] = {
					"Acólita oscura", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[76296] = {
					"Twisted Magus", -- [1]
					"Auchindoun", -- [2]
				},
				[188703] = {
					"Protoform Barrier", -- [1]
					"Castle Nathria", -- [2]
				},
				[197147] = {
					"Qalashi Honor Guard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[207638] = {
					"Blight of Galakrond", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[193565] = {
					"Nokhudon Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189727] = {
					"Khajin the Unyielding", -- [1]
					"Halls of Infusion", -- [2]
				},
				[75193] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[83893] = {
					"Earthshaper Telu", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[210147] = {
					"Harbinger of Incineration", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[187638] = {
					"Flamescale Tarasek", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[84499] = {
					"Entanglement", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[207639] = {
					"Blight of Galakrond", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[189472] = {
					"Ser de lava qalashi", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[59746] = {
					"Scarlet Centurion", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[212981] = {
					"Hapless Assistant", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[89011] = {
					"Rylak Skyterror", -- [1]
					"Iron Docks", -- [2]
				},
				[197149] = {
					"Lavamante Qalashi", -- [1]
					"Segrete delle Incarnazioni", -- [2]
				},
				[101549] = {
					"Arcane Minion", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[205337] = {
					"Manipuladora del tiempo infinito", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[75194] = {
					"Gnasher", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[163089] = {
					"Desechos asquerosos", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[189729] = {
					"Primal Tsunami", -- [1]
					"Halls of Infusion", -- [2]
				},
				[205749] = {
					"Restless Pebble", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[83894] = {
					"Dulhu", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[39980] = {
					"Twilight Sadist", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[192800] = {
					"Maestra de lanzas nokhud", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[131858] = {
					"Thornguard", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[197406] = {
					"Libélula escurridiza exasperada", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[201756] = {
					"Whiiskeyz", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[131545] = {
					"Lady Waycrest", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[42333] = {
					"High Priestess Azil", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[89012] = {
					"Ravenous Wolf", -- [1]
					"Iron Docks", -- [2]
				},
				[95920] = {
					"Animated Storm", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[91793] = {
					"Seaspray Crab", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[213770] = {
					"Ink of Ozumat", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[185534] = {
					"Cazador saetaósea", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[137516] = {
					"Ashvane Invader", -- [1]
					"Siege of Boralus", -- [2]
				},
				[79545] = {
					"Nitrogg Thundertower", -- [1]
					"Grimrail Depot", -- [2]
				},
				[100250] = {
					"Binder Ashioi", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[169428] = {
					"Wrathguard", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[114804] = {
					"Destrero espectral", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[100527] = {
					"Dreadfire Imp", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[59555] = {
					"Sha mortificador", -- [1]
					"Templo del Dragón de Jade", -- [2]
				},
				[129552] = {
					"Monzumi", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[192464] = {
					"Raging Ember", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[163121] = {
					"Vanguardia cosida", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[165597] = {
					"Soldado de remendejo", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[186150] = {
					"Soul Fragment", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[193760] = {
					"Surging Ruiner", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[192803] = {
					"Ohuna de guerra", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[101679] = {
					"Dreadsoul Poisoner", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[186151] = {
					"Balakar Khan", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[203806] = {
					"Whisper in the Dark", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[45930] = {
					"Ministro del Aire", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[208668] = {
					"Elisande", -- [1]
					"10.2. Nighthold", -- [2]
					"enUS", -- [3]
				},
				[190245] = {
					"Broodkeeper Diurna", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[95772] = {
					"Garranocturna enloquecida", -- [1]
					"Matorral Corazón Oscuro", -- [2]
					"enUS", -- [3]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[178731] = {
					"Bonesteel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[76220] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[193572] = {
					"Nokhud Warsmith", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195875] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[98696] = {
					"Illysanna Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[97202] = {
					"Olmyr el Iluminado", -- [1]
					"Salones del Valor", -- [2]
				},
				[184023] = {
					"Vicious Basilisk", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[186664] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
					"enUS", -- [3]
				},
				[44715] = {
					"Vicious Mindlasher", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[198326] = {
					"Stormwrought Despoiler", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[191736] = {
					"Crawth", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[195876] = {
					"Ohuna profanada", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[204560] = {
					"Incorporeal Being", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[177892] = {
					"Mawforged Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[135234] = {
					"Mastín enfermo", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[100529] = {
					"Hatespawn Slime", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[131821] = {
					"Doncella ignota", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[199715] = {
					"Nokhud Battleguard", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195877] = {
					"Mística resucitada", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[212681] = {
					"Tarasca sañosa", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[184107] = {
					"Protector rúnico", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
				},
				[196645] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[194487] = {
					"Vil Maleputre", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[195878] = {
					"Ukhel Beastcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75198] = {
					"Bloodmaul Geomancer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[199716] = {
					"Nokhud Brute", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[163126] = {
					"Mago de huesos frágiles", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[119072] = {
					"The Desolate Host", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[86547] = {
					"Venom Sprayer", -- [1]
					"The Everbloom", -- [2]
				},
				[163894] = {
					"Rompeespinas contagioso", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[75966] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[180782] = {
					"Consumed Soul", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[115115] = {
					"Coldmist Stalker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[199717] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[201413] = {
					"Inflammable Wall", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[165430] = {
					"Engendro del mal", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[180015] = {
					"Marinero de cubierta fornido", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[151613] = {
					"Anti-Personnel Squirrel", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[133361] = {
					"Entidad desconocida", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[81212] = {
					"Vigía Supremo Riel siniestro", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[189227] = {
					"Qalashi Hunter", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[197671] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163128] = {
					"Hechicero de Zolramus", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[199916] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[118698] = {
					"Entidad desconocida", -- [1]
					"Falla Cicatriz Aterradora - Plataforma de gesta de brujo", -- [2]
				},
				[202789] = {
					"Morchie", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[100531] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[26716] = {
					"Azure Warder", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[115244] = {
					"Archimago Xylem", -- [1]
					"El Ojo de la Eternidad - Gesta", -- [2]
				},
				[164920] = {
					"Rajaalmas drust", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[200926] = {
					"Igira the Cruel", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[131825] = {
					"Sister Briar", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[204030] = {
					"Entidad desconocida", -- [1]
					"El Alba del Infinito", -- [2]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[131823] = {
					"Sister Malady", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[98810] = {
					"Wrathguard Bladelord", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[107288] = {
					"Vilethorn Sapling", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[164921] = {
					"Cosechador drust", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[45932] = {
					"Estrella de Hundecielos", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[118523] = {
					"Huntress Kasparian", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[100532] = {
					"Entidad desconocida", -- [1]
					"Matorral Corazón Oscuro", -- [2]
					"enUS", -- [3]
				},
				[84028] = {
					"Maestro de asedio Rokra", -- [1]
					"Muelles de hierro", -- [2]
				},
				[131402] = {
					"Underrot Tick", -- [1]
					"The Underrot", -- [2]
				},
				[99358] = {
					"Dríade Corazón podrido", -- [1]
					"Matorral Corazón Oscuro", -- [2]
					"enUS", -- [3]
				},
				[77700] = {
					"Exhumadora Sombraluna", -- [1]
					"Cementerios de Sombraluna", -- [2]
				},
				[166969] = {
					"Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[208165] = {
					"Alliance Knight", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[177716] = {
					"So' Cartel Assassin", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[131812] = {
					"Encantaalmas de Hiel de corazón", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[190510] = {
					"Vault Guard", -- [1]
					"The Azure Vault", -- [2]
				},
				[185529] = {
					"Plaga bélica frondacuero", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[121498] = {
					"Twilight Soul", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[176949] = {
					"Mawsworn Embermage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[166970] = {
					"Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[114350] = {
					"Shade of Medivh", -- [1]
					"Return to Karazhan", -- [2]
				},
				[118518] = {
					"Priestess Lunaspyre", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[75713] = {
					"Arreglahuesos de Sombraluna", -- [1]
					"Cementerios de Sombraluna", -- [2]
				},
				[152009] = {
					"Robot chatarra descompuesto", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[121003] = {
					"Rez the Tombwatcher", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[201469] = {
					"Restless Pebble", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[189232] = {
					"Kokia Blazehoof", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[11859] = {
					"Doomguard", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[152898] = {
					"Deadsoul Chorus", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[43438] = {
					"Corborus", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[173360] = {
					"Escupeplagas", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[206352] = {
					"Alliance Archer", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[42845] = {
					"Rock Borer", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[115844] = {
					"Goroth", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[83390] = {
					"Retador Señor del Trueno", -- [1]
					"Muelles de hierro", -- [2]
				},
				[39960] = {
					"Bracero múrloc profundo", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[98681] = {
					"Hilador Grajo", -- [1]
					"Fuerte Torre Oscura", -- [2]
					"enUS", -- [3]
				},
				[84400] = {
					"Flourishing Ancient", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[94331] = {
					"Petrifying Crystal", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[77889] = {
					"Grom'tash the Destructor", -- [1]
					"Auchindoun", -- [2]
				},
				[121004] = {
					"Razorjaw Myrmidon", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[195119] = {
					"Lanzarrayosayos primalista", -- [1]
					"Estanques de Vida Rubí", -- [2]
				},
				[189234] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164926] = {
					"Romperramas drust", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[172858] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[75652] = {
					"Engendro del vacío", -- [1]
					"Cementerios de Sombraluna", -- [2]
				},
				[212775] = {
					"Vidente ignoto", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[186420] = {
					"Tejedor terráneo", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
				},
				[26928] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[201261] = {
					"Kazzara, the Hellforged", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[97720] = {
					"Blightshard Skitter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[179386] = {
					"Oficial corsario", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[75459] = {
					"Murciélago apestado", -- [1]
					"Cementerios de Sombraluna", -- [2]
				},
				[151579] = {
					"Shield Generator", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167998] = {
					"Guardián de portal", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[131863] = {
					"Raal the Gluttonous", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[131824] = {
					"Sister Solena", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[61670] = {
					"Sik'thik Demolisher", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[189492] = {
					"Raszageth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[189235] = {
					"Sobrestante Lahar", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[97081] = {
					"Rey Bjorn", -- [1]
					"Salones del Valor", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[91004] = {
					"Ularogg Cragshaper", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[81985] = {
					"Everbloom Cultivator", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[197169] = {
					"Urglan", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[83392] = {
					"Uñagrieta furioso", -- [1]
					"Muelles de hierro", -- [2]
				},
				[164929] = {
					"Aldeana de Tirnenn", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[127019] = {
					"Training Dummy", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[104246] = {
					"Guardia de la Guardia Umbría", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[212778] = {
					"Minion of Ghur'sha", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[39985] = {
					"Mad Prisoner", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[102583] = {
					"Fel Scorcher", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[195847] = {
					"Ukhel Willcrusher", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[201465] = {
					"Cinderstep Melter", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[185656] = {
					"Clamaescorias", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[40023] = {
					"Defiled Earth Rager", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[212779] = {
					"Umbraclaw", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[133663] = {
					"Fanatical Headhunter", -- [1]
					"The Underrot", -- [2]
					"enUS", -- [3]
				},
				[23487] = {
					"Wolpertinger salvaje", -- [1]
					"Reinos del Este", -- [2]
				},
				[131667] = {
					"Soulbound Goliath", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[176957] = {
					"Shadowsteel Colossus", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[40817] = {
					"Shadow of Obsidius", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[104247] = {
					"Arcanista de la Guardia Umbría", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[114544] = {
					"Ujier esquelético", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[98362] = {
					"Troubled Soul", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[102584] = {
					"Malignant Defiler", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[32665] = {
					"Crystalline Tangler", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[201522] = {
					"Summitshaper Lorac", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[203825] = {
					"Voracious Magma Worm", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[44841] = {
					"Blight Beast", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[97083] = {
					"Rey Ranulf", -- [1]
					"Salones del Valor", -- [2]
				},
				[212781] = {
					"Dreamtalon", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[102962] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[190776] = {
					"Arcane Commander", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[176703] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[176959] = {
					"Mawsworn Soulmage", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[205618] = {
					"Thorak Greenscale", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[45935] = {
					"Adepto del templo", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[173633] = {
					"Nathrian Archivist", -- [1]
					"Castle Nathria", -- [2]
				},
				[184124] = {
					"Sentinel Talondras", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
					"enUS", -- [3]
				},
				[198709] = {
					"Unstable Earth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[92350] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[213806] = {
					"Entidad desconocida", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[206068] = {
					"Fusión temporal", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[97084] = {
					"Rey Tor", -- [1]
					"Salones del Valor", -- [2]
				},
				[54699] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
					"enUS", -- [3]
				},
				[184125] = {
					"Chrono-Lord Deios", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
					"enUS", -- [3]
				},
				[208945] = {
					"Dwarven Bomber", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[205363] = {
					"Time-Lost Waveshaper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[205619] = {
					"Sarek Cinderbreath", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[40084] = {
					"Bellows Slave", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[40021] = {
					"Incendiary Spark", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[167615] = {
					"Filoscura depravada", -- [1]
					"Salones de Expiación", -- [2]
				},
				[187315] = {
					"Disease Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[92538] = {
					"Entidad desconocida", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[190779] = {
					"Arcane Golem", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[198869] = {
					"Sundered Devastator", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[205620] = {
					"Malgosa Spellbinder", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[26782] = {
					"Crystalline Keeper", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[171333] = {
					"Devota Atal'ai", -- [1]
					"El Otro Lado", -- [2]
				},
				[120191] = {
					"Eternal Soulguard", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[130024] = {
					"Soggy Shiprat", -- [1]
					"Freehold", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[190780] = {
					"Arcane Elemental", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[45922] = {
					"Asesino empíreo", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[179010] = {
					"Fatespawn Anomaly", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[177407] = {
					"Formless Mass", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[43286] = {
					"Crystal Shard", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[205737] = {
					"Sundered Manaweaver", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[39987] = {
					"Evolved Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[96574] = {
					"Centinela Tronaforjado", -- [1]
					"Salones del Valor", -- [2]
				},
				[205622] = {
					"Krono Sandtongue", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[105715] = {
					"Inquisidor vigilante", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[155215] = {
					"Faeleaf Lasher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[54700] = {
					"Time-Twisted Nightsaber", -- [1]
					"End Time", -- [2]
					"enUS", -- [3]
				},
				[205366] = {
					"Time-Lost Wakethrasher", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[200761] = {
					"Wild Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[167611] = {
					"Evisceradora petronato", -- [1]
					"Salones de Expiación", -- [2]
				},
				[205623] = {
					"Drazos Blackwing", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[189247] = {
					"Tamed Phoenix", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[168891] = {
					"Apestado manipulado", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[205736] = {
					"Sundered Siegemaster", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[104251] = {
					"Centinela de la Guardia Umbría", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[184130] = {
					"Earthen Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[98366] = {
					"Ghostly Retainer", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[121011] = {
					"Tidescale Witch", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[41139] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[43214] = {
					"Slabhide", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[179269] = {
					"Seguridad del oasis", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[187969] = {
					"Flashfrost Earthshaper", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[61929] = {
					"Sik'thik Amber-Weaver", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[101437] = {
					"Burning Geode", -- [1]
					"UNKNOWN", -- [2]
				},
				[201788] = {
					"Dazhak", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[75210] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[40923] = {
					"Unstable Corruption", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[210231] = {
					"Tainted Lasher", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[208440] = {
					"Destripador Infinito", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[184132] = {
					"Depositario terráneo", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
				},
				[208441] = {
					"Water Elemental", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[115767] = {
					"Mistress Sassz'ine", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[195135] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[92610] = {
					"Tamborilero Infrapiedra", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[84550] = {
					"Xeri'tac", -- [1]
					"The Everbloom", -- [2]
				},
				[116407] = {
					"Harjatan", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[155219] = {
					"Gormling Spitter", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[205735] = {
					"Sundered Preserver", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[101438] = {
					"Vileshard Chunk", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[44658] = {
					"Deep Murloc Invader", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[170572] = {
					"Aojadora hudú Atal'ai", -- [1]
					"El Otro Lado", -- [2]
				},
				[75211] = {
					"Magma Lord", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[81864] = {
					"Dreadpetal", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[136541] = {
					"Bile Oozeling", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[115640] = {
					"Fuming Imp", -- [1]
					"Faronaar", -- [2]
				},
				[184134] = {
					"Scavenging Leaper", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
					"enUS", -- [3]
				},
				[98368] = {
					"Ghostly Protector", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[156244] = {
					"Winged Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[195138] = {
					"Detonating Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[201790] = {
					"Loszkeleth", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[206140] = {
					"Tiempo fusionado", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[91332] = {
					"Stoneclaw Hunter", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[156245] = {
					"Grand Automaton", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[197697] = {
					"Pirogarganta", -- [1]
					"Estanques de Vida Rubí", -- [2]
				},
				[133436] = {
					"Venture Co. Skyscorcher", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[81737] = {
					"Crecimiento desenfrenado", -- [1]
					"El Sempibrote", -- [2]
					"enUS", -- [3]
				},
				[44566] = {
					"Ozumat", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[198424] = {
					"Scultrice di Ghiaccio Primalista", -- [1]
					"Segrete delle Incarnazioni", -- [2]
				},
				[197698] = {
					"Tronatesta", -- [1]
					"Estanques de Vida Rubí", -- [2]
				},
				[199233] = {
					"Flamescale Captain", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[92612] = {
					"Destructor de Petrofuerza", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[201792] = {
					"Ahnzon", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[171343] = {
					"Matriarca picofiloso", -- [1]
					"El Otro Lado", -- [2]
				},
				[208445] = {
					"Larodar, Keeper of the Flame", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[176973] = {
					"Unstoppable Abomination", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[205478] = {
					"Conduit Guardian", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[186696] = {
					"Entidad desconocida", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
				},
				[99649] = {
					"Dreadlord Mendacius", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[128435] = {
					"Sáurido tóxico", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[214075] = {
					"Cycle Warden", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[95939] = {
					"Skrog Tidestomper", -- [1]
					"Eye of Azshara", -- [2]
				},
				[174773] = {
					"Entidad desconocida", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[194373] = {
					"Brackenhide Gnoll", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[98370] = {
					"Ghostly Councilor", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[193352] = {
					"Entidad desconocida", -- [1]
					"Hondonada Frondacuero", -- [2]
				},
				[176974] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[121399] = {
					"Inquisitor Sebilus", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[157017] = {
					"Lithic Watcher", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[155225] = {
					"Faeleaf Grovesinger", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[115642] = {
					"Umbral Imp", -- [1]
					"Faronaar", -- [2]
				},
				[199748] = {
					"Merodeador de la línea temporal", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[195399] = {
					"Croacito curioso", -- [1]
					"Salas de Infusión", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[138338] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				[116410] = {
					"Karam Lanzarcana", -- [1]
					"Falla Cicatriz Aterradora - Plataforma de gesta de brujo", -- [2]
				},
				[155226] = {
					"Verdant Keeper", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98243] = {
					"Soul-Torn Champion", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[39990] = {
					"Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[199749] = {
					"Anomalía del flujo temporal", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[184908] = {
					"Entidad desconocida", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[50417] = {
					"Bound Flames", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[121400] = {
					"Accusator Gnazh", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[208193] = {
					"Paladin of the Silver Hand", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[198214] = {
					"Broodguardian Ziruss", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[99891] = {
					"Draco de la tormenta", -- [1]
					"Salones del Valor", -- [2]
				},
				[196679] = {
					"Frozen Shroud", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[208438] = {
					"Saboteador Infinito", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[77134] = {
					"Sargerei Cleric", -- [1]
					"Auchindoun", -- [2]
				},
				[117154] = {
					"Razorjaw Acolyte", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[44404] = {
					"Bruja de escarcha Naz'jar", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[99188] = {
					"Waterlogged Soul Guard", -- [1]
					"Maw of Souls", -- [2]
				},
				[120720] = {
					"Lunar Guard", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[168022] = {
					"Tentáculo de baba", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[206351] = {
					"Alliance Conjuror", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[184910] = {
					"Entidad desconocida", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[189471] = {
					"Herrero qalashi", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[194622] = {
					"Scorchling", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[115388] = {
					"Rey", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[114796] = {
					"Anfitriona íntegra", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[45620] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[203809] = {
					"Entropic Hatred", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[136295] = {
					"Sunken Denizen", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[186124] = {
					"Tajolmillo", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[118715] = {
					"Reanimated Templar", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[186191] = {
					"Portavoz de descomposición", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[114284] = {
					"Elfyra", -- [1]
					"Return to Karazhan", -- [2]
				},
				[162744] = {
					"Nekthara el machacador", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[54512] = {
					"Time-Twisted Sentinel", -- [1]
					"End Time", -- [2]
					"enUS", -- [3]
				},
				[185168] = {
					"Brute", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[107073] = {
					"Entidad desconocida", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[185680] = {
					"Reliquia Vy", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[192333] = {
					"Águila alfa", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[151649] = {
					"Defense Bot Mk I", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[129699] = {
					"Ludwig Von Tortollan", -- [1]
					"Freehold", -- [2]
				},
				[208198] = {
					"Whiiskeyz", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[177237] = {
					"Chains of Damnation", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[118460] = {
					"Engine of Souls", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[173655] = {
					"Matriarca de Veloniebla", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[192334] = {
					"Graath", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[23682] = {
					"El Jinete decapitado", -- [1]
					"Monasterio Escarlata", -- [2]
				},
				[131436] = {
					"Matrona de sangre electa", -- [1]
					"Bardoma", -- [2]
				},
				[205384] = {
					"Tejetiempo infinita", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[191311] = {
					"Infinite Whelp", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
					"enUS", -- [3]
				},
				[134251] = {
					"Seneschal M'bara", -- [1]
					"Kings' Rest", -- [2]
				},
				[170838] = {
					"Contrincante implacable", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[26735] = {
					"Azure Scale-Binder", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[194894] = {
					"Hablatormentas primalista", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[203594] = {
					"Lumbering Boulder", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[189265] = {
					"Qalashi Bonetender", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[129527] = {
					"Bucanero rata de sentina", -- [1]
					"Puerto Libre", -- [2]
				},
				[185683] = {
					"Reliquia Wo", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[207177] = {
					"Guardián vigía infinito", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[191313] = {
					"Volatile Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[77905] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[194895] = {
					"Unstable Squall", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[96584] = {
					"Immoliant Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[164702] = {
					"Gusano carroñero", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[189478] = {
					"Forgemaster Gorek", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[197857] = {
					"Hendetripas", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[74579] = {
					"Molten Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[178008] = {
					"Decrepit Orb", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[39982] = {
					"Crazed Mage", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[194896] = {
					"Escudo de tormenta primigenio", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[189266] = {
					"Novato qalashi", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[167967] = {
					"Aceite consciente", -- [1]
					"El Otro Lado", -- [2]
				},
				[185685] = {
					"Reliquia Urh", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[165471] = {
					"Nathrian Duelist", -- [1]
					"Castle Nathria", -- [2]
				},
				[114624] = {
					"Celador arcano", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[204337] = {
					"Entidad desconocida", -- [1]
					"La Cumbre del Vórtice", -- [2]
					"enUS", -- [3]
				},
				[194897] = {
					"Stormsurge Totem", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[213576] = {
					"Verdant Boughwalker", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[137511] = {
					"Bilge Rat Cutthroat", -- [1]
					"Siege of Boralus", -- [2]
				},
				[151773] = {
					"Junkyard D.0.G.", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[90998] = {
					"Modelador trozo de añublo", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[97097] = {
					"Helarjar Champion", -- [1]
					"Maw of Souls", -- [2]
				},
				[119742] = {
					"Felguard Invader", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[194816] = {
					"Monstruosidad de la forja", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[194898] = {
					"Primalist Arcblade", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[164705] = {
					"Babosa pestilente", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[52019] = {
					"Skyfall Star", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[210507] = {
					"Stalwart Bristlebruin", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[192340] = {
					"Apprentice", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[165470] = {
					"Nathrian Executor", -- [1]
					"Castle Nathria", -- [2]
				},
				[184020] = {
					"Rabioso descomunal", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
					"enUS", -- [3]
				},
				[207438] = {
					"Headless Horseman", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[98761] = {
					"Goodoption", -- [1]
					"Maw of Souls", -- [2]
				},
				[194469] = {
					"Wither Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[164707] = {
					"Babosa coagulada", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[208461] = {
					"Scorching Roots", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[190294] = {
					"Nokhud Stormcaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[151657] = {
					"Bomb Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[134514] = {
					"Abyssal Cultist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[40633] = {
					"Guardia de honor Naz'jar", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[187224] = {
					"Vil Maleputre", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[42808] = {
					"Stonecore Flayer", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[95947] = {
					"Mak'rana Hardshell", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[134338] = {
					"Tidesage Enforcer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[114626] = {
					"Espíritu melancólico", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[174175] = {
					"Petronato leal", -- [1]
					"Salones de Expiación", -- [2]
				},
				[198995] = {
					"Chronikar", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[206065] = {
					"Interval", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[203857] = {
					"Bruja de la Horda", -- [1]
					"El Alba del Infinito", -- [2]
				},
				[167963] = {
					"Cliente sin cabeza", -- [1]
					"El Otro Lado", -- [2]
				},
				[45926] = {
					"Sirviente de Asaad", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[168153] = {
					"Roc de plaga", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[83026] = {
					"Maestro de asedio Olugar", -- [1]
					"Muelles de hierro", -- [2]
				},
				[198996] = {
					"Manifested Timeways", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[163058] = {
					"Defensora de Veloniebla", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[170850] = {
					"Cuernosangre enfurecido", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[120721] = {
					"Lunar Archer", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[208208] = {
					"Alliance Destroyer", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[39994] = {
					"Conflagration", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[114627] = {
					"Shrieking Terror", -- [1]
					"Return to Karazhan", -- [2]
				},
				[194647] = {
					"Invocatore di Tuoni", -- [1]
					"Segrete delle Incarnazioni", -- [2]
				},
				[198997] = {
					"Blight of Galakrond", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[42789] = {
					"Stonecore Magmalord", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[170927] = {
					"Moco eruptivo", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[42188] = {
					"Ozruk", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[165222] = {
					"Curahuesos de Zolramus", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[210512] = {
					"Ashen Treant", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[198998] = {
					"Tyr, the Infinite Keeper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[40634] = {
					"Bruja de la tempestad Naz'jar", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[185181] = {
					"Automated Eliminator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[189531] = {
					"Decayed Elder", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[195928] = {
					"Cosechador de almas Duuren", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[165479] = {
					"Court Enforcer", -- [1]
					"Castle Nathria", -- [2]
				},
				[114628] = {
					"Camarero esquelético", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[194467] = {
					"Disease Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[198999] = {
					"Morchie", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[26722] = {
					"Azure Magus", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[188252] = {
					"Melidrussa Chillworn", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[203861] = {
					"Destructor de la Horda", -- [1]
					"El Alba del Infinito", -- [2]
				},
				[195929] = {
					"Cosechadora de almas Tumen", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[214608] = {
					"Screaming Soul", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[186206] = {
					"Bonecrusher", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[83028] = {
					"Grom'kar Deadeye", -- [1]
					"Iron Docks", -- [2]
				},
				[199000] = {
					"Chrono-Lord Deios", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[194389] = {
					"Lava Spawn", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[150712] = {
					"Trixie Tazer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[81236] = {
					"Técnico de Riel siniestro", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[195930] = {
					"Cosechador de almas Mandakh", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[53134] = {
					"Ancient Core Hound", -- [1]
					"Firelands", -- [2]
				},
				[114629] = {
					"Spectral Retainer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[196694] = {
					"Hurgador arcano", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[83025] = {
					"Maestro de batalla Grom'kar", -- [1]
					"Muelles de hierro", -- [2]
				},
				[201560] = {
					"Primalist Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[187231] = {
					"Wither Biter", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[175205] = {
					"Baleful Shadow", -- [1]
					"Castle Nathria", -- [2]
				},
				[113971] = {
					"Maiden of Virtue", -- [1]
					"Return to Karazhan", -- [2]
				},
				[187999] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[186208] = {
					"Acechador putrefaarco", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[180323] = {
					"Fatespawn Monstrosity", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[134150] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[156226] = {
					"Coldheart Binder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[193373] = {
					"Puñotrueno nokhud", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[42810] = {
					"Crystalspawn Giant", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[168878] = {
					"Apestado manipulado", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[116549] = {
					"Cantante de soporte", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[165483] = {
					"Court Hierarch", -- [1]
					"Castle Nathria", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[180392] = {
					"Gorgoan Souldrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[190407] = {
					"Furibundo de agua", -- [1]
					"Salas de Infusión", -- [2]
				},
				[171557] = {
					"Shade of Bargast", -- [1]
					"Castle Nathria", -- [2]
				},
				[129599] = {
					"Cutwater Knife Juggler", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[91792] = {
					"Stormwake Hydra", -- [1]
					"Eye of Azshara", -- [2]
				},
				[210518] = {
					"Cycle Warden", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[208727] = {
					"Guardian Ordan", -- [1]
					"10.2. Nighthold", -- [2]
					"enUS", -- [3]
				},
				[184539] = {
					"Automated Eliminator", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[87252] = {
					"Ogron rebelde", -- [1]
					"Muelles de hierro", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[205723] = {
					"Time-Lost Aerobot", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[120516] = {
					"Razorjaw Swiftfin", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[167532] = {
					"Heavin el destructor", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[180070] = {
					"Mawsworn Scryer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[81984] = {
					"Gnarlroot", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[166396] = {
					"Hostigador noble", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[181861] = {
					"Magmatusk", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[97264] = {
					"Hatecoil Shellbreaker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[129600] = {
					"Rata de sentina escamasalada", -- [1]
					"Puerto Libre", -- [2]
				},
				[197982] = {
					"Storm Warrior", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[167533] = {
					"Adventa Nuncamás", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[208729] = {
					"Astromancer's Guard", -- [1]
					"10.2. Nighthold", -- [2]
					"enUS", -- [3]
				},
				[157810] = {
					"Mawsworn Endbringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[163503] = {
					"Éter del abismo", -- [1]
					"Torres de Ascensión", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[101326] = {
					"Honored Ancestor", -- [1]
					"Halls of Valor", -- [2]
				},
				[98384] = {
					"Razormouth", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[102094] = {
					"Espadachín resucitado", -- [1]
					"Fuerte Torre Oscura", -- [2]
					"enUS", -- [3]
				},
				[167534] = {
					"Rek la curtida", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[114632] = {
					"Auxiliar espectral", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[184422] = {
					"Emberon", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
					"enUS", -- [3]
				},
				[26723] = {
					"Keristrasza", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[180840] = {
					"Frostbound Devoted", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[115488] = {
					"Piromante imbuido", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[129601] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[206172] = {
					"Nymue", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[115765] = {
					"Anulador abstracto", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[197985] = {
					"Canalizador de llamas", -- [1]
					"Estanques de Vida Rubí", -- [2]
				},
				[151476] = {
					"Blastatron X-80", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[102253] = {
					"Understone Demolisher", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[99664] = {
					"Restless Soul", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[101839] = {
					"Risen Companion", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[114249] = {
					"Volatile Energy", -- [1]
					"Return to Karazhan", -- [2]
				},
				[102095] = {
					"Lancero resucitado", -- [1]
					"Fuerte Torre Oscura", -- [2]
					"enUS", -- [3]
				},
				[104270] = {
					"Ensamblaje de los Guardianes", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[131009] = {
					"Entidad desconocida", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[114633] = {
					"Valet espectral", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[135552] = {
					"Entidad desconocida", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[97068] = {
					"Draco de la tormenta", -- [1]
					"Salones del Valor", -- [2]
				},
				[171887] = {
					"Bufé limoso", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[129602] = {
					"Agente mareaférrea", -- [1]
					"Puerto Libre", -- [2]
				},
				[115401] = {
					"Alfil", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[42428] = {
					"Devout Follower", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[111563] = {
					"Guardia de la Guardia Umbría", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[208734] = {
					"Senior Researcher Alydrus", -- [1]
					"10.2. Nighthold", -- [2]
					"enUS", -- [3]
				},
				[205151] = {
					"Tyr's Vanguard", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[197219] = {
					"Azotador vil", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[187240] = {
					"Drakonid Breaker", -- [1]
					"The Azure Vault", -- [2]
				},
				[154744] = {
					"Monstruosidad tóxica", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[171376] = {
					"Custodio en jefe Javlin", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[167538] = {
					"Dokigg el demoledor", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[114634] = {
					"Sirviente inmortal", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[167536] = {
					"Harugia la sanguinaria", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[205152] = {
					"Lerai, Doncella vetusta", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[205408] = {
					"Cercenador del Tiempo Infinito", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[80936] = {
					"Granadero Grom'kar", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[115402] = {
					"Alfil", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[191847] = {
					"Pisallanuras nokhud", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[179821] = {
					"Comandante Zo'far", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[198500] = {
					"Invocatrice della Terra del Concilio", -- [1]
					"Segrete delle Incarnazioni", -- [2]
				},
				[40765] = {
					"Commander Ulthok", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[128551] = {
					"Mastín mareaférrea", -- [1]
					"Puerto Libre", -- [2]
				},
				[134331] = {
					"King Rahu'ai", -- [1]
					"Kings' Rest", -- [2]
				},
				[150396] = {
					"Aerial Unit R-21/X", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[114251] = {
					"Galindre", -- [1]
					"Return to Karazhan", -- [2]
				},
				[99922] = {
					"Ebonclaw Packmate", -- [1]
					"Halls of Valor", -- [2]
				},
				[196198] = {
					"Algeth'ar Security", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[198501] = {
					"Invocatrice del Ghiaccio del Concilio", -- [1]
					"Segrete delle Incarnazioni", -- [2]
				},
				[97219] = {
					"Solsten", -- [1]
					"Salones del Valor", -- [2]
				},
				[198502] = {
					"Invocatempeste del Concilio", -- [1]
					"Segrete delle Incarnazioni", -- [2]
				},
				[115019] = {
					"Viuda Bruma Fría", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[100818] = {
					"Bellowing Idol", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[207969] = {
					"Asaltante de la Horda", -- [1]
					"El Alba del Infinito", -- [2]
				},
				[101074] = {
					"Vástago de engendro de odio ", -- [1]
					"Matorral Corazón Oscuro", -- [2]
					"enUS", -- [3]
				},
				[188011] = {
					"Primal Terrasentry", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[186220] = {
					"Moldeadora frondacuero", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[180335] = {
					"Contrabandista del cártel", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[114790] = {
					"Viz'aduum the Watcher", -- [1]
					"Return to Karazhan", -- [2]
				},
				[150142] = {
					"Scrapbone Trashtosser", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[122850] = {
					"Umbral Guard", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[198503] = {
					"Council Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[114636] = {
					"Aparición de custodio", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[104273] = {
					"Jazshariu", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[196712] = {
					"Nullification Device", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168310] = {
					"Roc de plaga", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[115020] = {
					"Arcánido", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[196200] = {
					"Agente de Algeth'ar", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[98900] = {
					"Wyrmtongue Trickster", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[101075] = {
					"Wormspeaker Devout", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[150143] = {
					"Picador huesudo", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[97365] = {
					"Seacursed Mistmender", -- [1]
					"Maw of Souls", -- [2]
				},
				[198868] = {
					"Tessitore Elettrico Primalista", -- [1]
					"Segrete delle Incarnazioni", -- [2]
				},
				[39679] = {
					"Corla, Herald of Twilight", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[134024] = {
					"Cresa devoradora", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[75452] = {
					"Bonemaw", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[205158] = {
					"Spurlok, Centinela vetusta", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[104274] = {
					"Baalgar el Atento", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[135048] = {
					"Gorestained Piglet", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[174197] = {
					"Ritualista del campo de batalla", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[196970] = {
					"Taranthiza", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[201320] = {
					"Rashok", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[129758] = {
					"Irontide Grenadier", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[183404] = {
					"Eternal Assembler", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[40447] = {
					"Chains of Woe", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[196203] = {
					"Algeth'ar Nurse", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[135049] = {
					"Cuervo alatemible", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[196971] = {
					"Rendvith", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[113998] = {
					"Destructor de Petrofuerza", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[128455] = {
					"T'lonja", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[104275] = {
					"Imacu'tya", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[171384] = {
					"Escriba investigadora", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[120651] = {
					"Entidad desconocida", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[128967] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[168058] = {
					"Pluma imbuida", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[186737] = {
					"Telash Greywing", -- [1]
					"The Azure Vault", -- [2]
				},
				[133430] = {
					"Venture Co. Mastermind", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[190206] = {
					"Danzallamas primalista", -- [1]
					"Estanques de Vida Rubí", -- [2]
				},
				[136330] = {
					"Entidad desconocida", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[115406] = {
					"Caballo", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[214117] = {
					"Entidad desconocida", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[186226] = {
					"Cantoputre fétida", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[157824] = {
					"Protector de la llama", -- [1]
					"Castillo de Colmillo Oscuro", -- [2]
				},
				[186738] = {
					"Umbrelskul", -- [1]
					"The Azure Vault", -- [2]
				},
				[39616] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[201579] = {
					"Magmorax", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[134284] = {
					"Portavoz de la muerte caído", -- [1]
					"Bardoma", -- [2]
				},
				[165137] = {
					"Guardián de Zolramus", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[199718] = {
					"Nokhud Huntmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[175992] = {
					"Dutiful Attendant", -- [1]
					"Castle Nathria", -- [2]
				},
				[115407] = {
					"Torre", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[186739] = {
					"Azureblade", -- [1]
					"The Azure Vault", -- [2]
				},
				[168572] = {
					"Hongos de asalto", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[136076] = {
					"Agitated Nimbus", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[173178] = {
					"Stone Legion Goliath", -- [1]
					"Castle Nathria", -- [2]
				},
				[212327] = {
					"Zaqali Flamemancer", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[154663] = {
					"Gnome-Eating Droplet", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[45704] = {
					"Lurking Tempest", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[186740] = {
					"Ensamblaje arcano", -- [1]
					"La Bóveda Azur", -- [2]
				},
				[213607] = {
					"Múrloc de las profundidades", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[199368] = {
					"Hardened Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[95833] = {
					"Hyrja", -- [1]
					"Halls of Valor", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104277] = {
					"Can de la Legión", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[186229] = {
					"Roble marchito", -- [1]
					"Hondonada Frondacuero", -- [2]
				},
				[168318] = {
					"Goliat Rechazado", -- [1]
					"Torres de Ascensión", -- [2]
				},
				[186741] = {
					"Elemental arcano", -- [1]
					"La Bóveda Azur", -- [2]
				},
				[76407] = {
					"Ner'zhul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[76259] = {
					"Felguard", -- [1]
					"Auchindoun", -- [2]
				},
				[195697] = {
					"Thunderbeast Rider", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[43391] = {
					"Millhouse Manastorm", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[163457] = {
					"Vanguardia Rechazada", -- [1]
					"Torres de Ascensión", -- [2]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[162729] = {
					"Soldado de remendejo", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[211306] = {
					"Fiery Vines", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[95834] = {
					"Místico Valarjar", -- [1]
					"Salones del Valor", -- [2]
				},
				[164737] = {
					"Emboscador de la colonia", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[183416] = {
					"Bound Realmbreaker", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[194990] = {
					"Stormseeker Acolyte", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104278] = {
					"Sicario vínculo vil", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[137103] = {
					"Blood Visage", -- [1]
					"The Underrot", -- [2]
				},
				[196972] = {
					"Korvelnor", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[98521] = {
					"Lord Etheldrin Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[76260] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[104918] = {
					"Vigilant Duskwatch", -- [1]
					"Court of Stars", -- [2]
				},
				[180091] = {
					"Can del Núcleo anciano", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[99033] = {
					"Helarjar Mistcaller", -- [1]
					"Maw of Souls", -- [2]
				},
				[163459] = {
					"Ensalmador Rechazado", -- [1]
					"Torres de Ascensión", -- [2]
				},
				[165762] = {
					"Soul Infuser", -- [1]
					"Castle Nathria", -- [2]
				},
				[179733] = {
					"Invigorating Fish Stick", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[40577] = {
					"Centinela Naz'jar", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[109908] = {
					"Nightmare Abomination", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[165251] = {
					"Entidad desconocida", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[185465] = {
					"Wardog", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[102104] = {
					"Enslaved Shieldmaiden", -- [1]
					"Maw of Souls", -- [2]
				},
				[102232] = {
					"Trampero rocoso", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[165763] = {
					"Vile Occultist", -- [1]
					"Castle Nathria", -- [2]
				},
				[180348] = {
					"Fortachón del cártel", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[166275] = {
					"Modelador de Veloniebla", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[61623] = {
					"Sap Globule", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[168425] = {
					"Forsworn Annihilator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[136249] = {
					"Guardian Elemental", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[189816] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[40586] = {
					"Lady Naz'jar", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[165764] = {
					"Rockbound Vanquisher", -- [1]
					"Castle Nathria", -- [2]
				},
				[167607] = {
					"Mutilador petronato", -- [1]
					"Salones de Expiación", -- [2]
				},
				[166276] = {
					"Guardián de Veloniebla", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[84978] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[170882] = {
					"Mago de huesos", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[196202] = {
					"Educador de Algeth'ar", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[188026] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[116562] = {
					"Flamewaker Centurion", -- [1]
					"Return to Karazhan", -- [2]
				},
				[116689] = {
					"Atrigan", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[184444] = {
					"Oppressive Artificer", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[199029] = {
					"Cyclas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[150292] = {
					"Caballería de Mecalópolis", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[75715] = {
					"Reanimated Ritual Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[78437] = {
					"Gul'kosh", -- [1]
					"Auchindoun", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[186616] = {
					"Granyth", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[202612] = {
					"Cliffkeeper Bouldani", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[174210] = {
					"Escupidor de lodo contagiado", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[179840] = {
					"Market Peacekeeper", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[99675] = {
					"Enormous Stone Quilen", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[168837] = {
					"Sigilaria", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[114260] = {
					"Mrrgria", -- [1]
					"Return to Karazhan", -- [2]
				},
				[116691] = {
					"Belac", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[116563] = {
					"Ancient Core Hound", -- [1]
					"Return to Karazhan", -- [2]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[81983] = {
					"Verdant Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[107435] = {
					"Noble sospechoso", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[180864] = {
					"High Torturer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[76263] = {
					"Sargerei Magus", -- [1]
					"Auchindoun", -- [2]
				},
				[183423] = {
					"Reformed Bachelor", -- [1]
					"Return to Karazhan", -- [2]
				},
				[210290] = {
					"Firelands Flameguard", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[179841] = {
					"Veterano lanzachispa", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[26918] = {
					"Chaotic Rift", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[190588] = {
					"Tectonic Crusher", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[83616] = {
					"Zoggosh", -- [1]
					"Iron Docks", -- [2]
				},
				[150160] = {
					"Matón huesudo", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[114261] = {
					"Toe Knee", -- [1]
					"Return to Karazhan", -- [2]
				},
				[173189] = {
					"Nathrian Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[192919] = {
					"Gigantic Thresher", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[179842] = {
					"Agente comercial", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[195696] = {
					"Truenobestia primalista", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[204918] = {
					"Iridikron's Creation", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[130011] = {
					"Irontide Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[83389] = {
					"Escupefuego Alahierro", -- [1]
					"Muelles de hierro", -- [2]
				},
				[134041] = {
					"Infected Peasant", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[183425] = {
					"Wholesome Host", -- [1]
					"Return to Karazhan", -- [2]
				},
				[183707] = {
					"Entidad desconocida", -- [1]
					"Sepulcro de los Primeros", -- [2]
				},
				[122851] = {
					"Umbral Archer", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[187768] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[100713] = {
					"Rockbait Fisher", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[40579] = {
					"Deep Murloc Hunter", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[98538] = {
					"Lady Velandras Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[210293] = {
					"Firelands Destroyer", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[114262] = {
					"Attumen the Huntsman", -- [1]
					"Return to Karazhan", -- [2]
				},
				[81638] = {
					"Aqueous Globule", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[165515] = {
					"Filoscuro depravado", -- [1]
					"Salones de Expiación", -- [2]
				},
				[126928] = {
					"Corsario mareaférrea", -- [1]
					"Puerto Libre", -- [2]
				},
				[88163] = {
					"Vidente cinéreo Grom'kar", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[190359] = {
					"Skulking Zealot", -- [1]
					"Halls of Infusion", -- [2]
				},
				[86372] = {
					"Melded Berserker", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[77130] = {
					"Sargerei Ritualist", -- [1]
					"Auchindoun", -- [2]
				},
				[197799] = {
					"Instillatore della Cava", -- [1]
					"Segrete delle Incarnazioni", -- [2]
				},
				[210294] = {
					"Flamespreader", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[186242] = {
					"Skulking Gutstabber", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[130522] = {
					"Freehold Shipmate", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[168443] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[195820] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[179334] = {
					"Portalmancer Zo'dahh", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[210295] = {
					"Flamewaker Infernoguard", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[79720] = {
					"Explotador Grom'kar", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[150165] = {
					"Elemental de baba", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[122963] = {
					"Rezan", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[96480] = {
					"Viletongue Belcher", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[96608] = {
					"Huargo Garra de ébano", -- [1]
					"Salones del Valor", -- [2]
				},
				[183173] = {
					"Guardanegra jurafauces", -- [1]
					"Las Tierras de las Sombras", -- [2]
				},
				[130012] = {
					"Devastadora mareaférrea", -- [1]
					"Puerto Libre", -- [2]
				},
				[205435] = {
					"Destripador de época", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[179847] = {
					"Shadowsteel Horror", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[178824] = {
					"Borr-Gahn", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[184453] = {
					"Brutal Motivator", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[176521] = {
					"Stygian Abductor", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[42691] = {
					"Stonecore Rift Conjurer", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[205691] = {
					"Creación de Iridikron", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[114264] = {
					"Midnight", -- [1]
					"Return to Karazhan", -- [2]
				},
				[130896] = {
					"Blackout Barrel", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[167566] = {
					"Asesina alatétrica", -- [1]
					"Castillo Nathria", -- [2]
				},
				[180104] = {
					"Tangling Bloom", -- [1]
					"The Shadowlands", -- [2]
				},
				[92387] = {
					"Drums of War", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[196992] = {
					"Arcane Elemental", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[26727] = {
					"Mage Hunter Ascendant", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[190362] = {
					"Libélula deslumbrante", -- [1]
					"Salas de Infusión", -- [2]
				},
				[97197] = {
					"Purificador Valarjar", -- [1]
					"Salones del Valor", -- [2]
				},
				[163746] = {
					"Walkie Shockie X1", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[186246] = {
					"Buitre desgarrador", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[190340] = {
					"Defensora refti", -- [1]
					"Salas de Infusión", -- [2]
				},
				[81279] = {
					"Grom'kar Flameslinger", -- [1]
					"Iron Docks", -- [2]
				},
				[176523] = {
					"Painsmith Raznal", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[150168] = {
					"Monstruosidad tóxica", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[74571] = {
					"Calamity", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[95842] = {
					"Clamatruenos Valarjar", -- [1]
					"Salones del Valor", -- [2]
				},
				[122965] = {
					"Vol'kaal", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[120158] = {
					"Volatile Corruption", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[77803] = {
					"Railmaster Rocketspark", -- [1]
					"Grimrail Depot", -- [2]
				},
				[139422] = {
					"Scaled Krolusk Tamer", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[74349] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[150169] = {
					"Acechador tóxico", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[189318] = {
					"Oso infectado", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[165010] = {
					"Babosa coagulada", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[115417] = {
					"Rata", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[183945] = {
					"Unstable Matter", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[190342] = {
					"Aparato de contención", -- [1]
					"Salas de Infusión", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[76104] = {
					"Araña cadáver monstruosa", -- [1]
					"Cementerios de Sombraluna", -- [2]
				},
				[42692] = {
					"Stonecore Bruiser", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[95843] = {
					"Rey Haldor", -- [1]
					"Salones del Valor", -- [2]
				},
				[136353] = {
					"Colossal Tentacle", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[194181] = {
					"Vexamus", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[116569] = {
					"Razorjaw Wavemender", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[127315] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[26793] = {
					"Crystalline Frayer", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[131492] = {
					"Sacerdote de sangre devoto", -- [1]
					"Bardoma", -- [2]
				},
				[96611] = {
					"Toro Uñainquina", -- [1]
					"Salones del Valor", -- [2]
				},
				[111068] = {
					"Archmage Galeorn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[98792] = {
					"Wyrmtongue Scavenger", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[26729] = {
					"Steward", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[133345] = {
					"Feckless Assistant", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[80875] = {
					"Bombsquad", -- [1]
					"Iron Docks", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[169875] = {
					"Shackled Soul", -- [1]
					"Theater of Pain", -- [2]
				},
				[154758] = {
					"Monstruosidad tóxica", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[197509] = {
					"Primal Thundercloud", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[199812] = {
					"Zaqali Wallclimber", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[118489] = {
					"Corrupted Risen Soldier", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[153755] = {
					"Naeno Megacrash", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[98275] = {
					"Risen Archer", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[200836] = {
					"Obsidian Guard", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[154011] = {
					"Armed Prisoner", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[137486] = {
					"Queen Patlaa", -- [1]
					"Kings' Rest", -- [2]
				},
				[177808] = {
					"Sobrestante acorazado", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[115419] = {
					"Ancient Tome", -- [1]
					"Return to Karazhan", -- [2]
				},
				[173714] = {
					"Noctiflor de Veloniebla", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[154020] = {
					"Prisonbreak Cursewalker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[204931] = {
					"Fyrakk", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[168594] = {
					"Centinela de la cámara", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[120153] = {
					"Eonic Defender", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[122967] = {
					"Priestess Alun'za", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[208521] = {
					"Pumpkin Soldier", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[190345] = {
					"Geomante primalista", -- [1]
					"Salas de Infusión", -- [2]
				},
				[163458] = {
					"Castigadora Rechazada", -- [1]
					"Torres de Ascensión", -- [2]
				},
				[144296] = {
					"Spider Tank", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[122968] = {
					"Yazma", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[186615] = {
					"The Raging Tempest", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[26728] = {
					"Mage Hunter Initiate", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[166301] = {
					"Acechador de Veloniebla", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[26792] = {
					"Crystalline Protector", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[40008] = {
					"Lucky", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[77133] = {
					"Sargerei Hoplite", -- [1]
					"Auchindoun", -- [2]
				},
				[45572] = {
					"Howling Gale", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[45917] = {
					"Príncipe de las Nubes", -- [1]
					"La Cumbre del Vórtice", -- [2]
				},
				[154014] = {
					"Imprisoned Cabalist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[190348] = {
					"Primalist Ravager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[129366] = {
					"Bilge Rat Buccaneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[118491] = {
					"Corrupted Risen Mage", -- [1]
					"Black Rook Hold - Artifact Challenge", -- [2]
				},
				[165529] = {
					"Coleccionista depravada", -- [1]
					"Salones de Expiación", -- [2]
				},
				[188302] = {
					"Reconfiguration Emitter", -- [1]
					"Castle Nathria", -- [2]
				},
				[200840] = {
					"Flamebound Huntsman", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[154015] = {
					"Escaped Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[56511] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[179852] = {
					"Soulless Vengeance", -- [1]
					"The Shadowlands", -- [2]
				},
				[176535] = {
					"Infused Goliath", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[206214] = {
					"Infiltrado Infinito", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[117596] = {
					"Razorjaw Gladiator", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[202375] = {
					"Zskarn", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[101476] = {
					"Molten Charskin", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[154016] = {
					"Prisonbreak Soulmender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[186658] = {
					"Geomante grutacanto", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
				},
				[144293] = {
					"Waste Processing Unit", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[114783] = {
					"Doncella reformada", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[185147] = {
					"Stormcaller", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[114526] = {
					"Suplente fantasmal", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[77935] = {
					"Sargerei Warden", -- [1]
					"Auchindoun", -- [2]
				},
				[122970] = {
					"Acechador de hoja de las sombras", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[166299] = {
					"Cuidadora de Veloniebla", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[144294] = {
					"Mechagon Tinkerer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[98406] = {
					"Escorpión Cascarascuas", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[40584] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[173720] = {
					"Garganta sangrienta de Veloniebla", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[190609] = {
					"Echo of Doragosa", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[98533] = {
					"Foul Mother", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[105699] = {
					"Sable de maná", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[154018] = {
					"Prisonbreak Mauler", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[144295] = {
					"Mechagon Mechanic", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[164506] = {
					"Capitán antiguo", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[75506] = {
					"Partidaria de Sombraluna", -- [1]
					"Cementerios de Sombraluna", -- [2]
				},
				[116574] = {
					"Silver Forks", -- [1]
					"Return to Karazhan", -- [2]
				},
				[59705] = {
					"Scarlet Flamethrower", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[122971] = {
					"Gigante Dazar'ai", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[164510] = {
					"Ballestero desgarbado", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[209800] = {
					"Cycle Warden", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[74355] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[171799] = {
					"Celador de las profundidades", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[177816] = {
					"Especialista en interrogatorios", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[76466] = {
					"Psyfiend", -- [1]
					"Auchindoun", -- [2]
				},
				[166302] = {
					"Cosechador de cadáveres", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[42695] = {
					"Stonecore Sentry", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[28231] = {
					"Crystalline Tender", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[114329] = {
					"Luminore", -- [1]
					"Return to Karazhan", -- [2]
				},
				[79852] = {
					"Oshir", -- [1]
					"Iron Docks", -- [2]
				},
				[177817] = {
					"Oficial de apoyo", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[98280] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[41096] = {
					"Oráculo Naz'jar", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[129369] = {
					"Irontide Raider", -- [1]
					"Siege of Boralus", -- [2]
				},
				[144298] = {
					"Robot de defensa Mk III", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[74356] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[59789] = {
					"Thalnos the Soulrender", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[114522] = {
					"Mrs. Cauldrons", -- [1]
					"Return to Karazhan", -- [2]
				},
				[100526] = {
					"Tormented Bloodseeker", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[114266] = {
					"Shoreline Tidespeaker", -- [1]
					"Return to Karazhan", -- [2]
				},
				[166304] = {
					"Aguijonero de Veloniebla", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[130521] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[101991] = {
					"Criatura de Pesadilla", -- [1]
					"Matorral Corazón Oscuro", -- [2]
					"enUS", -- [3]
				},
				[187771] = {
					"Kadros Icewrath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[199037] = {
					"Primalist Shocktrooper", -- [1]
					"Halls of Infusion", -- [2]
				},
				[102375] = {
					"Runecarver Slave", -- [1]
					"Maw of Souls", -- [2]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[211339] = {
					"Dream Seedling", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[190128] = {
					"Zul'gamux", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[74357] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[175517] = {
					"Symbiotic Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[187767] = {
					"Embar Firepath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[199549] = {
					"Flamesworn Herald", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[85232] = {
					"Entidad desconocida", -- [1]
					"El Sempibrote", -- [2]
				},
				[42696] = {
					"Stonecore Warbringer", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[144301] = {
					"Living Waste", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[81522] = {
					"Witherbark", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[188244] = {
					"Primal Juggernaut", -- [1]
					"Ruby Life Pools", -- [2]
					"enUS", -- [3]
				},
				[104295] = {
					"Blazing Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[77812] = {
					"Sargerei Soulbinder", -- [1]
					"Auchindoun", -- [2]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[47238] = {
					"Whipping Wind", -- [1]
					"The Vortex Pinnacle", -- [2]
				},
				[187033] = {
					"Putrealiento", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[76284] = {
					"Spiteful Arbiter", -- [1]
					"Auchindoun", -- [2]
				},
				[184140] = {
					"Acólito de Xy", -- [1]
					"Sepulcro de los Primeros", -- [2]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[173190] = {
					"Court Hawkeye", -- [1]
					"Castle Nathria", -- [2]
				},
				[97259] = {
					"Blazing Hydra Spawn", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[189555] = {
					"Arcane Attendant", -- [1]
					"The Azure Vault", -- [2]
				},
				[105703] = {
					"Mana Wyrm", -- [1]
					"Court of Stars", -- [2]
				},
				[183424] = {
					"Caballero virtuoso", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[208478] = {
					"Volcoross", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[99676] = {
					"Mogu'shan Secret-Keeper", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[129547] = {
					"Manopla dientenegro", -- [1]
					"Puerto Libre", -- [2]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Halls of Atonement", -- [2]
				},
				[122847] = {
					"Umbral Priestess", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[170147] = {
					"Recuerdo volátil", -- [1]
					"El Otro Lado", -- [2]
				},
				[202613] = {
					"Portalkeeper Cimbra", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[201333] = {
					"Awakened Avalanche", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[76177] = {
					"Soulbinder Nyami", -- [1]
					"Auchindoun", -- [2]
				},
				[210288] = {
					"Ancient Core Hound", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[193944] = {
					"Lavamante qalashi", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[114792] = {
					"Virtuous Lady", -- [1]
					"Return to Karazhan", -- [2]
				},
				[97260] = {
					"Arcane Hydra Spawn", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[168578] = {
					"Fungimántico", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[105704] = {
					"Manifestación Arcana", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[189233] = {
					"Caustic Spiderling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190034] = {
					"Destructor lazollama", -- [1]
					"Estanques de Vida Rubí", -- [2]
				},
				[184954] = {
					"Ancient Shaper", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[136934] = {
					"Weapons Tester", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[150154] = {
					"Saurolisco mascahuesos", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[169893] = {
					"Hablaoscuro nefario", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[79508] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[129559] = {
					"Cutwater Duelist", -- [1]
					"Freehold", -- [2]
				},
				[26730] = {
					"Mage Slayer", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[189340] = {
					"Chargath, Bane of Scales", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[26794] = {
					"Ormorok the Tree-Shaper", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[183671] = {
					"Monstrous Soul", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[133007] = {
					"Unbound Abomination", -- [1]
					"The Underrot", -- [2]
				},
				[115757] = {
					"Wrathguard Flamebringer", -- [1]
					"Return to Karazhan", -- [2]
				},
				[200131] = {
					"Guardián influenciado por el sha", -- [1]
					"Templo del Dragón de Jade", -- [2]
				},
				[105705] = {
					"Energía vinculada", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[100991] = {
					"Strangling Roots", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[150146] = {
					"Chamán huesudo", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[135052] = {
					"Sapo de añublo", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[181546] = {
					"Prototype of Renewal", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[130909] = {
					"Gusano fétido", -- [1]
					"UNKNOWN", -- [2]
				},
				[84957] = {
					"Putrid Pyromancer", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[183412] = {
					"Dominated Saboteur", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[95832] = {
					"Doncella escudera Valarjar", -- [1]
					"Salones del Valor", -- [2]
				},
				[178851] = {
					"Burning Stygia", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[77890] = {
					"Durag the Dominator", -- [1]
					"Auchindoun", -- [2]
				},
				[203927] = {
					"Failed Prototype", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[206230] = {
					"Distractor Infinito", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[126919] = {
					"Clamatormentas mareaférrea", -- [1]
					"Puerto Libre", -- [2]
				},
				[190366] = {
					"Croacito curioso", -- [1]
					"Salas de Infusión", -- [2]
				},
				[180387] = {
					"Mawsworn Paindrinker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[187242] = {
					"Tarasek Looter", -- [1]
					"The Azure Vault", -- [2]
				},
				[187246] = {
					"Nullmagic Hornswog", -- [1]
					"The Azure Vault", -- [2]
				},
				[151659] = {
					"Rocket Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[77131] = {
					"Sargerei Spirit-Tender", -- [1]
					"Auchindoun", -- [2]
				},
				[180336] = {
					"Mafioso del cártel", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[194241] = {
					"Vil Maleputre", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[77816] = {
					"Borka the Brute", -- [1]
					"Grimrail Depot", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98542] = {
					"Amalgam of Souls", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[173798] = {
					"Rat of Unusual Size", -- [1]
					"Castle Nathria", -- [2]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[98926] = {
					"Shadow Hunter", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[107114] = {
					"Tormenting Orb", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[163501] = {
					"Hostigador Rechazado", -- [1]
					"Torres de Ascensión", -- [2]
				},
				[190368] = {
					"Clamallamas Aymi", -- [1]
					"Salas de Infusión", -- [2]
				},
				[200035] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[176551] = {
					"Purificador de la bóveda", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[118728] = {
					"Ghastly Bonewarden", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[187897] = {
					"Retador Draghar", -- [1]
					"Estanques de Vida Rubí", -- [2]
				},
				[79510] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[203811] = {
					"Incarnation of Entropy", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[104300] = {
					"Señora de la Sombra", -- [1]
					"Corte de Estrellas", -- [2]
				},
				[165805] = {
					"Shade of Kael'thas", -- [1]
					"Castle Nathria", -- [2]
				},
				[82039] = {
					"Rockspine Stinger", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[195927] = {
					"Cosechadora de almas Galtmaa", -- [1]
					"El Ataque Nokhud", -- [2]
				},
				[199325] = {
					"Nokhud Stormcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75451] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[185508] = {
					"Claw Fighter", -- [1]
					"Brackenhide Hollow", -- [2]
					"enUS", -- [3]
				},
				[121473] = {
					"Coercitor Nixa", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[188067] = {
					"Tejescarcha rayogélido", -- [1]
					"Estanques de Vida Rubí", -- [2]
				},
				[190370] = {
					"Squallbringer Cyraz", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[192761] = {
					"Iskakx", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[130400] = {
					"Triturador mareaférrea", -- [1]
					"Puerto Libre", -- [2]
				},
				[197535] = {
					"Suma canalizadora Ryvati", -- [1]
					"Estanques de Vida Rubí", -- [2]
				},
				[118374] = {
					"Captain Yathae Moonstrike", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[198047] = {
					"Canalizadora de tempestades", -- [1]
					"Estanques de Vida Rubí", -- [2]
				},
				[112668] = {
					"Infernal Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[190371] = {
					"Sacudetierra primalista", -- [1]
					"Salas de Infusión", -- [2]
				},
				[75899] = {
					"Entidad desconocida", -- [1]
					"Cementerios de Sombraluna", -- [2]
				},
				[205212] = {
					"Entidad desconocida", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[26731] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[26763] = {
					"Anomalus", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[171181] = {
					"Picofiloso territorial", -- [1]
					"El Otro Lado", -- [2]
				},
				[97200] = {
					"Seacursed Soulkeeper", -- [1]
					"Maw of Souls", -- [2]
				},
				[98246] = {
					"Risen Warrior", -- [1]
					"Maw of Souls", -- [2]
				},
				[129598] = {
					"Freehold Pack Mule", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[155908] = {
					"Deathspeaker", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[176555] = {
					"Achillite", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[95779] = {
					"Festerhide Grizzly", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[203678] = {
					"Grommash Hellscream", -- [1]
					"Dawn of the Infinite", -- [2]
				},
				[197793] = {
					"Awakened Juggernaut", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[185691] = {
					"Hiena sañosa", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[168418] = {
					"Inquisidora Rechazada", -- [1]
					"Torres de Ascensión", -- [2]
				},
				[190373] = {
					"Cantavientos primalista", -- [1]
					"Salas de Infusión", -- [2]
				},
				[40013] = {
					"Buster", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[184911] = {
					"Entidad desconocida", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[50376] = {
					"Angered Earth", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[203679] = {
					"Anduin Lothar", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[115395] = {
					"Reina", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[162047] = {
					"Bruto insaciable", -- [1]
					"Profundidades Sanguíneas", -- [2]
				},
				[90997] = {
					"Destructor de Petrofuerza", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[187192] = {
					"Garrafuria", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[91002] = {
					"Rotdrool Grabber", -- [1]
					"UNKNOWN", -- [2]
				},
				[198871] = {
					"Sundered Scaleguard", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[205727] = {
					"Time-Lost Rocketeer", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[171184] = {
					"Mythresh, garfas del cielo", -- [1]
					"El Otro Lado", -- [2]
				},
				[40825] = {
					"Erunak Stonespeaker", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[79739] = {
					"Granadero Grom'kar", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[169905] = {
					"Señor de la guerra resucitado", -- [1]
					"El Otro Lado", -- [2]
				},
				[114794] = {
					"Sabueso esquelético", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[192934] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[61699] = {
					"Sik'thik Amberwing", -- [1]
					"Siege of Niuzao Temple", -- [2]
				},
				[83613] = {
					"Koramar", -- [1]
					"Muelles de hierro", -- [2]
				},
				[82682] = {
					"Archmage Sol", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[198308] = {
					"Frostwrought Dominator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[208459] = {
					"Fiery Treant", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[194745] = {
					"Hiena colmipútrea", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[164414] = {
					"Mago reanimado", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[168627] = {
					"Ligaplagas", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[184131] = {
					"Guardián terráneo", -- [1]
					"Uldaman: Legado de Tyr", -- [2]
					"enUS", -- [3]
				},
				[83578] = {
					"Trabajador ogron", -- [1]
					"Muelles de hierro", -- [2]
				},
				[59930] = {
					"Empowered Zombie", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[197801] = {
					"Awakened Terrasentry", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[190377] = {
					"Invocahielo primalista", -- [1]
					"Salas de Infusión", -- [2]
				},
				[192680] = {
					"Centinela guardián", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[200126] = {
					"Orador del agua caído", -- [1]
					"Templo del Dragón de Jade", -- [2]
				},
				[199333] = {
					"Frostbreath Arachnid", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[127119] = {
					"Freehold Deckhand", -- [1]
					"Freehold", -- [2]
					"enUS", -- [3]
				},
				[206070] = {
					"Cronaxi", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[190187] = {
					"Draconic Image", -- [1]
					"The Azure Vault", -- [2]
				},
				[196263] = {
					"Nokhud Neophyte", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[186284] = {
					"Oso muerdetripas", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[135365] = {
					"Matron Alma", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[131527] = {
					"Lord Waycrest", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[130404] = {
					"Trampa para alimañas", -- [1]
					"Puerto Libre", -- [2]
				},
				[172979] = {
					"Esporeadora Almíbar", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[95861] = {
					"Hatecoil Oracle", -- [1]
					"Eye of Azshara", -- [2]
				},
				[205638] = {
					"Sundered Flame Banner", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[198311] = {
					"Flamewrought Eradicator", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[56930] = {
					"Krik'thik Swarm Bringer", -- [1]
					"Gate of the Setting Sun", -- [2]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[189464] = {
					"Antorcha de hierro qalashi", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[104822] = {
					"Flame of Woe", -- [1]
					"Halls of Valor", -- [2]
				},
				[168886] = {
					"Virulax Hilañublo", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[26796] = {
					"Commander Stoutbeard", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[134599] = {
					"Imbued Stormcaller", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[91000] = {
					"Mole Piezavil", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[97269] = {
					"Hatecoil Crestrider", -- [1]
					"Eye of Azshara", -- [2]
				},
				[120482] = {
					"Tidescale Seacaller", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[176563] = {
					"Zo'gron", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[196671] = {
					"Devastador arcano", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[172981] = {
					"Cosido kyriano", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[99956] = {
					"Fel-Infused Fury", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[134600] = {
					"Sandswept Marksman", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[84554] = {
					"Venom-Crazed Pale One", -- [1]
					"The Everbloom", -- [2]
				},
				[190381] = {
					"Entidad desconocida", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[40015] = {
					"Runty", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[173138] = {
					"Escolta jurafauces", -- [1]
					"Las Tierras de las Sombras", -- [2]
				},
				[98677] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[205734] = {
					"Sundered Edgelord", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[155216] = {
					"Faeleaf Warden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[201472] = {
					"Torch Revenant", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[91001] = {
					"Rondador Escupebrea", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[187593] = {
					"Primal Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[202814] = {
					"Twisted Aberration", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[176565] = {
					"Entidad desconocida", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[203688] = {
					"Bruto de la Horda", -- [1]
					"El Alba del Infinito", -- [2]
				},
				[178631] = {
					"Mawsworn Commander", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[208698] = {
					"Mago de fallas infinitas", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[114542] = {
					"Filántropo fantasmal", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[96247] = {
					"Vileshard Crawler", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[54701] = {
					"Time-Twisted Huntress", -- [1]
					"End Time", -- [2]
					"enUS", -- [3]
				},
				[205265] = {
					"Time-Displaced Trooper", -- [1]
					"Dawn of the Infinite", -- [2]
					"enUS", -- [3]
				},
				[133835] = {
					"Enjambrista de sangre feral", -- [1]
					"Bardoma", -- [2]
				},
				[199595] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[206063] = {
					"Desviación temporal", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[201754] = {
					"Sarkareth", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[179893] = {
					"Vagador del cártel", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[84989] = {
					"Infested Icecaller", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[156212] = {
					"Coldheart Agent", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[43662] = {
					"Unbound Earth Rager", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[133836] = {
					"Reanimated Guardian", -- [1]
					"The Underrot", -- [2]
				},
				[81407] = {
					"Bombardero Riel siniestro", -- [1]
					"Depósito Riel siniestro", -- [2]
				},
				[129553] = {
					"Dinomántica Kish'o", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[192786] = {
					"Qalashi Plunderer", -- [1]
					"Neltharus", -- [2]
					"enUS", -- [3]
				},
				[167612] = {
					"Atracador petronato", -- [1]
					"Salones de Expiación", -- [2]
				},
				[203812] = {
					"Voice From Beyond", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[178628] = {
					"Mawsworn Darkcaster", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[194991] = {
					"Oathsworn Vanguard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[138187] = {
					"Horror grotesco", -- [1]
					"Bardoma", -- [2]
				},
				[100539] = {
					"Taintheart Deadeye", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[65362] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[91003] = {
					"Rokmora", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[84990] = {
					"Addled Arcanomancer", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[180407] = {
					"Gorgoan Sentinel", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[125977] = {
					"Reanimation Totem", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[81603] = {
					"Campeona Druna", -- [1]
					"Muelles de hierro", -- [2]
				},
				[193457] = {
					"Balara", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[131669] = {
					"Sabueso dentado", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[165189] = {
					"Чук", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[163520] = {
					"Líder de escuadrón Rechazada", -- [1]
					"Torres de Ascensión", -- [2]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[203230] = {
					"Dragonfire Golem", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[180664] = {
					"Mawsworn Infuser", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[198874] = {
					"Sundered Siegemaster", -- [1]
					"Aberrus, the Shadowed Crucible", -- [2]
					"enUS", -- [3]
				},
				[86526] = {
					"Maestro de cadenas Grom'kar", -- [1]
					"Muelles de hierro", -- [2]
				},
				[50284] = {
					"Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[40943] = {
					"Mago acuático Gilgoblin", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[99192] = {
					"Shade of Xavius", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[174012] = {
					"Executrix Ophelia", -- [1]
					"Castle Nathria", -- [2]
				},
				[39665] = {
					"Rom'ogg Bonecrusher", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[180474] = {
					"Soul Reaver", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[201467] = {
					"Stonebreath Summoner", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[40935] = {
					"Gilgoblin Hunter", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[114289] = {
					"Skeletal Sorcerer", -- [1]
					"Maw of Souls", -- [2]
				},
				[204206] = {
					"Clarividente de la Horda", -- [1]
					"El Alba del Infinito", -- [2]
				},
				[100216] = {
					"Hatecoil Wrangler", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[120473] = {
					"Tidescale Combatant", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[40017] = {
					"Twilight Element Warden", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[168384] = {
					"Flesh Construct", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[197298] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[135240] = {
					"Esencia de alma", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[185528] = {
					"Mística zarpatruco", -- [1]
					"Hondonada Frondacuero", -- [2]
					"enUS", -- [3]
				},
				[189878] = {
					"Entidad desconocida", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[91005] = {
					"Naraxas", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[43875] = {
					"Asaad", -- [1]
					"The Vortex Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[166971] = {
					"Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[176573] = {
					"Mawsworn Woebringer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[212673] = {
					"Devastador Naz'jar", -- [1]
					"Trono de las Mareas", -- [2]
					"enUS", -- [3]
				},
				[132051] = {
					"Blood Tick", -- [1]
					"The Underrot", -- [2]
				},
				[179388] = {
					"Maresabia de reloj de arena", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[175550] = {
					"Volatile Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[54543] = {
					"Time-Twisted Drake", -- [1]
					"End Time", -- [2]
					"enUS", -- [3]
				},
				[114802] = {
					"Oficial espectral", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[192519] = {
					"Monstrous Mud", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[135989] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[193462] = {
					"Batak", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[125828] = {
					"Hoobgoob", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[201468] = {
					"Stonebreath Landslider", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
				[91006] = {
					"Rechinador Espaldapétrea", -- [1]
					"Guarida de Neltharion", -- [2]
				},
				[103344] = {
					"Oakheart", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[113197] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[176575] = {
					"Mawsworn Soulwarden", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[170690] = {
					"Horror enfermo", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[39698] = {
					"Karsh Steelbender", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[131847] = {
					"Waycrest Reveler", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[120463] = {
					"Undersea Custodian", -- [1]
					"Tomb of Sargeras", -- [2]
					"enUS", -- [3]
				},
				[181549] = {
					"Prototype of War", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[167876] = {
					"Inquisidor Sigar", -- [1]
					"Salones de Expiación", -- [2]
				},
				[114803] = {
					"Mano de establo espectral", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[194999] = {
					"Volatile Spark", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[204536] = {
					"Trozo de añubio", -- [1]
					"El Alba del Infinito", -- [2]
					"enUS", -- [3]
				},
				[139269] = {
					"Entidad desconocida", -- [1]
					"Mansión Tarjasenda", -- [2]
					"enUS", -- [3]
				},
				[115486] = {
					"Asesino erudito", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[178133] = {
					"Saltaolas salsombría", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[91007] = {
					"Dargrul", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[169924] = {
					"Veteran Stoneguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[44648] = {
					"Unyielding Behemoth", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[105720] = {
					"Understone Drudge", -- [1]
					"Neltharion's Lair", -- [2]
					"enUS", -- [3]
				},
				[44752] = {
					"Faceless Sapper", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[97788] = {
					"Draco de la tormenta", -- [1]
					"Salones del Valor", -- [2]
				},
				[98970] = {
					"Latosius", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[43430] = {
					"Stonecore Berserker", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[210173] = {
					"Zaqali Steelshaper", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[169925] = {
					"Begrudging Waiter", -- [1]
					"Castle Nathria", -- [2]
				},
				[80005] = {
					"Skylord Tovra", -- [1]
					"Grimrail Depot", -- [2]
				},
				[75272] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[26734] = {
					"Azure Enforcer", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[129517] = {
					"Raptor reanimado", -- [1]
					"Atal'Dazar", -- [2]
					"enUS", -- [3]
				},
				[167111] = {
					"Corvenado espinafauces", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[176394] = {
					"Trabajador de C.A.R.T.A.", -- [1]
					"Tazavesh, el Mercado Velado", -- [2]
				},
				[91008] = {
					"Rockbound Pelter", -- [1]
					"Neltharion's Lair", -- [2]
				},
				[43537] = {
					"Stonecore Earthshaper", -- [1]
					"The Stonecore", -- [2]
					"enUS", -- [3]
				},
				[180417] = {
					"Loom Artificer", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[192955] = {
					"Draconic Illusion", -- [1]
					"The Azure Vault", -- [2]
				},
				[191164] = {
					"Cuidador arcano", -- [1]
					"La Bóveda Azur", -- [2]
				},
				[207796] = {
					"Burning Colossus", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[169159] = {
					"Lata inestable", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[91789] = {
					"Lady Hatecoil", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[98173] = {
					"Mystic Ssa'veh", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[169927] = {
					"Carnicero pútrido", -- [1]
					"Teatro del Dolor", -- [2]
				},
				[40019] = {
					"Twilight Obsidian Borer", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[199353] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[98813] = {
					"Bloodscent Felhound", -- [1]
					"Black Rook Hold", -- [2]
					"enUS", -- [3]
				},
				[167113] = {
					"Gargantácida espinafauces", -- [1]
					"Nieblas de Tirna Scithe", -- [2]
				},
				[113398] = {
					"Bloodtainted Fury", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[58826] = {
					"Zao Sunseeker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[203799] = {
					"Horde Axe Thrower", -- [1]
					"Dawn of the Infinite", -- [2]
				},
				[135474] = {
					"Thistle Acolyte", -- [1]
					"Waycrest Manor", -- [2]
					"enUS", -- [3]
				},
				[209333] = {
					"Gnarlroot", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[196043] = {
					"Infusora primalista", -- [1]
					"Salas de Infusión", -- [2]
				},
				[114338] = {
					"Confluencia de maná", -- [1]
					"Regreso a Karazhan", -- [2]
				},
				[185537] = {
					"Foul Controller", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[99360] = {
					"Vilethorn Blossom", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[165138] = {
					"Bolsa de añublo", -- [1]
					"La Destrucción Necrótica", -- [2]
				},
				[91785] = {
					"Wandering Shellback", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[91784] = {
					"Warlord Parjesh", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[168394] = {
					"Bocado limoso", -- [1]
					"Plaga Abrumadora", -- [2]
				},
				[150293] = {
					"Merodeador de Mecalópolis", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[177094] = {
					"Signe", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[59722] = {
					"Pile of Corpses", -- [1]
					"Scarlet Monastery", -- [2]
				},
				[100249] = {
					"Channeler Varisz", -- [1]
					"Eye of Azshara", -- [2]
					"enUS", -- [3]
				},
				[78728] = {
					"Shaadum", -- [1]
					"Auchindoun", -- [2]
				},
				[102566] = {
					"Grimhorn the Enslaver", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[95888] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
					"enUS", -- [3]
				},
				[178630] = {
					"Mawsworn Seeker", -- [1]
					"Sanctum of Domination", -- [2]
				},
				[164557] = {
					"Esquirla de Halkias", -- [1]
					"Salones de Expiación", -- [2]
				},
				[39700] = {
					"Beauty", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[155090] = {
					"Espiralero anodizado", -- [1]
					"Operación: Mecalópolis", -- [2]
				},
				[83846] = {
					"Yalnu", -- [1]
					"The Everbloom", -- [2]
					"enUS", -- [3]
				},
				[190401] = {
					"Gusting Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[196798] = {
					"Maligno de maná corrupto", -- [1]
					"Academia Algeth'ar", -- [2]
				},
				[96512] = {
					"Archdruid Glaidalis", -- [1]
					"Darkheart Thicket", -- [2]
					"enUS", -- [3]
				},
				[96640] = {
					"Valarjar Marksman", -- [1]
					"Halls of Valor", -- [2]
				},
				[213942] = {
					"Sludge", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[179399] = {
					"Drunk Pirate", -- [1]
					"Tazavesh, the Veiled Market", -- [2]
				},
				[185032] = {
					"Taskmaster Xy'pro", -- [1]
					"Sepulcher of the First Ones", -- [2]
				},
				[208367] = {
					"Pip", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[208363] = {
					"Urctos", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[209090] = {
					"Tindral Sageswift", -- [1]
					"Amirdrassil, the Dream's Hope", -- [2]
					"enUS", -- [3]
				},
				[114319] = {
					"Lady Keira Berrybuck", -- [1]
					"Return to Karazhan", -- [2]
				},
				[201470] = {
					"Flickering Flame", -- [1]
					"10.1 Zaralek Caverns - Chapter 1 Scenario", -- [2]
					"enUS", -- [3]
				},
			},
			["aura_cooldown_reverse"] = false,
			["aggro_modifies"] = {
				["health_bar_color"] = false,
			},
			["aura_stack_shadow_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0, -- [4]
			},
			["cast_statusbar_fadeout_time"] = 0.2000000029802322,
			["aura_height2"] = 28,
			["health_cutoff"] = false,
			["hook_data_trash"] = {
				{
					["OptionsValues"] = {
						["ignore_color_changes"] = true,
						["testing"] = false,
					},
					["LastHookEdited"] = "Nameplate Added",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if (modTable.playerHasAggro(unitFrame)) then\n        envTable.showAggroOverlay(unitFrame);\n    else\n        envTable.hideAggroOverlay(unitFrame);\n    end\nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if (modTable.playerHasAggro(unitFrame)) then\n        envTable.showAggroOverlay(unitFrame);\n    else\n        envTable.hideAggroOverlay(unitFrame);\n    end\nend\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    --[[\n        Checks if player has aggro\n\n        @return {Boolean}\n    --]]\n    function modTable.playerHasAggro(unitFrame)\n        if (modTable.config['testing'] == true) then\n            if (not modTable.config['ignore_color_changes']) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n            end\n            \n            return true;\n        end\n        \n        if (not Plater.IsInCombat()) then\n            return false;\n        end\n        \n        if (not unitFrame.InCombat) then\n            return false;\n        end\n        \n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return false;\n        end\n        \n        if (Plater.PlayerIsTank) then\n            if (not unitFrame.namePlateThreatIsTanking) then\n                if (not modTable.config['ignore_color_changes']) then\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        else\n            local tanks = Plater.GetTanks();\n            local targetOfTarget = UnitName(unitFrame.targetUnitID or '');\n            local targetOfTargetIsPlayer = targetOfTarget == UnitName('player');\n            local unitIsNotAttackingTank = false;\n            \n            if (Plater.db.profile.aggro_can_check_notank) then\n                unitIsNotAttackingTank = (\n                    targetOfTarget and \n                    not tanks[targetOfTarget]\n                );\n            end\n            \n            if (unitFrame.namePlateThreatIsTanking or unitIsNotAttackingTank) then\n                if (Plater.db.profile.aggro_can_check_notank and unitIsNotAttackingTank and not targetOfTargetIsPlayer) then\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.notontank);\n                    end\n                else\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro);\n                    end\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local textureHeight = self.healthBar:GetHeight() * 4;\n    local textureWidth = textureHeight * 2;\n    \n    unitFrame._currentColor = nil;\n    \n    --[[\n        @var {Table}\n    --]]\n    envTable.TEXTURE_CONFIG = {\n        ['height'] = textureHeight,\n        ['width'] = textureWidth\n    };\n    \n    --[[\n        @var {String}\n    --]]\n    envTable.TEXTURE_PATH = [[Interface\\AddOns\\ElvUI_GennUI\\media\\textures\\Aggro.tga]];\n    \n    --[[ \n        Creates the overlay frame if it doesn't exist\n    \n        @param  {Plater.unitFrame}  unitFrame\n    \n        @return {void}\n    --]]\n    function envTable.createFrameIfNotExists(unitFrame)\n        local healthBar = unitFrame.healthBar;\n        \n        if (not healthBar.aggroOverlayLeft) then\n            healthBar.aggroOverlayLeft = envTable.createOverlayFrame(\n                healthBar, \n                'left', \n                -10 - math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayLeft.overlayTexture:SetTexCoord(0, 1, 1, 0);\n        end\n        \n        if (not healthBar.aggroOverlayRight) then\n            healthBar.aggroOverlayRight = envTable.createOverlayFrame(\n                healthBar, \n                'right', \n                10 + math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayRight.overlayTexture:SetTexCoord(1, 0, 0, 1);\n        end\n        \n        if (not healthBar.targetOfTargetText) then\n            unitFrame._currentTargetName = '';\n            healthBar.targetOfTargetText = envTable.createTargetOfTargetFrame(\n                healthBar\n            );\n        end\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame.healthBar}  healthBar\n\n        @return {Frame}\n    --]]\n    function envTable.createTargetOfTargetFrame(healthBar)\n        local textFrame = Plater:CreateLabel(healthBar);        \n        textFrame:SetPoint('topleft', healthBar, 'topleft', 0, 5);\n        textFrame.textcolor = 'white';\n        textFrame.textsize = 7;\n        textFrame.outline = 'OUTLINE';\n        textFrame:Show();\n        \n        return textFrame;\n    end\n    \n    --[[ \n        Creates the overlay frame\n    \n        @param  {Plater.unitFrame.healthbar}  healthBar\n        @param  {String}  originPoint\n        @param  {Number}  posX\n        @param  {Number}  posY\n    \n        @return {Frame}\n    --]]\n    function envTable.createOverlayFrame(healthBar, originPoint, posX, posY)\n        local overlayFrame = CreateFrame('frame', nil, healthBar);\n        overlayFrame:SetFrameLevel(healthBar:GetFrameLevel());\n        overlayFrame:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        \n        local overlayColorR, overlayColorG, overlayColorB = DetailsFramework:ParseColors (Plater.db.profile.tank.colors.noaggro);\n        local overlayTexture = Plater:CreateImage(overlayFrame, envTable.TEXTURE_PATH);\n        overlayTexture:SetVertexColor(overlayColorR, overlayColorG, overlayColorB);\n        overlayTexture:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        overlayTexture:SetSize(envTable.TEXTURE_CONFIG['width'], envTable.TEXTURE_CONFIG['height']);\n        \n        overlayFrame.overlayTexture = overlayTexture;\n        overlayFrame:Show();\n        \n        return overlayFrame;\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame}  unitFrame\n        @param  {String}  targetUnitID\n\n        @return {Frame}\n    --]]\n    function envTable.updateTargetOfTarget(unitFrame, targetUnitID)\n        local targetText = unitFrame.healthBar.targetOfTargetText;\n        local targetUnitName = UnitName(targetUnitID or '') or '';\n        \n        if (targetUnitName == UnitName('player')) then\n            targetUnitName = '';\n        end\n        \n        if (unitFrame._currentTargetName == targetUnitName) then\n            return;\n        end\n        \n        unitFrame._currentTargetName = targetUnitName;\n        targetText.text = targetUnitName;\n        \n        local _, class = UnitClass(targetUnitID or '');\n        \n        if (class and UnitIsPlayer(targetUnitID or '')) then\n            targetText.textcolor = DetailsFramework:ParseColors(class);\n        else\n            targetText.textcolor = Plater.db.profile.castbar_target_color;\n        end\n    end\n    \n    --[[\n        Updates the aggro overlay texture color\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.updateAggroOverlayColor(unitFrame)\n        local colorR, colorG, colorB, colorA = DetailsFramework:ParseColors(unitFrame.healthBar:GetColor());\n        local qualifiedColor = envTable.qualifyColor(colorR, colorG, colorB, colorA);\n        \n        if (unitFrame._currentColor == qualifiedColor) then\n            return;\n        end\n        \n        unitFrame._currentColor = qualifiedColor;\n        \n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n    end\n    \n    --[[\n        Qualifies a color to a cacheable string\n\n        @param  {Number}  r\n        @param  {Number}  g\n        @param  {Number}  b\n        @param  {Number}  a\n\n        @return {String}\n    --]]\n    function envTable.qualifyColor(r, g, b, a)\n        return tostring(r) .. tostring(g) .. tostring(b) .. tostring(a);\n    end\n    \n    --[[ \n        Shows the overlay frames\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.showAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, unitFrame.targetUnitID);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Show();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Show();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\n    \n    --[[ \n        Hides the overlay frames\n\n        @return {void}\n    --]]\n    function envTable.hideAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, nil);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Hide();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Hide();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\nend",
					},
					["__TrashAt"] = 1705683376,
					["Time"] = 1680360970,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/AUO8fWcea/6",
					["Icon"] = 237529,
					["Enabled"] = true,
					["Revision"] = 247,
					["semver"] = "2.1.1",
					["Author"] = "Allessiel-Azralon",
					["Desc"] = "Smart aggro overlay to nameplates",
					["Prio"] = 99,
					["Name"] = "Allessiel Smart Aggro Overlay for Tanks",
					["PlaterCore"] = 1,
					["version"] = 6,
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if (modTable.playerHasAggro(unitFrame)) then\n        envTable.showAggroOverlay(unitFrame);\n    else\n        envTable.hideAggroOverlay(unitFrame);\n    end\nend\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if (modTable.playerHasAggro(unitFrame)) then\n        envTable.showAggroOverlay(unitFrame);\n    else\n        envTable.hideAggroOverlay(unitFrame);\n    end\nend\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    --[[\n        Checks if player has aggro\n\n        @return {Boolean}\n    --]]\n    function modTable.playerHasAggro(unitFrame)\n        if (modTable.config['testing'] == true) then\n            if (not modTable.config['ignore_color_changes']) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n            end\n            \n            return true;\n        end\n        \n        if (not Plater.IsInCombat()) then\n            return false;\n        end\n        \n        if (not unitFrame.InCombat) then\n            return false;\n        end\n        \n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return false;\n        end\n        \n        if (Plater.PlayerIsTank) then\n            if (not unitFrame.namePlateThreatIsTanking) then\n                if (not modTable.config['ignore_color_changes']) then\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        else\n            local tanks = Plater.GetTanks();\n            local targetOfTarget = UnitName(unitFrame.targetUnitID or '');\n            local targetOfTargetIsPlayer = targetOfTarget == UnitName('player');\n            local unitIsNotAttackingTank = false;\n            \n            if (Plater.db.profile.aggro_can_check_notank) then\n                unitIsNotAttackingTank = (\n                    targetOfTarget and \n                    not tanks[targetOfTarget]\n                );\n            end\n            \n            if (unitFrame.namePlateThreatIsTanking or unitIsNotAttackingTank) then\n                if (Plater.db.profile.aggro_can_check_notank and unitIsNotAttackingTank and not targetOfTargetIsPlayer) then\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.notontank);\n                    end\n                else\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro);\n                    end\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local textureHeight = self.healthBar:GetHeight() * 4;\n    local textureWidth = textureHeight * 2;\n    \n    unitFrame._currentColor = nil;\n    \n    --[[\n        @var {Table}\n    --]]\n    envTable.TEXTURE_CONFIG = {\n        ['height'] = textureHeight,\n        ['width'] = textureWidth\n    };\n    \n    --[[\n        @var {String}\n    --]]\n    envTable.TEXTURE_PATH = [[Interface\\AddOns\\ElvUI_GennUI\\media\\textures\\Aggro.tga]];\n    \n    --[[ \n        Creates the overlay frame if it doesn't exist\n    \n        @param  {Plater.unitFrame}  unitFrame\n    \n        @return {void}\n    --]]\n    function envTable.createFrameIfNotExists(unitFrame)\n        local healthBar = unitFrame.healthBar;\n        \n        if (not healthBar.aggroOverlayLeft) then\n            healthBar.aggroOverlayLeft = envTable.createOverlayFrame(\n                healthBar, \n                'left', \n                -10 - math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayLeft.overlayTexture:SetTexCoord(0, 1, 1, 0);\n        end\n        \n        if (not healthBar.aggroOverlayRight) then\n            healthBar.aggroOverlayRight = envTable.createOverlayFrame(\n                healthBar, \n                'right', \n                10 + math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayRight.overlayTexture:SetTexCoord(1, 0, 0, 1);\n        end\n        \n        if (not healthBar.targetOfTargetText) then\n            unitFrame._currentTargetName = '';\n            healthBar.targetOfTargetText = envTable.createTargetOfTargetFrame(\n                healthBar\n            );\n        end\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame.healthBar}  healthBar\n\n        @return {Frame}\n    --]]\n    function envTable.createTargetOfTargetFrame(healthBar)\n        local textFrame = Plater:CreateLabel(healthBar);        \n        textFrame:SetPoint('topleft', healthBar, 'topleft', 0, 5);\n        textFrame.textcolor = 'white';\n        textFrame.textsize = 7;\n        textFrame.outline = 'OUTLINE';\n        textFrame:Show();\n        \n        return textFrame;\n    end\n    \n    --[[ \n        Creates the overlay frame\n    \n        @param  {Plater.unitFrame.healthbar}  healthBar\n        @param  {String}  originPoint\n        @param  {Number}  posX\n        @param  {Number}  posY\n    \n        @return {Frame}\n    --]]\n    function envTable.createOverlayFrame(healthBar, originPoint, posX, posY)\n        local overlayFrame = CreateFrame('frame', nil, healthBar);\n        overlayFrame:SetFrameLevel(healthBar:GetFrameLevel());\n        overlayFrame:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        \n        local overlayColorR, overlayColorG, overlayColorB = DetailsFramework:ParseColors (Plater.db.profile.tank.colors.noaggro);\n        local overlayTexture = Plater:CreateImage(overlayFrame, envTable.TEXTURE_PATH);\n        overlayTexture:SetVertexColor(overlayColorR, overlayColorG, overlayColorB);\n        overlayTexture:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        overlayTexture:SetSize(envTable.TEXTURE_CONFIG['width'], envTable.TEXTURE_CONFIG['height']);\n        \n        overlayFrame.overlayTexture = overlayTexture;\n        overlayFrame:Show();\n        \n        return overlayFrame;\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame}  unitFrame\n        @param  {String}  targetUnitID\n\n        @return {Frame}\n    --]]\n    function envTable.updateTargetOfTarget(unitFrame, targetUnitID)\n        local targetText = unitFrame.healthBar.targetOfTargetText;\n        local targetUnitName = UnitName(targetUnitID or '') or '';\n        \n        if (targetUnitName == UnitName('player')) then\n            targetUnitName = '';\n        end\n        \n        if (unitFrame._currentTargetName == targetUnitName) then\n            return;\n        end\n        \n        unitFrame._currentTargetName = targetUnitName;\n        targetText.text = targetUnitName;\n        \n        local _, class = UnitClass(targetUnitID or '');\n        \n        if (class and UnitIsPlayer(targetUnitID or '')) then\n            targetText.textcolor = DetailsFramework:ParseColors(class);\n        else\n            targetText.textcolor = Plater.db.profile.castbar_target_color;\n        end\n    end\n    \n    --[[\n        Updates the aggro overlay texture color\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.updateAggroOverlayColor(unitFrame)\n        local colorR, colorG, colorB, colorA = DetailsFramework:ParseColors(unitFrame.healthBar:GetColor());\n        local qualifiedColor = envTable.qualifyColor(colorR, colorG, colorB, colorA);\n        \n        if (unitFrame._currentColor == qualifiedColor) then\n            return;\n        end\n        \n        unitFrame._currentColor = qualifiedColor;\n        \n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n    end\n    \n    --[[\n        Qualifies a color to a cacheable string\n\n        @param  {Number}  r\n        @param  {Number}  g\n        @param  {Number}  b\n        @param  {Number}  a\n\n        @return {String}\n    --]]\n    function envTable.qualifyColor(r, g, b, a)\n        return tostring(r) .. tostring(g) .. tostring(b) .. tostring(a);\n    end\n    \n    --[[ \n        Shows the overlay frames\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.showAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, unitFrame.targetUnitID);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Show();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Show();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\n    \n    --[[ \n        Hides the overlay frames\n\n        @return {void}\n    --]]\n    function envTable.hideAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, nil);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Hide();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Hide();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\nend",
					},
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Test Mode",
							["Value"] = false,
							["Key"] = "testing",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Don't override Nameplate color",
							["Value"] = false,
							["Key"] = "ignore_color_changes",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Check this to prevent this mod to forcefully change the nameplate color.",
						}, -- [2]
					},
				}, -- [1]
			},
			["extra_icon_anchor"] = {
				["x"] = -16,
			},
			["extra_icon_wide_icon"] = false,
			["aura_frame2_anchor"] = {
				["y"] = 14,
				["side"] = 1,
			},
			["aura_alpha"] = 1,
			["castbar_icon_x_offset"] = -4,
			["debuff_show_cc"] = false,
			["aura_consolidate"] = true,
			["extra_icon_width"] = 32,
			["health_statusbar_texture"] = "GennUI",
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Extra Border"] = 2,
				["Cast Bar Icon Config"] = 2,
				["Aura Reorder"] = 3,
				["Combo Points"] = 6,
				["Execute Range"] = 1,
				["Target Color"] = 3,
				["Attacking Specific Unit"] = 2,
				["Hide Neutral Units"] = 1,
			},
			["castbar_target_text_size"] = 8,
			["aura_frame1_anchor"] = {
				["y"] = 14,
				["side"] = 7,
			},
			["aura_timer_text_font"] = "GennUI",
			["cast_statusbar_color_finished"] = {
				0.1372549019607843, -- [1]
				0.1372549019607843, -- [2]
				0.1294117647058823, -- [3]
				0.9600000008940697, -- [4]
			},
			["extra_icon_stack_font"] = "GennUI",
			["aura_height"] = 28,
			["cast_statusbar_bgtexture"] = "GennUI",
			["aura2_x_offset"] = 0,
			["target_indicator"] = "Arrow",
			["saved_cvars"] = {
				["nameplateShowOnlyNames"] = "0",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["clampTargetNameplateToScreen"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "100",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateTargetBehindMaxDistance"] = "40",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateMotionSpeed"] = "0.025",
				["nameplateShowEnemyMinions"] = "0",
				["nameplateShowEnemyPets"] = "1",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1",
				["nameplateShowFriends"] = "0",
				["nameplateMotion"] = "1",
				["nameplateMinScale"] = "1",
				["nameplateOtherTopInset"] = "0.085",
				["nameplateShowEnemyGuardians"] = "0",
				["nameplateOccludedAlphaMult"] = "0.4",
				["nameplateShowEnemyTotems"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["nameplateLargeTopInset"] = "0.1",
				["ShowClassColorInNameplate"] = "1",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateLargerScale"] = "1",
			},
			["login_counter"] = 924,
			["aura_cooldown_show_swipe"] = false,
			["bossmod_aura_height"] = 36,
			["aura_stack_font"] = "GennUI",
			["blizzard_nameplate_font"] = "GennUI",
			["auto_toggle_combat"] = {
				["blizz_healthbar_ic"] = true,
				["blizz_healthbar_ooc"] = true,
			},
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["aura_timer_text_shadow_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0, -- [4]
			},
			["auras_per_row_amount"] = 4,
			["blizzard_nameplate_large_font"] = "GennUI",
			["aura_stack_anchor"] = {
				["y"] = -8,
				["x"] = 2,
				["side"] = 11,
			},
			["plate_config"] = {
				["global_health_height"] = 14,
				["friendlyplayer"] = {
					["actorname_use_friends_color"] = false,
					["spellpercent_text_font"] = "GennUI",
					["level_text_size"] = 11,
					["actorname_use_class_color"] = true,
					["cast"] = {
						200, -- [1]
						14, -- [2]
					},
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["fixed_class_color"] = {
						1, -- [1]
						0.4, -- [2]
						0.1, -- [3]
					},
					["percent_text_show_decimals"] = false,
					["spellname_text_outline"] = "OUTLINE",
					["click_through"] = false,
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["level_text_font"] = "GennUI",
					["actorname_text_font"] = "GennUI",
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["actorname_use_guild_color"] = false,
					["all_names"] = true,
					["big_actortitle_text_color"] = {
						1, -- [1]
						0.8, -- [2]
						0, -- [3]
					},
					["big_actortitle_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 11,
					["only_damaged"] = false,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_font"] = "GennUI",
					["percent_text_ooc"] = true,
					["level_text_outline"] = "OUTLINE",
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["big_actorname_text_color"] = {
						0.5, -- [1]
						1, -- [2]
						0.5, -- [3]
					},
					["castbar_offset"] = -4,
					["level_text_anchor"] = {
						["y"] = 0,
					},
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						200, -- [1]
						14, -- [2]
					},
					["big_actortitle_text_size"] = 10,
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["big_actorname_text_size"] = 12,
					["spellname_text_anchor"] = {
						["side"] = 10,
					},
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellname_text_font"] = "GennUI",
					["big_actorname_text_outline"] = "OUTLINE",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 12,
					["big_actorname_text_font"] = "GennUI",
					["use_playerclass_color"] = true,
					["quest_enabled"] = true,
					["actorname_text_anchor"] = {
						["y"] = 1,
					},
					["spellpercent_text_enabled"] = true,
					["spellname_text_size"] = 11,
					["percent_text_font"] = "GennUI",
					["buff_frame_y_offset"] = 0,
					["percent_show_percent"] = false,
					["level_text_alpha"] = 1,
					["percent_show_health"] = true,
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["health_incombat"] = {
						60, -- [1]
						4, -- [2]
					},
					["health"] = {
						60, -- [1]
						4, -- [2]
					},
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["quest_color_enabled"] = true,
					["percent_text_size"] = 12,
				},
				["global_health_width"] = 200,
				["enemynpc"] = {
					["spellpercent_text_font"] = "GennUI",
					["level_text_size"] = 11,
					["cast"] = {
						200, -- [1]
						14, -- [2]
					},
					["big_actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["level_text_font"] = "GennUI",
					["actorname_text_font"] = "GennUI",
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 11,
					["big_actortitle_text_font"] = "GennUI",
					["spellpercent_text_size"] = 10,
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["level_text_anchor"] = {
						["y"] = 0,
					},
					["cast_incombat"] = {
						200, -- [1]
					},
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellname_text_font"] = "GennUI",
					["spellname_text_anchor"] = {
						["side"] = 10,
					},
					["big_actortitle_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["actorname_text_size"] = 12,
					["percent_text_show_decimals"] = false,
					["big_actorname_text_font"] = "GennUI",
					["big_actorname_text_size"] = 12,
					["level_text_outline"] = "OUTLINE",
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["actorname_text_anchor"] = {
						["side"] = 1,
					},
					["percent_text_size"] = 12,
					["percent_text_font"] = "GennUI",
					["percent_show_percent"] = false,
					["quest_color_enabled"] = false,
					["spellname_text_size"] = 11,
					["health"] = {
						200, -- [1]
						14, -- [2]
					},
					["level_text_alpha"] = 1,
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["health_incombat"] = {
						200, -- [1]
						14, -- [2]
					},
				},
				["enemyplayer"] = {
					["big_actorname_text_size"] = 12,
					["spellpercent_text_font"] = "GennUI",
					["level_text_size"] = 11,
					["actorname_use_class_color"] = true,
					["cast"] = {
						200, -- [1]
						14, -- [2]
					},
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["percent_text_show_decimals"] = false,
					["spellname_text_outline"] = "OUTLINE",
					["level_text_font"] = "GennUI",
					["actorname_text_font"] = "GennUI",
					["all_names"] = true,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 9,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_font"] = "GennUI",
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["level_text_anchor"] = {
						["y"] = 0,
					},
					["cast_incombat"] = {
						200, -- [1]
						14, -- [2]
					},
					["health_incombat"] = {
						200, -- [1]
						14, -- [2]
					},
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellname_text_anchor"] = {
						["side"] = 10,
					},
					["spellname_text_font"] = "GennUI",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 10,
					["big_actorname_text_font"] = "GennUI",
					["big_actortitle_text_size"] = 10,
					["level_text_outline"] = "OUTLINE",
					["level_text_alpha"] = 1,
					["percent_text_size"] = 12,
					["percent_text_font"] = "GennUI",
					["quest_enabled"] = true,
					["actorname_text_anchor"] = {
						["side"] = 1,
					},
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellname_text_size"] = 11,
					["health"] = {
						200, -- [1]
						14, -- [2]
					},
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["percent_show_percent"] = false,
					["quest_color_enabled"] = true,
				},
				["friendlynpc"] = {
					["castbar_offset"] = -4,
					["spellpercent_text_font"] = "GennUI",
					["show_guild_name"] = false,
					["level_text_size"] = 11,
					["actorname_use_class_color"] = true,
					["cast"] = {
						200, -- [1]
						14, -- [2]
					},
					["percent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["fixed_class_color"] = {
						1, -- [1]
						0.4, -- [2]
						0.1, -- [3]
						1, -- [4]
					},
					["percent_text_show_decimals"] = false,
					["spellname_text_outline"] = "OUTLINE",
					["click_through"] = false,
					["level_text_font"] = "GennUI",
					["actorname_text_font"] = "GennUI",
					["actorname_use_guild_color"] = false,
					["actorname_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 9,
					["only_damaged"] = false,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["only_thename"] = false,
					["big_actortitle_text_font"] = "GennUI",
					["percent_text_ooc"] = true,
					["level_text_outline"] = "OUTLINE",
					["level_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["level_text_anchor"] = {
						["y"] = 0,
					},
					["cast_incombat"] = {
						200, -- [1]
						14, -- [2]
					},
					["big_actorname_text_font"] = "GennUI",
					["big_actortitle_text_size"] = 12,
					["actorname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["spellname_text_anchor"] = {
						["side"] = 10,
					},
					["spellpercent_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_text_enabled"] = true,
					["use_playerclass_color"] = true,
					["big_actorname_text_size"] = 12,
					["actorname_friend_color"] = {
						0.71, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["level_text_alpha"] = 1,
					["percent_text_size"] = 12,
					["percent_text_font"] = "GennUI",
					["actorname_guild_color"] = {
						0.498039, -- [1]
						1, -- [2]
						0.2, -- [3]
						1, -- [4]
					},
					["percent_show_percent"] = false,
					["actorname_use_friends_color"] = false,
					["spellpercent_text_enabled"] = true,
					["spellname_text_shadow_color"] = {
						nil, -- [1]
						nil, -- [2]
						nil, -- [3]
						0, -- [4]
					},
					["health_incombat"] = {
						200, -- [1]
						14, -- [2]
					},
					["health"] = {
						200, -- [1]
						14, -- [2]
					},
					["spellname_text_font"] = "GennUI",
					["spellname_text_size"] = 11,
					["percent_show_health"] = true,
					["actorname_text_anchor"] = {
						["side"] = 1,
					},
					["level_text_enabled"] = true,
				},
			},
			["aura_y_offset"] = 10,
			["use_ui_parent"] = true,
			["cast_statusbar_bgcolor"] = {
				0.1137254901960784, -- [1]
				0.1137254901960784, -- [2]
				0.1137254901960784, -- [3]
				0.8900000005960464, -- [4]
			},
			["bossmod_aura_width"] = 36,
			["resources_settings"] = {
				["chr"] = {
					["Player-2073-06F50D44"] = "Chi",
					["Player-2073-06A170FA"] = "ComboPoints",
					["Player-2073-0655867C"] = "Runes",
					["Player-2073-06EBF709"] = "HolyPower",
					["Player-2073-0701C3AE"] = "SoulShards",
					["Player-1329-09271213"] = "ComboPoints",
					["Player-2073-09E87897"] = "Essence",
				},
			},
			["spell_animation_list"] = {
				[49998] = {
					{
						["fade_out"] = 0.01999999955296516,
						["scaleX"] = 0.09999847412109375,
						["amplitude"] = 1.029999971389771,
						["fade_in"] = 0.009999999776482582,
					}, -- [1]
				},
			},
			["castbar_icon_size"] = "same as castbar plus healthbar",
			["npc_colors"] = {
				[40788] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[169421] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[188100] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[190403] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[168398] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[195265] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[183495] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[190404] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[190405] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[133345] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[164562] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[183497] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164563] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[169425] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[190407] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[168658] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[138465] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[169426] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[200387] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[180429] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[98691] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[169428] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[151773] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164567] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[169429] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[141283] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[180432] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[169430] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[136934] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[141284] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[180433] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[199368] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[102019] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189901] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[141285] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[98949] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[200137] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[168153] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[131819] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[196044] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[178133] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[100485] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[176598] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[102788] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[129527] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196045] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[184019] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[101637] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[131821] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[175576] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165597] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[39960] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[168156] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[44566] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178392] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[131823] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[184022] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[131824] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[129529] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[212681] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[101639] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[131825] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[178139] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[133361] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[164578] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[150250] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[178141] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[137713] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[150251] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[178142] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[137458] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[205265] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[126845] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168420] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[150253] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[168932] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[82579] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[129788] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[190426] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[150254] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[177889] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[168934] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[45912] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[177891] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[134137] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[190174] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168425] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168681] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[197595] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[126848] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[94224] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[76057] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[136186] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[172265] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[160495] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[192481] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[81432] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[196576] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[127106] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168942] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[165872] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[131585] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134144] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[197857] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[102287] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131586] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[205790] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[101008] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[135169] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[170480] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[191206] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[57109] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[40925] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[98706] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[86552] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162038] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[45915] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[81819] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[184300] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162039] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[170483] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[76446] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[86809] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[184301] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[162040] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[131847] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[134150] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[65362] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[81820] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[173044] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[184303] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[137478] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[156157] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131849] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[95766] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[114317] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[204262] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[127111] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131850] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[98965] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[175861] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[83613] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[178165] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[86684] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[170490] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[150276] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[164861] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[114319] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162047] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[96664] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[134157] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[56792] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[137484] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[95769] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[171772] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[155908] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[174843] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[205804] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[84767] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[137486] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[102295] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[178171] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[180474] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[183033] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[138255] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[134417] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[182778] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[95771] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[134418] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[59544] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[129547] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[206064] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[187897] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[95772] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[45919] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[186107] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129548] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[206066] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[127757] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131863] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[162057] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[59545] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[131864] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[136214] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[206068] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[107288] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[80805] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[184319] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[133912] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[164873] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[164362] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[82597] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[190206] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[191230] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[204536] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[59546] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[80935] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[192767] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[191232] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163086] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[184580] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[187139] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[129552] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[206074] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[80936] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[194816] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[168717] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134174] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[114584] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[176394] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[59547] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168718] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[129553] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[163089] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[80937] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[176395] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[204030] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[150297] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[84520] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165138] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[80938] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[95779] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[186122] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[184331] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[153882] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[193799] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[196102] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[167956] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[189706] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[186124] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[180495] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[186125] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[165911] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[201222] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[96677] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[184335] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[201223] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[193291] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[45924] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[194315] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[165913] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[137511] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[195851] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[194316] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[193293] = {
					true, -- [1]
					false, -- [2]
					"purple", -- [3]
				},
				[114334] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[194317] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[167962] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[172312] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[138281] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[45477] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[125977] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[187154] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[167964] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[187155] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[195855] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[134701] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[80816] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[167965] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[137516] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[40936] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165919] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[192786] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115488] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[171805] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[167967] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[192787] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197905] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[163618] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[192788] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[205326] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[213770] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168992] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[196115] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[192789] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[187160] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[114338] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[196116] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[204560] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[137521] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[59552] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[189464] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[196117] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[163621] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[182045] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198933] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[133685] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[189466] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[97068] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[133430] = {
					true, -- [1]
					false, -- [2]
					"cornflowerblue", -- [3]
				},
				[189467] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[83763] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[59553] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[59873] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[133432] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[45928] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[83892] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[163882] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[192796] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[203799] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[188703] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[189471] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[83893] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[189472] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[186658] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[205337] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[168747] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[83894] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[192800] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[197406] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[201756] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[107435] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[75451] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[100527] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[59555] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[163121] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[192803] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[45930] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162099] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[189478] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[97202] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[186664] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[195876] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[135234] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[195877] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[184107] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135235] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[195878] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[163894] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[75966] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199717] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165430] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[180015] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[81212] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[189227] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[197671] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163128] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[118698] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[100531] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[102962] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[135239] = {
					true, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[164921] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[45932] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[135240] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[100532] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[166969] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[177716] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135241] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[83389] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[166970] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[40943] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[166971] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[152898] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[83390] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[164414] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[189234] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[164926] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[212775] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[186420] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[189235] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[75459] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[134990] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[81984] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[97081] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[83392] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[164929] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[104246] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[212778] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[81985] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[131666] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[185656] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[131667] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187192] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[65317] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[152905] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[104247] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[97083] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[131669] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[176959] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[45935] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[131670] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[213806] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[97084] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[205363] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[100539] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171333] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[168007] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179010] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134232] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[96574] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[115765] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[104251] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[184130] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[179269] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[187969] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[184131] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[101437] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[131677] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[208440] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[184132] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[195135] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[92610] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[201788] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[101438] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170572] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[136541] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[81864] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[98368] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[75979] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[156244] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[201790] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[171341] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[155221] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135007] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[135263] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[156245] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[128434] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[197697] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[81737] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[199233] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[92612] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[201792] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[171343] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[186696] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[128435] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[98370] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[162133] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176974] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[115642] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131685] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[199748] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[157017] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[98243] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[184908] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[195399] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[173138] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[44404] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[136549] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[168022] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[184910] = {
					true, -- [1]
					true, -- [2]
					"yellow", -- [3]
				},
				[115388] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[137830] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[130485] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[136295] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[186191] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[107073] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[185680] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[127799] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[192333] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[133482] = {
					true, -- [1]
					false, -- [2]
					"maroon", -- [3]
				},
				[208198] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[173655] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[131436] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[205384] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[23682] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[134251] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[194894] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[189265] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[185683] = {
					true, -- [1]
					true, -- [2]
					"yellow", -- [3]
				},
				[207177] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164702] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[190034] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[178008] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[194896] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[130488] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[185685] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[165471] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114624] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[194897] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[194898] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[164705] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[52019] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[83025] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[40633] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[187224] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[134514] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[114626] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[174175] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[198995] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[96587] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[203857] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[83026] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[198996] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[170850] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[208208] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[114627] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196694] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[198997] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[115395] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[198998] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[81236] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[189531] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[195928] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[165479] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114628] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[198999] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[203861] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[195929] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[186206] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[199000] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[195930] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[114629] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[186208] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[180323] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[193373] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[116549] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[87252] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[164461] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134012] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[181861] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[180070] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129600] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[167533] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[101326] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[157810] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164463] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[102094] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167534] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[114632] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[99664] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[101839] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[197985] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[104270] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[114633] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[135552] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[129602] = {
					true, -- [1]
					false, -- [2]
					"purple", -- [3]
				},
				[115401] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[111563] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[205151] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[197219] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[187240] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[40765] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[171376] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[167538] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[114634] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[205152] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[205408] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[191847] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[179821] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[196198] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115019] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[207969] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[101074] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[186220] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[180335] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[150142] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[104273] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[126918] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[196712] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168310] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[115020] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[101075] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134024] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[104274] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[126919] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[174197] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[205158] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[196203] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135049] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[113998] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[128455] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[132491] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[104275] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[128967] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[168058] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[136330] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[115406] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[84957] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[157824] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[39616] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[134284] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[135052] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[168572] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[136076] = {
					true, -- [1]
					false, -- [2]
					"lightcoral", -- [3]
				},
				[115407] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[186740] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[213607] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[195696] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[104277] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[186229] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[186741] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[183671] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163457] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[157572] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164737] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[95834] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[104278] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[137103] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[98521] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163459] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[165762] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[40577] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[150154] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[187768] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[102232] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[165763] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[180348] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[166275] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[168578] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[189816] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[166276] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[170882] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[188026] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[76518] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[174210] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[168837] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[169861] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180864] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[183423] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[179841] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[150160] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[173189] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[179842] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[204918] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134041] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[183425] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[81638] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[165515] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[126928] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[88163] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[86372] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[186242] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179334] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[79720] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[122963] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[199037] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[96608] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[183173] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[179847] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[176521] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[205435] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[205691] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[167566] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[180104] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[190340] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[176523] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[150168] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[95842] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[139422] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[150169] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[189318] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[165010] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[115417] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[190342] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[135329] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[136353] = {
					true, -- [1]
					false, -- [2]
					"royalblue", -- [3]
				},
				[179852] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131492] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[168594] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[111068] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[118489] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[190345] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[122967] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[177808] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[122968] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[45572] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[154014] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[118491] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165529] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[188302] = {
					true, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[122969] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[164506] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[206214] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[101476] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[144293] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[114526] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[98406] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166299] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[129367] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[144294] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[173720] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[105699] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[75506] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[122971] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[166301] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[164510] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[144296] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[208521] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[166302] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[177817] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[98280] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[155812] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[41096] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[129369] = {
					true, -- [1]
					false, -- [2]
					"lightsalmon", -- [3]
				},
				[144298] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[166304] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[139949] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[101991] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[174071] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[122973] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[167536] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[129370] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[167532] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[171887] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[175517] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[184911] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[65310] = {
					true, -- [1]
					true, -- [2]
					"greenyellow", -- [3]
				},
				[170838] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[85232] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[156226] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[84028] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[81522] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[96640] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[96512] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[190359] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[109908] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[98538] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187033] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[196671] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[180431] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[183707] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[82590] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[130011] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[167116] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[163126] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[133852] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[115640] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[184582] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[184140] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[173729] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[99359] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[170147] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[102404] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163058] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[173016] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[120651] = {
					true, -- [1]
					true, -- [2]
					"white", -- [3]
				},
				[193944] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[45926] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[190362] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[131009] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[40586] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[99360] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[96611] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[197698] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[114636] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[97219] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[169893] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[164707] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[196548] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[84400] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[189340] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[131812] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[206140] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[200131] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[206070] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[183424] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[105705] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[165483] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[195119] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[99358] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[167998] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[130909] = {
					true, -- [1]
					false, -- [2]
					"purple", -- [3]
				},
				[165222] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[136249] = {
					true, -- [1]
					false, -- [2]
					"plum", -- [3]
				},
				[199749] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[189470] = {
					true, -- [1]
					false, -- [2]
					"aqua", -- [3]
				},
				[196043] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[192955] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[206230] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[189266] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[190366] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[128551] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[188244] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[165111] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[167111] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[194895] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[99366] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[154744] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[194745] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[155824] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[98542] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[164920] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[177816] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[134331] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[98792] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[163501] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[190368] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[134158] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[176551] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[185691] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[206065] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129758] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[151476] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[104300] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[165805] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[82039] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[184581] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[199325] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[131858] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[185508] = {
					true, -- [1]
					false, -- [2]
					"lime", -- [3]
				},
				[188067] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[163503] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[190370] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[168109] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162729] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[130400] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[197535] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[114266] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[198047] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[131587] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[190371] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[75899] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[205212] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[150146] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[168878] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[171181] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[185032] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[167876] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[122965] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[75713] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[194241] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[204337] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[203678] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[214117] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[77483] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[190373] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[194467] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[155830] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[167963] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[154758] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[170927] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[191739] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[136470] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[90997] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[193462] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[155831] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[132532] = {
					true, -- [1]
					false, -- [2]
					"palegreen", -- [3]
				},
				[134338] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[205727] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[171184] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[194469] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[79739] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[169905] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[114794] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[192934] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165556] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168882] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[77700] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[82682] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[198308] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[132126] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[185529] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[105704] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[168627] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[166396] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[83578] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[152009] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[127315] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[190377] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[192680] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[137517] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[168443] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[100526] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[187771] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[186226] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[196263] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[186284] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135365] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131527] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130404] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[172979] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[162744] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[151325] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[198311] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[122984] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[114796] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[114783] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[163458] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[168886] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[168318] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[134599] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[167607] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[95843] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[115402] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[173190] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[122970] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[172981] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[130661] = {
					true, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[134600] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[196200] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[190381] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[98677] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[167615] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[174773] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[40923] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[81603] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[212673] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[91001] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[95832] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[150292] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[176565] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[45917] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[203688] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[150165] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[114544] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[114542] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[135204] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[122972] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[190128] = {
					true, -- [1]
					true, -- [2]
					"white", -- [3]
				},
				[133835] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[199595] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[179893] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[136139] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[167611] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[84989] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[168891] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[105715] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[144071] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[81407] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[157634] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[129366] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[167612] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[99891] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[180473] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[187315] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[92538] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[138187] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[166589] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[196202] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[103344] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[84990] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[133836] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[91002] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[180091] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[208438] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[129559] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[91000] = {
					true, -- [1]
					false, -- [2]
					"indigo", -- [3]
				},
				[163520] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[192464] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[40634] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[208698] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[190207] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[86526] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[173714] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[97720] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[99192] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[165824] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[76104] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[199124] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[205366] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[127879] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[179386] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[204206] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[75652] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[175992] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[84550] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[168384] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[98681] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[180336] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[185528] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[189878] = {
					true, -- [1]
					true, -- [2]
					"white", -- [3]
				},
				[101549] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[165251] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[165137] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[176573] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[207438] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[171384] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[179388] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[175550] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163524] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[90998] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[114802] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[115486] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[98275] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[98810] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[130012] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[163862] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[91006] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[157571] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[23487] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[176575] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[170690] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[97197] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[184023] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135474] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[114316] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[194487] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[114803] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[200126] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[82594] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[84554] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[163620] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[195927] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[198326] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[169924] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[116410] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[154020] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[135048] = {
					true, -- [1]
					false, -- [2]
					"WARRIOR", -- [3]
				},
				[97788] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[45922] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[40935] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[165076] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[186246] = {
					true, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[114804] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[177892] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[150143] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[129517] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[185534] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[115757] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[91008] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[100991] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[115244] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[131545] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[191164] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[165414] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[169159] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[128969] = {
					true, -- [1]
					false, -- [2]
					"goldenrod", -- [3]
				},
				[133436] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[169927] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[139269] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[133593] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[171799] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[98813] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[167113] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[189886] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[195842] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[184020] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165410] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[173360] = {
					true, -- [1]
					true, -- [2]
					"indigo", -- [3]
				},
				[179733] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168418] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[185537] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[193352] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[83761] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[133870] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[189555] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168394] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[156212] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[40825] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[187159] = {
					true, -- [1]
					true, -- [2]
					"magenta", -- [3]
				},
				[86547] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[98696] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[206063] = {
					true, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[100486] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[178630] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[164557] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[168907] = {
					true, -- [1]
					true, -- [2]
					"blue", -- [3]
				},
				[134364] = {
					true, -- [1]
					false, -- [2]
					"honeydew", -- [3]
				},
				[155090] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[83846] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[190401] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[196798] = {
					true, -- [1]
					true, -- [2]
					"cyan", -- [3]
				},
				[168396] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[102781] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[213942] = {
					true, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134139] = {
					true, -- [1]
					false, -- [2]
					"gold", -- [3]
				},
				[150293] = {
					true, -- [1]
					true, -- [2]
					"darkorange", -- [3]
				},
				[135167] = {
					true, -- [1]
					false, -- [2]
					"peru", -- [3]
				},
				[102095] = {
					true, -- [1]
					false, -- [2]
					"darkorange", -- [3]
				},
				[113537] = {
					true, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134629] = {
					true, -- [1]
					false, -- [2]
					"navajowhite", -- [3]
				},
				[151127] = {
					true, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[98970] = {
					true, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
			},
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Time"] = 1547392935,
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Color Automation [Plater]",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["HooksTemp"] = {
					},
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Time"] = 1541606242,
					["Author"] = "Izimode-Azralon",
					["Name"] = "Hide Neutral Units [Plater]",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1990989,
					["HooksTemp"] = {
					},
				}, -- [2]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Name"] = "Reorder Nameplate [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Time"] = 1554138845,
					["Author"] = "Izimode-Azralon",
					["Name"] = "Don't Have Aura [Plater]",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 136207,
					["HooksTemp"] = {
					},
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Time"] = 1548278227,
					["Author"] = "Izimode-Azralon",
					["Name"] = "Players Targeting a Target [Plater]",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["HooksTemp"] = {
					},
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Time"] = 1547409079,
					["Author"] = "Tecno-Azralon",
					["Name"] = "Extra Border [Plater]",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["HooksTemp"] = {
					},
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Time"] = 1552354619,
					["Author"] = "Izimode-Azralon",
					["Name"] = "Current Target Color [Plater]",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 878211,
					["HooksTemp"] = {
					},
				}, -- [7]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 356,
					["Options"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Name"] = "Aura Reorder [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [8]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 348,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Name"] = "Icon Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Key"] = "iconPadding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Texture Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Key"] = "textureHeightMod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Texture Position",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Name"] = "Cast Bar Icon Settings [P]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Time"] = 1547406548,
					["Author"] = "Ahwa-Azralon",
					["Name"] = "Execute Range [Plater]",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135358,
					["HooksTemp"] = {
					},
				}, -- [10]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1675433748,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 364,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Name"] = "Attacking Specific Unit [Plater]",
				}, -- [11]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 284,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Name"] = "Combo Points [Plater]",
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["version"] = -1,
				}, -- [12]
				{
					["OptionsValues"] = {
						["test"] = false,
						["changecolor"] = true,
						["color"] = {
							0, -- [1]
							0.9411765336990356, -- [2]
							1, -- [3]
							1, -- [4]
						},
						["size"] = 32,
					},
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    unitFrame.TIF:Hide()\n    \n    local texture\n    \n    if modTable.config.test then\n        texture = modTable.RandomTexture()\n    else\n        texture = modTable.units[unitFrame.namePlateNpcId]\n    end\n    \n    if not texture then return end\n    \n    unitFrame.TIF.t:SetTexture(texture)\n    unitFrame.TIF:Show()\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.units[unitFrame.namePlateNpcId] or modTable.config.test then\n        if modTable.config.changecolor then\n            Plater.SetNameplateColor (unitFrame, modTable.config.color)\n        end\n        if modTable.config.hidename then\n            unitFrame.healthBar.unitName:Hide()\n        end\n        if modTable.config.hidehp then\n            unitFrame.healthBar.lifePercent:Hide()\n        end\n        if modTable.config.hideauras then\n            unitFrame.BuffFrame:Hide()\n            unitFrame.BuffFrame2:Hide()\n        end\n    end\n    \nend\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    modTable.units = {\n        -- war\n        [119052] = GetSpellTexture(236320), -- War Banner\n        -- sham\n        -- [3527] = GetSpellTexture(5394), -- Healing Stream Totem\n        -- [5913] = GetSpellTexture(8143), -- Tremor Totem\n        [61245] = GetSpellTexture(192058), -- Capacitor Totem\n        -- [2630] = GetSpellTexture(2484), -- Earthbind Totem\n        -- [53006] = GetSpellTexture(98008), -- Spirit Link Totem\n        [59764] = GetSpellTexture(108280), -- Healing Tide Totem\n        -- [10467] = GetSpellTexture(16191), -- Mana Tide Totem\n        -- [6112] = GetSpellTexture(8512), -- Windfury Totem\n        -- [97369] = GetSpellTexture(192222), -- Liquid Magma Totem\n        -- [100943] = GetSpellTexture(198838), -- Earthen Wall Totem\n        -- [78001] = GetSpellTexture(157153), -- Cloudburst Totem\n        -- [104818] = GetSpellTexture(207399), -- Ancestral Protection Totem\n        -- [60561] = GetSpellTexture(51485), -- Earthgrab Totem\n        [105427] = GetSpellTexture(204330), -- Skyfury Totem\n        [5925] = GetSpellTexture(204336), -- Grounding Totem\n        [105451] = GetSpellTexture(204331), -- Counterstrike Totem\n        -- [97285] = GetSpellTexture(192077), -- Wind Rush Totem\n        -- [166523] = GetSpellTexture(324386), -- Vesper Totem\n        -- tazavesh\n        [179733] = GetSpellTexture(355132),  -- Invigorating Fish Stick\n        -- lock\n        [135002] = GetSpellTexture(265187),  -- Demonic Tyrant\n    }\n    \n    modTable.RandomTexture = function()\n        local random = random(19)\n        local i = 0\n        for k, v in pairs(modTable.units) do\n            i = i+1\n            if i == random then\n                return v\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.TIF then\n        -- create frame\n        local f = CreateFrame(\"Frame\", nil, unitFrame.healthBar.FrameOverlay)\n        f:SetFrameStrata(\"BACKGROUND\")\n        f:SetWidth(modTable.config.size)\n        f:SetHeight(modTable.config.size)\n        local t = f:CreateTexture(nil, \"BACKGROUND\")\n        t:SetAllPoints(f)\n        f.t = t\n        t:SetTexCoord(.08, .92, .08, .92)\n        f:SetPoint(\"BOTTOM\", unitFrame.healthBar.FrameOverlay, \"TOP\", 0, modTable.config.y)\n        f:Show() \n        unitFrame.TIF = f\n        -- create border\n        unitFrame.TIF.Border = CreateFrame(\n            \"Frame\", \n            nil, \n            f, \n            \"NamePlateFullBorderTemplate\"\n        )\n        unitFrame.TIF.Border:SetVertexColor(0, 0, 0)\n        unitFrame.TIF.Border:SetBorderSizes (0.5, 0.5, 0.5, 0.5)\n        unitFrame.TIF.Border:UpdateSizes()\n    end\n    \nend\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if modTable.units[unitFrame.namePlateNpcId] or modTable.config.test then\n        if modTable.config.changecolor then\n            Plater.SetNameplateColor (unitFrame, modTable.config.color)\n        end\n        if modTable.config.hidename then\n            unitFrame.healthBar.unitName:Hide()\n        end\n        if modTable.config.hidehp then\n            unitFrame.healthBar.lifePercent:Hide()\n        end\n        if modTable.config.hideauras then\n            unitFrame.BuffFrame:Hide()\n            unitFrame.BuffFrame2:Hide()\n        end\n    end\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    unitFrame.TIF:Hide()\n    \n    local texture\n    \n    if modTable.config.test then\n        texture = modTable.RandomTexture()\n    else\n        texture = modTable.units[unitFrame.namePlateNpcId]\n    end\n    \n    if not texture then return end\n    \n    unitFrame.TIF.t:SetTexture(texture)\n    unitFrame.TIF:Show()\n    \nend\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    \n    modTable.units = {\n        -- war\n        [119052] = GetSpellTexture(236320), -- War Banner\n        -- sham\n        -- [3527] = GetSpellTexture(5394), -- Healing Stream Totem\n        -- [5913] = GetSpellTexture(8143), -- Tremor Totem\n        [61245] = GetSpellTexture(192058), -- Capacitor Totem\n        -- [2630] = GetSpellTexture(2484), -- Earthbind Totem\n        -- [53006] = GetSpellTexture(98008), -- Spirit Link Totem\n        [59764] = GetSpellTexture(108280), -- Healing Tide Totem\n        -- [10467] = GetSpellTexture(16191), -- Mana Tide Totem\n        -- [6112] = GetSpellTexture(8512), -- Windfury Totem\n        -- [97369] = GetSpellTexture(192222), -- Liquid Magma Totem\n        -- [100943] = GetSpellTexture(198838), -- Earthen Wall Totem\n        -- [78001] = GetSpellTexture(157153), -- Cloudburst Totem\n        -- [104818] = GetSpellTexture(207399), -- Ancestral Protection Totem\n        -- [60561] = GetSpellTexture(51485), -- Earthgrab Totem\n        [105427] = GetSpellTexture(204330), -- Skyfury Totem\n        [5925] = GetSpellTexture(204336), -- Grounding Totem\n        [105451] = GetSpellTexture(204331), -- Counterstrike Totem\n        -- [97285] = GetSpellTexture(192077), -- Wind Rush Totem\n        -- [166523] = GetSpellTexture(324386), -- Vesper Totem\n        -- tazavesh\n        [179733] = GetSpellTexture(355132),  -- Invigorating Fish Stick\n        -- lock\n        [135002] = GetSpellTexture(265187),  -- Demonic Tyrant\n    }\n    \n    modTable.RandomTexture = function()\n        local random = random(19)\n        local i = 0\n        for k, v in pairs(modTable.units) do\n            i = i+1\n            if i == random then\n                return v\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    if not unitFrame.TIF then\n        -- create frame\n        local f = CreateFrame(\"Frame\", nil, unitFrame.healthBar.FrameOverlay)\n        f:SetFrameStrata(\"BACKGROUND\")\n        f:SetWidth(modTable.config.size)\n        f:SetHeight(modTable.config.size)\n        local t = f:CreateTexture(nil, \"BACKGROUND\")\n        t:SetAllPoints(f)\n        f.t = t\n        t:SetTexCoord(.08, .92, .08, .92)\n        f:SetPoint(\"BOTTOM\", unitFrame.healthBar.FrameOverlay, \"TOP\", 0, modTable.config.y)\n        f:Show() \n        unitFrame.TIF = f\n        -- create border\n        unitFrame.TIF.Border = CreateFrame(\n            \"Frame\", \n            nil, \n            f, \n            \"NamePlateFullBorderTemplate\"\n        )\n        unitFrame.TIF.Border:SetVertexColor(0, 0, 0)\n        unitFrame.TIF.Border:SetBorderSizes (0.5, 0.5, 0.5, 0.5)\n        unitFrame.TIF.Border:UpdateSizes()\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1702034694,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/LBLLVTl9f/6",
					["Icon"] = 3615519,
					["Enabled"] = true,
					["Revision"] = 837,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "test mode",
							["Value"] = false,
							["Key"] = "test",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "delim",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "size and positioning",
							["Value"] = "size & positioning",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 256,
							["Desc"] = "",
							["Min"] = 32,
							["Fraction"] = false,
							["Value"] = 50,
							["Key"] = "size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "icon size",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "anchor = topcenter",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "y",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "y offset",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "delim",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "color options",
							["Value"] = "plate color",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "change color",
							["Value"] = true,
							["Key"] = "changecolor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "plate color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "delim",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Name"] = "other options",
							["Value"] = "other",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "hide name",
							["Value"] = true,
							["Key"] = "hidename",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Name"] = "hide health text",
							["Value"] = true,
							["Key"] = "hidehp",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 4,
							["Max"] = 256,
							["Desc"] = "",
							["Min"] = 32,
							["Fraction"] = false,
							["Value"] = 50,
							["Key"] = "hideauras",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Name"] = "hide auras",
						}, -- [14]
					},
					["Author"] = "Ретцер-Ревущий фьорд",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = 6,
					["PlaterCore"] = 1,
					["semver"] = "1.0.5",
					["LastHookEdited"] = "",
					["Name"] = "PVP Plate Icons",
				}, -- [13]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updatePosition(unitFrame)\nend\n\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.updatePosition = function(unitFrame)\n        if \n        unitFrame.PlaterRaidTargetFrame and \n        unitFrame.PlaterRaidTargetFrame.RaidTargetIcon and\n        unitFrame.PlaterRaidTargetFrame.RaidTargetIcon:IsShown()  then\n            --2 for enemy, 4 for neutral or 5 for friendly\n            if unitFrame.namePlateUnitReaction == 5 then\n                unitFrame.PlaterRaidTargetFrame:ClearAllPoints()\n                unitFrame.PlaterRaidTargetFrame:SetPoint(\"BOTTOM\", unitFrame.ActorNameSpecial, \"TOP\", 0, modTable.config.y)\n            end\n        end\n    end\n    \nend\n\n\n",
						["Raid Target"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updatePosition(unitFrame)\nend",
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updatePosition(unitFrame)\nend\n\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.updatePosition = function(unitFrame)\n        if \n        unitFrame.PlaterRaidTargetFrame and \n        unitFrame.PlaterRaidTargetFrame.RaidTargetIcon and\n        unitFrame.PlaterRaidTargetFrame.RaidTargetIcon:IsShown()  then\n            --2 for enemy, 4 for neutral or 5 for friendly\n            if unitFrame.namePlateUnitReaction == 5 then\n                unitFrame.PlaterRaidTargetFrame:ClearAllPoints()\n                unitFrame.PlaterRaidTargetFrame:SetPoint(\"BOTTOM\", unitFrame.ActorNameSpecial, \"TOP\", 0, modTable.config.y)\n            end\n        end\n    end\n    \nend\n\n\n",
						["Raid Target"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updatePosition(unitFrame)\nend",
					},
					["Time"] = 1675446349,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/g5ra-5gil/1",
					["Icon"] = 134331,
					["Enabled"] = true,
					["Revision"] = 139,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 30,
							["Desc"] = "",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "y",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "y offset from unit name",
						}, -- [1]
					},
					["Author"] = "Ретцер-Ревущий фьорд",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["semver"] = "1.0.0",
					["LastHookEdited"] = "",
					["Name"] = "Friendly Raid Mark",
				}, -- [14]
				{
					["OptionsValues"] = {
						["iconAnchorSide"] = 2,
						["iconAnchorX"] = 16,
						["iconAnchorY"] = 2,
						["iconSize"] = 14,
						["textFontFace"] = "GennUI",
						["textSize"] = 8,
						["textColor"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["LastHookEdited"] = "Constructor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local strText = \"\"\n    \n    if unitFrame and unitFrame.namePlateIsQuestObjective then\n        unitFrame.healthBar:Show()\n        \n        --check for only in combat\n        if (not modTable.config['ShowInCombat'] and InCombatLockdown()) then\n            unitFrame.questProgressIconFrame:Hide();\n            unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n            return \n        end\n        \n        for i, questInfo in ipairs(unitFrame.QuestInfo) do\n            if questInfo.yourQuest and not questInfo.finished then\n                local qtext = questInfo.questText:lower()\n                local name, realm = UnitName(unitId)\n                \n                local name_segments = {}\n                for w in string.gmatch (name, \"%w+\") do\n                    name_segments[#name_segments + 1] = w\n                end\n                name = string.lower(name_segments[1])\n                \n                -- Kill Quest\n                if questInfo.total\n                and (string.find(qtext, \"slain\") \n                    or string.find(qtext, \"killed\") \n                    or string.find(qtext, \"subdued\")\n                    or string.find(qtext, \"protect\")\n                    or string.find(qtext, name))\n                then\n                    strText = questInfo.total - questInfo.amount\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                    break\n                    \n                    -- Loot Quest\n                elseif questInfo.total then\n                    strText = questInfo.total - questInfo.amount\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconBag);\n                    break\n                    \n                    -- Percentage quest\n                elseif not questInfo.total then\n                    local curr = questInfo.amount or 0\n                    if modTable.config['percentRemaining'] then\n                        strText = math.floor(100 - curr) .. \"%\"\n                    else\n                        strText = math.floor(curr) .. \"%\"\n                    end\n                    if unitFrame.PlayerCannotAttack then\n                        unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuest);\n                        break\n                    else\n                        unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                        break\n                    end\n                    \n                    -- Use item quest\n                else\n                    strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuestParts);\n                    break                    \n                end\n            end \n        end\n        \n        unitFrame.questProgressIconFrame:Show();\n        unitFrame.healthBar.questProgressTextFrame:SetText(strText)\n    else\n        unitFrame.questProgressIconFrame:Hide();\n        unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    end\nend\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    --insert code here\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- positioning\n    local iconAnchor = {\n        side = modTable.config['iconAnchorSide'],\n        x = modTable.config['iconAnchorX'],\n        y = modTable.config['iconAnchorY'],\n    };\n    \n    -- icon options\n    envTable.iconSkull = [[Interface\\TargetingFrame\\UI-RaidTargetingIcon_8]];\n    envTable.iconBag = [[Interface\\GroupFrame\\UI-Group-MasterLooter]];\n    envTable.iconQuest = [[Interface\\GossipFrame\\AvailableQuestIcon]];\n    envTable.iconQuestParts = [[Interface\\QuestFrame\\AutoQuest-Parts]]\n    \n    ------------------------------------------------------------------------------------------------------------- \n    --frames:\n    \n    --create the icon frame that will show the quest need\n    envTable.questProgressIconFrame = unitFrame.questProgressIconFrame or unitFrame:CreateTexture (nil, \"overlay\")\n    envTable.questProgressIconFrame:SetTexture (modTable.config['iconQuest'])\n    envTable.questProgressIconFrame:SetSize (modTable.config['iconSize'], modTable.config['iconSize'])\n    Plater.SetAnchor (envTable.questProgressIconFrame, iconAnchor)\n    unitFrame.questProgressIconFrame = envTable.questProgressIconFrame\n    \n    \n    --create the text frame that will show the quest progress\n    envTable.questProgressTextFrame = unitFrame.healthBar.questProgressTextFrame or Plater:CreateLabel (unitFrame.healthBar);\n    Plater:SetFontFace (envTable.questProgressTextFrame, modTable.config['textFontFace']);\n    Plater:SetFontSize (envTable.questProgressTextFrame, modTable.config['textSize']);\n    Plater:SetFontColor (envTable.questProgressTextFrame, modTable.config['textColor']);\n    Plater:SetFontOutline (envTable.questProgressTextFrame, modTable.config['textOutline']);\n    DetailsFramework:SetFontShadow (envTable.questProgressTextFrame, 0, 0, 0, modTable.config['textShadowAlpha']);\n    envTable.questProgressTextFrame:SetPoint (modTable.config['textAnchor'], unitFrame.questProgressIconFrame, modTable.config['textIconAnchor'], modTable.config['textX'], modTable.config['textY']);\n    unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n    envTable.questProgressTextFrame:SetText(\"\")\n    \nend",
					},
					["Time"] = 1698927852,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/PMdq2Rg_N/22",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Hunter_SniperShot",
					["Enabled"] = true,
					["Revision"] = 4479,
					["semver"] = "1.0.21",
					["Author"] = "Evolutious",
					["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
					["Prio"] = 99,
					["Name"] = "QuestProgress",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Quest Percent Remaining",
							["Value"] = false,
							["Key"] = "percentRemaining",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set this if you want percent based quests to reflect the amount progressed or the amount remaining.",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show In Combat",
							["Value"] = true,
							["Key"] = "ShowInCombat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "This setting determins if quest NPC nameplates are always shown when in combat, even if not targeted or engaged",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 17",
							["Value"] = 0,
							["Key"] = "option17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Option 16",
							["Value"] = "Changing the below settings require a /reload to take effect",
							["Key"] = "option16",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								0.36862745098039, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Sets the text color",
						}, -- [5]
						{
							["Type"] = 3,
							["Name"] = "Text Font",
							["Value"] = "Friz Quadrata TT",
							["Key"] = "textFontFace",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Set this to the font you wish to use over the quest icon. You will need to set this manually. Default is: Friz Quadrata TT",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Sets the text size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "textSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [7]
						{
							["Type"] = 3,
							["Name"] = "Text Outline",
							["Value"] = "OUTLINE",
							["Key"] = "textOutline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Set the outline of the text. Options: NONE, OUTLINE, THICKOUTLINE. Default is: OUTLINE",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Sets the text shadow alpha. Options: 0 = Transparent, 1 = 100% Solid",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Key"] = "textShadowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Shadow Alpha",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Adjusts the text left and right",
							["Min"] = -64,
							["Fraction"] = false,
							["Value"] = 2,
							["Key"] = "textX",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text X Offset",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Adjusts the text up and down",
							["Min"] = -64,
							["Fraction"] = false,
							["Value"] = -4,
							["Key"] = "textY",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Y Offset",
						}, -- [11]
						{
							["Type"] = 3,
							["Name"] = "Text Anchor",
							["Value"] = "CENTER",
							["Key"] = "textAnchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Sets the anchor point for the text. Options: CENTER, TOP BOTTOM, TOPLEFT, LEFT, BOTTOMLEFT, TOPRIGHT, RIGHT, BOTTOMRIGHT",
						}, -- [12]
						{
							["Type"] = 3,
							["Name"] = "Text Anchor to Icon",
							["Value"] = "CENTER",
							["Key"] = "textIconAnchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Sets the anchor point for the text relative to the icon. Options: CENTER, TOP BOTTOM, TOPLEFT, LEFT, BOTTOMLEFT, TOPRIGHT, RIGHT, BOTTOMRIGHT",
						}, -- [13]
						{
							["Type"] = 6,
							["Name"] = "Option 22",
							["Value"] = 0,
							["Key"] = "option22",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Sets the icon size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 12,
							["Key"] = "iconSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Size",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 8,
							["Desc"] = "Sets the anchor point for the icon. Options: 1 = TOP LEFT, 2 = LEFT, 3 = BOTTOM LEFT, 4 = BOTTOM, 5 = BOTTOM RIGHT, 6 = RIGHT, 7 = TOP RIGHT, 8 = TOP",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 6,
							["Key"] = "iconAnchorSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Anchor Side",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Adjusts the icon left and right",
							["Min"] = -64,
							["Fraction"] = false,
							["Value"] = 4,
							["Key"] = "iconAnchorX",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Anchor X Offset",
						}, -- [17]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Adjusts the icon up and down",
							["Min"] = -64,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "iconAnchorY",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "icon Anchor Y Offset",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "Option 16",
							["Value"] = 0,
							["Key"] = "option16",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local strText = \"\"\n    \n    if unitFrame and unitFrame.namePlateIsQuestObjective then\n        unitFrame.healthBar:Show()\n        \n        --check for only in combat\n        if (not modTable.config['ShowInCombat'] and InCombatLockdown()) then\n            unitFrame.questProgressIconFrame:Hide();\n            unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n            return \n        end\n        \n        for i, questInfo in ipairs(unitFrame.QuestInfo) do\n            if questInfo.yourQuest and not questInfo.finished then\n                local qtext = questInfo.questText:lower()\n                local name, realm = UnitName(unitId)\n                \n                local name_segments = {}\n                for w in string.gmatch (name, \"%w+\") do\n                    name_segments[#name_segments + 1] = w\n                end\n                name = string.lower(name_segments[1])\n                \n                -- Kill Quest\n                if questInfo.total\n                and (string.find(qtext, \"slain\") \n                    or string.find(qtext, \"killed\") \n                    or string.find(qtext, \"subdued\")\n                    or string.find(qtext, \"protect\")\n                    or string.find(qtext, name))\n                then\n                    strText = questInfo.total - questInfo.amount\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                    break\n                    \n                    -- Loot Quest\n                elseif questInfo.total then\n                    strText = questInfo.total - questInfo.amount\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconBag);\n                    break\n                    \n                    -- Percentage quest\n                elseif not questInfo.total then\n                    local curr = questInfo.amount or 0\n                    if modTable.config['percentRemaining'] then\n                        strText = math.floor(100 - curr) .. \"%\"\n                    else\n                        strText = math.floor(curr) .. \"%\"\n                    end\n                    if unitFrame.PlayerCannotAttack then\n                        unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuest);\n                        break\n                    else\n                        unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                        break\n                    end\n                    \n                    -- Use item quest\n                else\n                    strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuestParts);\n                    break                    \n                end\n            end \n        end\n        \n        unitFrame.questProgressIconFrame:Show();\n        unitFrame.healthBar.questProgressTextFrame:SetText(strText)\n    else\n        unitFrame.questProgressIconFrame:Hide();\n        unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    end\nend\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    --insert code here\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- positioning\n    local iconAnchor = {\n        side = modTable.config['iconAnchorSide'],\n        x = modTable.config['iconAnchorX'],\n        y = modTable.config['iconAnchorY'],\n    };\n    \n    -- icon options\n    envTable.iconSkull = [[Interface\\TargetingFrame\\UI-RaidTargetingIcon_8]];\n    envTable.iconBag = [[Interface\\GroupFrame\\UI-Group-MasterLooter]];\n    envTable.iconQuest = [[Interface\\GossipFrame\\AvailableQuestIcon]];\n    envTable.iconQuestParts = [[Interface\\QuestFrame\\AutoQuest-Parts]]\n    \n    ------------------------------------------------------------------------------------------------------------- \n    --frames:\n    \n    --create the icon frame that will show the quest need\n    envTable.questProgressIconFrame = unitFrame.questProgressIconFrame or unitFrame:CreateTexture (nil, \"overlay\")\n    envTable.questProgressIconFrame:SetTexture (modTable.config['iconQuest'])\n    envTable.questProgressIconFrame:SetSize (modTable.config['iconSize'], modTable.config['iconSize'])\n    Plater.SetAnchor (envTable.questProgressIconFrame, iconAnchor)\n    unitFrame.questProgressIconFrame = envTable.questProgressIconFrame\n    \n    \n    --create the text frame that will show the quest progress\n    envTable.questProgressTextFrame = unitFrame.healthBar.questProgressTextFrame or Plater:CreateLabel (unitFrame.healthBar);\n    Plater:SetFontFace (envTable.questProgressTextFrame, modTable.config['textFontFace']);\n    Plater:SetFontSize (envTable.questProgressTextFrame, modTable.config['textSize']);\n    Plater:SetFontColor (envTable.questProgressTextFrame, modTable.config['textColor']);\n    Plater:SetFontOutline (envTable.questProgressTextFrame, modTable.config['textOutline']);\n    DetailsFramework:SetFontShadow (envTable.questProgressTextFrame, 0, 0, 0, modTable.config['textShadowAlpha']);\n    envTable.questProgressTextFrame:SetPoint (modTable.config['textAnchor'], unitFrame.questProgressIconFrame, modTable.config['textIconAnchor'], modTable.config['textX'], modTable.config['textY']);\n    unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n    envTable.questProgressTextFrame:SetText(\"\")\n    \nend",
					},
					["version"] = 22,
				}, -- [15]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
					},
					["Time"] = 1680360347,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/N9tiB9mO2/1",
					["Icon"] = 133006,
					["Enabled"] = true,
					["Revision"] = 118,
					["Options"] = {
					},
					["Author"] = "????????-Illidan",
					["Desc"] = "Config aura borders",
					["Prio"] = 99,
					["Name"] = "Advanced Debuff Border",
					["PlaterCore"] = 1,
					["semver"] = "1.0.0",
					["LastHookEdited"] = "",
					["version"] = 1,
				}, -- [16]
				{
					["OptionsValues"] = {
						["ignore_color_changes"] = true,
					},
					["LastHookEdited"] = "Constructor",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local unitFrameGUID = UnitGUID(self.unit)\n    \n    if modTable.shouldIgnoreNpcId(self) or\n    not Plater.IsInCombat() or \n    not self.InCombat or \n    UnitPlayerControlled(self.unit)\n    then\n        envTable.hideAggroOverlay(self);\n        return\n    end        \n    \n    local targetGUID = UnitGUID(self.targetUnitID or '')\n    \n    if (targetGUID and targetGUID ~= self._lastTargetUnitID) then\n        self._lastTargetUnitID = targetGUID\n        if (modTable.playerHasAggro(self)) then\n            envTable.showAggroOverlay(self);\n        else\n            envTable.hideAggroOverlay(self);\n        end\n    end\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local unitFrameGUID = UnitGUID(self.unit)\n    \n    if modTable.shouldIgnoreNpcId(self) or\n    not Plater.IsInCombat() or \n    not self.InCombat or \n    UnitPlayerControlled(self.unit)\n    then\n        envTable.hideAggroOverlay(self);\n        return\n    end        \n    \n    local targetGUID = UnitGUID(self.targetUnitID or '')\n    \n    if (targetGUID and targetGUID ~= self._lastTargetUnitID) then\n        self._lastTargetUnitID = targetGUID\n        if (modTable.playerHasAggro(self)) then\n            envTable.showAggroOverlay(self);\n        else\n            envTable.hideAggroOverlay(self);\n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    --[[\n        Checks if npcId should be ignored or not\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {bool}\n    --]]\n    function modTable.shouldIgnoreNpcId(unitFrame)\n        local unitId = unitFrame.unitId\n        \n        return unitFrame.isPerformanceUnit\n    end\n    \n    --[[\n        Checks if player has aggro\n\n        @return {Boolean}\n    --]]\n    function modTable.playerHasAggro(unitFrame)\n        if (modTable.config['testing'] == true) then\n            if (not modTable.config['ignore_color_changes']) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n            end\n            \n            return true;\n        end\n        \n        if (not Plater.IsInCombat()) then\n            return false;\n        end\n        \n        if (not unitFrame.InCombat) then\n            return false;\n        end\n        \n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return false;\n        end\n        \n        if (Plater.PlayerIsTank) then\n            if (not unitFrame.namePlateThreatIsTanking) then\n                if (not modTable.config['ignore_color_changes']) then\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        else\n            local tanks = Plater.GetTanks();\n            local targetOfTarget = UnitName(unitFrame.targetUnitID or '');\n            local targetOfTargetIsPlayer = targetOfTarget == UnitName('player');\n            local unitIsNotAttackingTank = false;\n            \n            if (Plater.db.profile.aggro_can_check_notank) then\n                unitIsNotAttackingTank = (\n                    targetOfTarget and \n                    not tanks[targetOfTarget]\n                );\n            end\n            \n            if (unitFrame.namePlateThreatIsTanking or unitIsNotAttackingTank) then\n                if (Plater.db.profile.aggro_can_check_notank and unitIsNotAttackingTank and not targetOfTargetIsPlayer) then\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.notontank);\n                    end\n                else\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro);\n                    end\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local textureHeight = self.healthBar:GetHeight() * 4;\n    local textureWidth = textureHeight * 2;\n    \n    unitFrame._currentColor = nil;\n    \n    --[[\n        @var {Table}\n    --]]\n    envTable.TEXTURE_CONFIG = {\n        ['height'] = textureHeight,\n        ['width'] = textureWidth\n    };\n    \n    --[[\n        @var {String}\n    --]]\n    envTable.TEXTURE_PATH = [[Interface\\Addons\\SharedMedia_MyMedia\\background\\Neon_AggroOverlayWhiteSingle.tga]];\n    \n    --[[ \n        Creates the overlay frame if it doesn't exist\n    \n        @param  {Plater.unitFrame}  unitFrame\n    \n        @return {void}\n    --]]\n    function envTable.createFrameIfNotExists(unitFrame)\n        local healthBar = unitFrame.healthBar;\n        \n        if (not healthBar.aggroOverlayLeft) then\n            healthBar.aggroOverlayLeft = envTable.createOverlayFrame(\n                healthBar, \n                'left', \n                -10 - math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayLeft.overlayTexture:SetTexCoord(0, 1, 1, 0);\n        end\n        \n        if (not healthBar.aggroOverlayRight) then\n            healthBar.aggroOverlayRight = envTable.createOverlayFrame(\n                healthBar, \n                'right', \n                10 + math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayRight.overlayTexture:SetTexCoord(1, 0, 0, 1);\n        end\n        \n        if (not healthBar.targetOfTargetText) then\n            unitFrame._currentTargetName = '';\n            healthBar.targetOfTargetText = envTable.createTargetOfTargetFrame(\n                healthBar\n            );\n        end\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame.healthBar}  healthBar\n\n        @return {Frame}\n    --]]\n    function envTable.createTargetOfTargetFrame(healthBar)\n        local textFrame = Plater:CreateLabel(healthBar);        \n        textFrame:SetPoint('topleft', healthBar, 'topleft', 0, 5);\n        textFrame.textcolor = 'white';\n        textFrame.textsize = 7;\n        textFrame.outline = 'OUTLINE';\n        textFrame:Show();\n        \n        return textFrame;\n    end\n    \n    --[[ \n        Creates the overlay frame\n    \n        @param  {Plater.unitFrame.healthbar}  healthBar\n        @param  {String}  originPoint\n        @param  {Number}  posX\n        @param  {Number}  posY\n    \n        @return {Frame}\n    --]]\n    function envTable.createOverlayFrame(healthBar, originPoint, posX, posY)\n        local overlayFrame = CreateFrame('frame', nil, healthBar);\n        overlayFrame:SetFrameLevel(healthBar:GetFrameLevel());\n        overlayFrame:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        \n        local overlayColorR, overlayColorG, overlayColorB = DetailsFramework:ParseColors (Plater.db.profile.tank.colors.noaggro);\n        local overlayTexture = Plater:CreateImage(overlayFrame, envTable.TEXTURE_PATH);\n        overlayTexture:SetVertexColor(overlayColorR, overlayColorG, overlayColorB);\n        overlayTexture:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        overlayTexture:SetSize(envTable.TEXTURE_CONFIG['width'], envTable.TEXTURE_CONFIG['height']);\n        \n        overlayFrame.overlayTexture = overlayTexture;\n        overlayFrame:Show();\n        \n        return overlayFrame;\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame}  unitFrame\n        @param  {String}  targetUnitID\n\n        @return {Frame}\n    --]]\n    function envTable.updateTargetOfTarget(unitFrame, targetUnitID)\n        local targetText = unitFrame.healthBar.targetOfTargetText;\n        local targetUnitName = UnitName(targetUnitID or '') or '';\n        \n        if modTable.config['disableTargetOfTarget'] then\n            targetUnitName = ' '\n        end\n        \n        if (targetUnitName == UnitName('player')) then\n            targetUnitName = '';\n        end\n        \n        if (unitFrame._currentTargetName == targetUnitName) then\n            return;\n        end\n        \n        unitFrame._currentTargetName = targetUnitName;\n        targetText.text = targetUnitName;\n        \n        local _, class = UnitClass(targetUnitID or '');\n        \n        if (class and UnitIsPlayer(targetUnitID or '')) then\n            targetText.textcolor = DetailsFramework:ParseColors(class);\n        else\n            targetText.textcolor = Plater.db.profile.castbar_target_color;\n        end\n    end\n    \n    --[[\n        Updates the aggro overlay texture color\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.updateAggroOverlayColor(unitFrame)\n        local colorR, colorG, colorB, colorA = DetailsFramework:ParseColors(unitFrame.healthBar:GetColor());\n        local qualifiedColor = envTable.qualifyColor(colorR, colorG, colorB, colorA);\n        \n        if (unitFrame._currentColor == qualifiedColor) then\n            return;\n        end\n        \n        unitFrame._currentColor = qualifiedColor;\n        \n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n    end\n    \n    --[[\n        Qualifies a color to a cacheable string\n\n        @param  {Number}  r\n        @param  {Number}  g\n        @param  {Number}  b\n        @param  {Number}  a\n\n        @return {String}\n    --]]\n    function envTable.qualifyColor(r, g, b, a)\n        return tostring(r) .. tostring(g) .. tostring(b) .. tostring(a);\n    end\n    \n    --[[ \n        Shows the overlay frames\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.showAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, unitFrame.targetUnitID);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Show();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Show();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\n    \n    --[[ \n        Hides the overlay frames\n\n        @return {void}\n    --]]\n    function envTable.hideAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, nil);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Hide();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Hide();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\nend",
					},
					["Time"] = 1705683379,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/AUO8fWcea/8",
					["Icon"] = 237529,
					["Enabled"] = true,
					["Revision"] = 453,
					["semver"] = "2.1.3",
					["Author"] = "Allessiel-Azralon",
					["Desc"] = "Smart aggro overlay to nameplates",
					["Prio"] = 99,
					["Name"] = "Allessiel Smart Aggro Overlay for Tanks",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Test Mode",
							["Value"] = false,
							["Key"] = "testing",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Don't override Nameplate color",
							["Value"] = false,
							["Key"] = "ignore_color_changes",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Check this to prevent this mod to forcefully change the nameplate color.",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Disable Target of Target",
							["Value"] = false,
							["Key"] = "disableTargetOfTarget",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
					},
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local unitFrameGUID = UnitGUID(self.unit)\n    \n    if modTable.shouldIgnoreNpcId(self) or\n    not Plater.IsInCombat() or \n    not self.InCombat or \n    UnitPlayerControlled(self.unit)\n    then\n        envTable.hideAggroOverlay(self);\n        return\n    end        \n    \n    local targetGUID = UnitGUID(self.targetUnitID or '')\n    \n    if (targetGUID and targetGUID ~= self._lastTargetUnitID) then\n        self._lastTargetUnitID = targetGUID\n        if (modTable.playerHasAggro(self)) then\n            envTable.showAggroOverlay(self);\n        else\n            envTable.hideAggroOverlay(self);\n        end\n    end\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local unitFrameGUID = UnitGUID(self.unit)\n    \n    if modTable.shouldIgnoreNpcId(self) or\n    not Plater.IsInCombat() or \n    not self.InCombat or \n    UnitPlayerControlled(self.unit)\n    then\n        envTable.hideAggroOverlay(self);\n        return\n    end        \n    \n    local targetGUID = UnitGUID(self.targetUnitID or '')\n    \n    if (targetGUID and targetGUID ~= self._lastTargetUnitID) then\n        self._lastTargetUnitID = targetGUID\n        if (modTable.playerHasAggro(self)) then\n            envTable.showAggroOverlay(self);\n        else\n            envTable.hideAggroOverlay(self);\n        end\n    end\nend",
						["Initialization"] = "function (modTable)\n    --[[\n        Checks if npcId should be ignored or not\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {bool}\n    --]]\n    function modTable.shouldIgnoreNpcId(unitFrame)\n        local unitId = unitFrame.unitId\n        \n        return unitFrame.isPerformanceUnit\n    end\n    \n    --[[\n        Checks if player has aggro\n\n        @return {Boolean}\n    --]]\n    function modTable.playerHasAggro(unitFrame)\n        if (modTable.config['testing'] == true) then\n            if (not modTable.config['ignore_color_changes']) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n            end\n            \n            return true;\n        end\n        \n        if (not Plater.IsInCombat()) then\n            return false;\n        end\n        \n        if (not unitFrame.InCombat) then\n            return false;\n        end\n        \n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return false;\n        end\n        \n        if (Plater.PlayerIsTank) then\n            if (not unitFrame.namePlateThreatIsTanking) then\n                if (not modTable.config['ignore_color_changes']) then\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        else\n            local tanks = Plater.GetTanks();\n            local targetOfTarget = UnitName(unitFrame.targetUnitID or '');\n            local targetOfTargetIsPlayer = targetOfTarget == UnitName('player');\n            local unitIsNotAttackingTank = false;\n            \n            if (Plater.db.profile.aggro_can_check_notank) then\n                unitIsNotAttackingTank = (\n                    targetOfTarget and \n                    not tanks[targetOfTarget]\n                );\n            end\n            \n            if (unitFrame.namePlateThreatIsTanking or unitIsNotAttackingTank) then\n                if (Plater.db.profile.aggro_can_check_notank and unitIsNotAttackingTank and not targetOfTargetIsPlayer) then\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.notontank);\n                    end\n                else\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro);\n                    end\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        end\n    end\nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local textureHeight = self.healthBar:GetHeight() * 4;\n    local textureWidth = textureHeight * 2;\n    \n    unitFrame._currentColor = nil;\n    \n    --[[\n        @var {Table}\n    --]]\n    envTable.TEXTURE_CONFIG = {\n        ['height'] = textureHeight,\n        ['width'] = textureWidth\n    };\n    \n    --[[\n        @var {String}\n    --]]\n    envTable.TEXTURE_PATH = [[Interface\\Addons\\SharedMedia_MyMedia\\background\\Neon_AggroOverlayWhiteSingle.tga]];\n    \n    --[[ \n        Creates the overlay frame if it doesn't exist\n    \n        @param  {Plater.unitFrame}  unitFrame\n    \n        @return {void}\n    --]]\n    function envTable.createFrameIfNotExists(unitFrame)\n        local healthBar = unitFrame.healthBar;\n        \n        if (not healthBar.aggroOverlayLeft) then\n            healthBar.aggroOverlayLeft = envTable.createOverlayFrame(\n                healthBar, \n                'left', \n                -10 - math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayLeft.overlayTexture:SetTexCoord(0, 1, 1, 0);\n        end\n        \n        if (not healthBar.aggroOverlayRight) then\n            healthBar.aggroOverlayRight = envTable.createOverlayFrame(\n                healthBar, \n                'right', \n                10 + math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayRight.overlayTexture:SetTexCoord(1, 0, 0, 1);\n        end\n        \n        if (not healthBar.targetOfTargetText) then\n            unitFrame._currentTargetName = '';\n            healthBar.targetOfTargetText = envTable.createTargetOfTargetFrame(\n                healthBar\n            );\n        end\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame.healthBar}  healthBar\n\n        @return {Frame}\n    --]]\n    function envTable.createTargetOfTargetFrame(healthBar)\n        local textFrame = Plater:CreateLabel(healthBar);        \n        textFrame:SetPoint('topleft', healthBar, 'topleft', 0, 5);\n        textFrame.textcolor = 'white';\n        textFrame.textsize = 7;\n        textFrame.outline = 'OUTLINE';\n        textFrame:Show();\n        \n        return textFrame;\n    end\n    \n    --[[ \n        Creates the overlay frame\n    \n        @param  {Plater.unitFrame.healthbar}  healthBar\n        @param  {String}  originPoint\n        @param  {Number}  posX\n        @param  {Number}  posY\n    \n        @return {Frame}\n    --]]\n    function envTable.createOverlayFrame(healthBar, originPoint, posX, posY)\n        local overlayFrame = CreateFrame('frame', nil, healthBar);\n        overlayFrame:SetFrameLevel(healthBar:GetFrameLevel());\n        overlayFrame:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        \n        local overlayColorR, overlayColorG, overlayColorB = DetailsFramework:ParseColors (Plater.db.profile.tank.colors.noaggro);\n        local overlayTexture = Plater:CreateImage(overlayFrame, envTable.TEXTURE_PATH);\n        overlayTexture:SetVertexColor(overlayColorR, overlayColorG, overlayColorB);\n        overlayTexture:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        overlayTexture:SetSize(envTable.TEXTURE_CONFIG['width'], envTable.TEXTURE_CONFIG['height']);\n        \n        overlayFrame.overlayTexture = overlayTexture;\n        overlayFrame:Show();\n        \n        return overlayFrame;\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame}  unitFrame\n        @param  {String}  targetUnitID\n\n        @return {Frame}\n    --]]\n    function envTable.updateTargetOfTarget(unitFrame, targetUnitID)\n        local targetText = unitFrame.healthBar.targetOfTargetText;\n        local targetUnitName = UnitName(targetUnitID or '') or '';\n        \n        if modTable.config['disableTargetOfTarget'] then\n            targetUnitName = ' '\n        end\n        \n        if (targetUnitName == UnitName('player')) then\n            targetUnitName = '';\n        end\n        \n        if (unitFrame._currentTargetName == targetUnitName) then\n            return;\n        end\n        \n        unitFrame._currentTargetName = targetUnitName;\n        targetText.text = targetUnitName;\n        \n        local _, class = UnitClass(targetUnitID or '');\n        \n        if (class and UnitIsPlayer(targetUnitID or '')) then\n            targetText.textcolor = DetailsFramework:ParseColors(class);\n        else\n            targetText.textcolor = Plater.db.profile.castbar_target_color;\n        end\n    end\n    \n    --[[\n        Updates the aggro overlay texture color\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.updateAggroOverlayColor(unitFrame)\n        local colorR, colorG, colorB, colorA = DetailsFramework:ParseColors(unitFrame.healthBar:GetColor());\n        local qualifiedColor = envTable.qualifyColor(colorR, colorG, colorB, colorA);\n        \n        if (unitFrame._currentColor == qualifiedColor) then\n            return;\n        end\n        \n        unitFrame._currentColor = qualifiedColor;\n        \n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n    end\n    \n    --[[\n        Qualifies a color to a cacheable string\n\n        @param  {Number}  r\n        @param  {Number}  g\n        @param  {Number}  b\n        @param  {Number}  a\n\n        @return {String}\n    --]]\n    function envTable.qualifyColor(r, g, b, a)\n        return tostring(r) .. tostring(g) .. tostring(b) .. tostring(a);\n    end\n    \n    --[[ \n        Shows the overlay frames\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.showAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, unitFrame.targetUnitID);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Show();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Show();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\n    \n    --[[ \n        Hides the overlay frames\n\n        @return {void}\n    --]]\n    function envTable.hideAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, nil);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Hide();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Hide();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\nend",
					},
					["version"] = 8,
				}, -- [17]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Cast Start",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1680361090,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/OgPOi4-vX/1",
					["Icon"] = 133004,
					["Enabled"] = true,
					["Revision"] = 67,
					["semver"] = "1.0.0",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar.",
					["Prio"] = 99,
					["Name"] = "Cast Bar Border",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
					},
					["version"] = 1,
				}, -- [18]
				{
					["LastHookEdited"] = "Nameplate Added",
					["UID"] = "0x64123ca337069ce",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local function OnCastStart(self, event, unit)\n        if unit ~= unitId then return end\n        if not unitFrame.originalLevel then\n            unitFrame.originalLevel = unitFrame:GetFrameLevel()\n            local timeBasedLevel = math.floor(GetTimePreciseSec() * 1000000) % 1000\n            local newFrameLevel = unitFrame.originalLevel + timeBasedLevel\n            unitFrame:SetFrameLevel(newFrameLevel)\n        end\n    end\n    \n    local function OnCastStop(self, event, unit)\n        if unit ~= unitId then return end\n        if unitFrame.originalLevel then\n            unitFrame:SetFrameLevel(unitFrame.originalLevel)\n            unitFrame.originalLevel = nil\n        end\n    end\n    \n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_START\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_STOP\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_CHANNEL_START\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_CHANNEL_STOP\", unitId)\n    \n    unitFrame:SetScript(\"OnEvent\", function(self, event, ...)\n            if event == \"UNIT_SPELLCAST_START\" or event == \"UNIT_SPELLCAST_CHANNEL_START\" then\n                OnCastStart(self, event, ...)\n            elseif event == \"UNIT_SPELLCAST_STOP\" or event == \"UNIT_SPELLCAST_CHANNEL_STOP\" then\n                OnCastStop(self, event, ...)\n            end\n    end)\nend\n\n\n",
					},
					["Time"] = 1680361106,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/L7KPSDPMK/4",
					["Icon"] = 4640492,
					["Enabled"] = true,
					["Revision"] = 218,
					["semver"] = "1.0.3",
					["Author"] = "Ryowarsu-Sanguino",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Casting on top",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local function OnCastStart(self, event, unit)\n        if unit ~= unitId then return end\n        if not unitFrame.originalLevel then\n            unitFrame.originalLevel = unitFrame:GetFrameLevel()\n            local timeBasedLevel = math.floor(GetTimePreciseSec() * 1000000) % 1000\n            local newFrameLevel = unitFrame.originalLevel + timeBasedLevel\n            unitFrame:SetFrameLevel(newFrameLevel)\n        end\n    end\n    \n    local function OnCastStop(self, event, unit)\n        if unit ~= unitId then return end\n        if unitFrame.originalLevel then\n            unitFrame:SetFrameLevel(unitFrame.originalLevel)\n            unitFrame.originalLevel = nil\n        end\n    end\n    \n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_START\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_STOP\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_CHANNEL_START\", unitId)\n    unitFrame:RegisterUnitEvent(\"UNIT_SPELLCAST_CHANNEL_STOP\", unitId)\n    \n    unitFrame:SetScript(\"OnEvent\", function(self, event, ...)\n            if event == \"UNIT_SPELLCAST_START\" or event == \"UNIT_SPELLCAST_CHANNEL_START\" then\n                OnCastStart(self, event, ...)\n            elseif event == \"UNIT_SPELLCAST_STOP\" or event == \"UNIT_SPELLCAST_CHANNEL_STOP\" then\n                OnCastStop(self, event, ...)\n            end\n    end)\nend\n\n\n",
					},
					["version"] = 4,
				}, -- [19]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --target name length limit\n    local targetNameMaxLength = 8\n    \n    --spell name length limit\n    local spellNameMaxLength = 16\n    \n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return table.concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            \n            --does the target name exists?\n            if (targetName) then\n                \n                if strlenutf8(targetName) > targetNameMaxLength then\n                    targetName = strtrim(utf8sub(targetName, 0, targetNameMaxLength))\n                end\n                \n                \n                --get the current spell name\n                local spellName = castBar.SpellName\n                \n                if spellName and strlenutf8(spellName) > spellNameMaxLength then\n                    spellName = strtrim(utf8sub(spellName, 0, spellNameMaxLength))\n                end\n                \n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText() or \"\"\n                castBar.Text:SetText(currentText .. \" [\" .. targetNameByColor .. \"]\")\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth)                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1680361126,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/jsGuJ8TUI/2",
					["Icon"] = 2126355,
					["Enabled"] = true,
					["Revision"] = 115,
					["semver"] = "1.0.1",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show the cast target name with the spell name",
					["Prio"] = 99,
					["Name"] = "Cast Target on Spell Name",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --target name length limit\n    local targetNameMaxLength = 8\n    \n    --spell name length limit\n    local spellNameMaxLength = 16\n    \n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return table.concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            \n            --does the target name exists?\n            if (targetName) then\n                \n                if strlenutf8(targetName) > targetNameMaxLength then\n                    targetName = strtrim(utf8sub(targetName, 0, targetNameMaxLength))\n                end\n                \n                \n                --get the current spell name\n                local spellName = castBar.SpellName\n                \n                if spellName and strlenutf8(spellName) > spellNameMaxLength then\n                    spellName = strtrim(utf8sub(spellName, 0, spellNameMaxLength))\n                end\n                \n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText() or \"\"\n                castBar.Text:SetText(currentText .. \" [\" .. targetNameByColor .. \"]\")\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth)                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["version"] = 2,
				}, -- [20]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["UID"] = "0x64392e34f6060a",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.checkToHide(unitFrame)\nend",
						["Initialization"] = "function (modTable)\n    \n    local badCasts = {\n        [123] = true,\n        [\"Uber Strike\"] = true,\n    }\n    \n    \n    local castingUnits = {}\n    \n    modTable.checkToHide = function(unitFrame)\n        -- maybe this: UnitTokenFromGUID\n        local needsHide = false\n        for t, i in pairs(castingUnits) do\n            if UnitExists(t) then\n                if unitFrame.namePlateUnitToken ~= t then\n                    if not modTable.updateCastState(unitFrame) then\n                        needsHide = true\n                        break\n                    end\n                end\n            else\n                castingUnits[t] = nil\n            end\n        end\n        \n        if needsHide then\n            unitFrame:Hide()\n        elseif not unitFrame:IsShown() then\n            unitFrame:Show()\n        end\n    end\n    \n    modTable.updateCastState = function(unitFrame)\n        if not unitFrame.namePlateUnitToken then return false end\n        local castBar = unitFrame.castBar\n        if castBar.casting or castBar.channeling then\n            local badCast = badCasts[castBar.spellName or \"N/A\"] or badCasts[castBar.spellID or -1] \n            if badCast then\n                castingUnits[unitFrame.namePlateUnitToken] = badCast\n                return true\n            end\n        end\n        castingUnits[unitFrame.namePlateUnitToken] = nil\n        return false\n    end\n    \nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
					},
					["Time"] = 1682204902,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/x2Gf7E4E2/2",
					["Icon"] = 1723989,
					["Enabled"] = true,
					["Revision"] = 20,
					["semver"] = "1.0.1",
					["Author"] = "Viashi-Argent Dawn",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Hide others units for Casts",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.checkToHide(unitFrame)\nend",
						["Initialization"] = "function (modTable)\n    \n    local badCasts = {\n        [123] = true,\n        [\"Uber Strike\"] = true,\n    }\n    \n    \n    local castingUnits = {}\n    \n    modTable.checkToHide = function(unitFrame)\n        -- maybe this: UnitTokenFromGUID\n        local needsHide = false\n        for t, i in pairs(castingUnits) do\n            if UnitExists(t) then\n                if unitFrame.namePlateUnitToken ~= t then\n                    if not modTable.updateCastState(unitFrame) then\n                        needsHide = true\n                        break\n                    end\n                end\n            else\n                castingUnits[t] = nil\n            end\n        end\n        \n        if needsHide then\n            unitFrame:Hide()\n        elseif not unitFrame:IsShown() then\n            unitFrame:Show()\n        end\n    end\n    \n    modTable.updateCastState = function(unitFrame)\n        if not unitFrame.namePlateUnitToken then return false end\n        local castBar = unitFrame.castBar\n        if castBar.casting or castBar.channeling then\n            local badCast = badCasts[castBar.spellName or \"N/A\"] or badCasts[castBar.spellID or -1] \n            if badCast then\n                castingUnits[unitFrame.namePlateUnitToken] = badCast\n                return true\n            end\n        end\n        castingUnits[unitFrame.namePlateUnitToken] = nil\n        return false\n    end\n    \nend",
						["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
					},
					["version"] = 2,
				}, -- [21]
				{
					["OptionsValues"] = {
						["manualNameOverwrites"] = {
							{
								"Mordretha, the Endless Empress", -- [1]
								"Mordretha", -- [2]
							}, -- [1]
						},
						["nameLength"] = 18,
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenNameplateName(unitId, unitFrame, modTable.config, envTable)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenNameplateName(unitId, unitFrame, modTable.config, envTable)\nend",
						["Initialization"] = "function (modTable)\n    local cache = {}\n    local concat = table.concat\n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    \n    local utf8len = function(str)\n        if utf8Enabled then\n            return str:utf8len()\n        end\n        \n        local count = 0\n        for _ in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n        end\n        \n        return count\n    end\n    \n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    -- Left to right works in the following steps for \"The Best Warrior Linaori\":\n    -- T. Best Warrior Linaori\n    -- T.B. Warrior Linaori\n    -- T.B.W. Linaori\n    local reduceLeftToRight\n    reduceLeftToRight = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not rightPart or utf8len(rightPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return leftPart .. \" \" .. rightPart, \"\"\n        end\n        \n        local firstWord, remainingRightPart = rightPart:match(\"^([^ ]*)[ ](.*)$\")\n        if not firstWord then\n            firstWord = rightPart\n            remainingRightPart = \"\"\n        end\n        leftPart = leftPart .. utf8sub(firstWord, 1, 1) .. \".\"\n        \n        return reduceLeftToRight(leftPart, remainingRightPart, lastPartLength, nameLength)\n    end\n    \n    -- Right to left works in the following steps for \"The Best Warrior Linaori\":\n    -- The Best W. Linaori\n    -- The B.W. Linaori\n    -- T.B.W. Linaori\n    local reduceRightToLeft\n    reduceRightToLeft = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not leftPart or utf8len(leftPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return \"\", leftPart .. \" \" .. rightPart\n        end\n        \n        local remainingLeftPart, lastWord = leftPart:match(\"^(.*)[ ]([^ ]*)$\")\n        \n        if not remainingLeftPart then\n            remainingLeftPart = \"\"\n            lastWord = leftPart\n        end\n        \n        rightPart = utf8sub(lastWord, 1, 1) .. \".\" .. rightPart\n        \n        return reduceRightToLeft(remainingLeftPart, rightPart, lastPartLength, nameLength)\n    end\n    \n    local cutOffName = function (wholeName, config)\n        if config.noSplitCutoff then\n            return utf8sub(wholeName, 1, config.nameLength)\n        end\n        \n        return wholeName\n    end\n    \n    local shorten = function (unitId, nameplateUnitName, config, nameLength)\n        -- let the player overwrite the name regardless of length based on the NPC name\n        local manualNameOverwrite = config.manualNameOverwrites[nameplateUnitName]\n        if manualNameOverwrite then\n            return manualNameOverwrite\n        end\n        \n        -- let the player overwrite the name regardless of length based on the NPC ID\n        local npcId = select(6, strsplit(\"-\", UnitGUID(unitId)))\n        local manualNpcIdOverwrite = config.manualNameOverwrites[npcId]\n        if manualNpcIdOverwrite then\n            return manualNpcIdOverwrite\n        end\n        \n        -- the original name is short enough already\n        if utf8len(nameplateUnitName) <= nameLength then\n            return nameplateUnitName\n        end\n        \n        -- Naming often implies \"<name>, <title>\" or \"<title> <name>\"\n        if nameplateUnitName:find(\",\") then\n            -- assumed that \",\" implies a title, and try to strip them of their title\n            local possibleName = nameplateUnitName:match(\"^(.*)[,][^,]*$\")\n            \n            if possibleName then\n                if utf8len(possibleName) <= nameLength then\n                    return possibleName\n                end\n                \n                -- in case of longer names: \"Linaori the best fury warrior ever, of the deeps\n                nameplateUnitName = possibleName\n            end\n        end\n        \n        -- Forsworn Squad-Leader -> Forsworn Squad Leader\n        -- Squad-Leader of the Forsworn -> Squad Leader of the Forsworn\n        if config.hyphenAsSpace then\n            local lastPart\n            \n            -- keep \"Forsworn Squad-Leader\" as is, while still replacing \"Squad-Leader of the Forsworn\"\n            if config.keepHyphenInLastName then\n                local _, spaces = nameplateUnitName:gsub(\" \", \"\")\n                if spaces > 0 then\n                    nameplateUnitName, lastPart = nameplateUnitName:match(\"^(.*)[ ]([^ ]*)$\")\n                end\n            end\n            \n            nameplateUnitName = nameplateUnitName:gsub(\"-\", \" \")\n            if lastPart then\n                nameplateUnitName = nameplateUnitName .. \" \" .. lastPart\n            end\n        end\n        \n        -- amount of times we can check if the name needs replacing\n        local _, occurrences = nameplateUnitName:gsub(\" \", \"\")\n        \n        -- no spaces left to split on, just return whatever can be made of it\n        if occurrences == 0 then\n            return cutOffName(nameplateUnitName, config)\n        end\n        \n        local nameToShorten, nameToKeep, nameToKeepLength\n        if config.keepRightSide then\n            -- we always want the last name if possible\n            -- example: Cleave Training Dummy -> Dummy\n            nameToShorten, nameToKeep = nameplateUnitName:match(\"^(.*)[ ]([^ ]*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        else\n            -- we always want the first name if possible\n            -- example: Cleave Training Dummy -> Cleave\n            nameToKeep, nameToShorten = nameplateUnitName:match(\"^([^ ]*)[ ](.*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        end\n        \n        -- in case the name to keep is too long, just use that\n        if nameToKeepLength > nameLength or not config.abbreviate then\n            return cutOffName(nameToKeep, config)\n        end\n        \n        local shortenedName\n        if config.abbreviateLeftToRight then\n            shortenedName, _ = reduceLeftToRight(\"\", nameToShorten, nameToKeepLength, nameLength)\n        else\n            _, shortenedName = reduceRightToLeft(nameToShorten, \"\", nameToKeepLength, nameLength)\n        end\n        \n        if config.keepRightSide then\n            return shortenedName .. \" \" .. nameToKeep\n        else\n            return nameToKeep .. \" \" .. shortenedName\n        end\n    end\n    \n    local tryCache = function (unitId, nameplateUnitName, config, nameLength)\n        if cache[nameLength] == nil then\n            cache[nameLength] = {}\n        end\n        \n        if cache[nameLength][nameplateUnitName] == nil then\n            cache[nameLength][nameplateUnitName] = shorten(unitId, nameplateUnitName, config, nameLength)\n        end\n        \n        return cache[nameLength][nameplateUnitName]\n    end\n    \n    modTable.shortenNameplateName = function (unitId, unitFrame, config)\n        if not unitId or not unitFrame.namePlateUnitName then return end\n        \n        if config.ignorePlayers and unitFrame.isPlayer then return end\n        if config.ignoreFriendlyNpcNameplate and unitFrame.actorType == \"friendlynpc\" then return end\n        if config.ignoreObjectNameplate and unitFrame.isObject then return end\n        \n        local name = tryCache(unitId, unitFrame.namePlateUnitName, config, config.nameLength)\n        \n        if name == unitFrame.namePlateUnitName then return end\n        \n        unitFrame.namePlateUnitName = name\n        unitFrame.PlateFrame.namePlateUnitName = name\n        unitFrame.healthBar.unitName:SetText(name)\n        unitFrame.ActorNameSpecial:SetText(name)\n    end\n    \n    modTable.shortenCastBarName = function (unitId, unitFrame, config)\n        if not unitId then return end\n        \n        local castBar = unitFrame.castBar\n        if not castBar.unit then return end\n        local targetUnitId = castBar.unit .. \"target\"\n        \n        if not UnitExists(targetUnitId) then return end\n        \n        local isPlayer = UnitIsPlayer(targetUnitId)\n        if config.ignorePlayers and isPlayer then return end\n        if config.ignoreFriendlyNpcCastBar and not isPlayer and UnitIsFriend(\"player\", targetUnitId) then return end\n        \n        local targetName = castBar.FrameOverlay.TargetName\n        local oldName = targetName:GetText()\n        if not oldName then return end\n        \n        local newName = tryCache(unitId, oldName, config, config.castBarNameLength)\n        if oldName == newName then return end\n        \n        targetName:SetText(newName)\n    end\nend",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenCastBarName(unitId, unitFrame, modTable.config, envTable)\nend\n\n\n",
					},
					["Time"] = 1702034695,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/name-shortener-for-plater/18",
					["Icon"] = 134331,
					["Enabled"] = true,
					["Revision"] = 990,
					["semver"] = "1.1.4",
					["Author"] = "Linalori-Ragnaros",
					["Desc"] = "Tries to make sense of long names",
					["Prio"] = 99,
					["Name"] = "Smart Name Shortener",
					["PlaterCore"] = 1,
					["version"] = 18,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenNameplateName(unitId, unitFrame, modTable.config, envTable)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenNameplateName(unitId, unitFrame, modTable.config, envTable)\nend",
						["Initialization"] = "function (modTable)\n    local cache = {}\n    local concat = table.concat\n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    \n    local utf8len = function(str)\n        if utf8Enabled then\n            return str:utf8len()\n        end\n        \n        local count = 0\n        for _ in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n        end\n        \n        return count\n    end\n    \n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    -- Left to right works in the following steps for \"The Best Warrior Linaori\":\n    -- T. Best Warrior Linaori\n    -- T.B. Warrior Linaori\n    -- T.B.W. Linaori\n    local reduceLeftToRight\n    reduceLeftToRight = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not rightPart or utf8len(rightPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return leftPart .. \" \" .. rightPart, \"\"\n        end\n        \n        local firstWord, remainingRightPart = rightPart:match(\"^([^ ]*)[ ](.*)$\")\n        if not firstWord then\n            firstWord = rightPart\n            remainingRightPart = \"\"\n        end\n        leftPart = leftPart .. utf8sub(firstWord, 1, 1) .. \".\"\n        \n        return reduceLeftToRight(leftPart, remainingRightPart, lastPartLength, nameLength)\n    end\n    \n    -- Right to left works in the following steps for \"The Best Warrior Linaori\":\n    -- The Best W. Linaori\n    -- The B.W. Linaori\n    -- T.B.W. Linaori\n    local reduceRightToLeft\n    reduceRightToLeft = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not leftPart or utf8len(leftPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return \"\", leftPart .. \" \" .. rightPart\n        end\n        \n        local remainingLeftPart, lastWord = leftPart:match(\"^(.*)[ ]([^ ]*)$\")\n        \n        if not remainingLeftPart then\n            remainingLeftPart = \"\"\n            lastWord = leftPart\n        end\n        \n        rightPart = utf8sub(lastWord, 1, 1) .. \".\" .. rightPart\n        \n        return reduceRightToLeft(remainingLeftPart, rightPart, lastPartLength, nameLength)\n    end\n    \n    local cutOffName = function (wholeName, config)\n        if config.noSplitCutoff then\n            return utf8sub(wholeName, 1, config.nameLength)\n        end\n        \n        return wholeName\n    end\n    \n    local shorten = function (unitId, nameplateUnitName, config, nameLength)\n        -- let the player overwrite the name regardless of length based on the NPC name\n        local manualNameOverwrite = config.manualNameOverwrites[nameplateUnitName]\n        if manualNameOverwrite then\n            return manualNameOverwrite\n        end\n        \n        -- let the player overwrite the name regardless of length based on the NPC ID\n        local npcId = select(6, strsplit(\"-\", UnitGUID(unitId)))\n        local manualNpcIdOverwrite = config.manualNameOverwrites[npcId]\n        if manualNpcIdOverwrite then\n            return manualNpcIdOverwrite\n        end\n        \n        -- the original name is short enough already\n        if utf8len(nameplateUnitName) <= nameLength then\n            return nameplateUnitName\n        end\n        \n        -- Naming often implies \"<name>, <title>\" or \"<title> <name>\"\n        if nameplateUnitName:find(\",\") then\n            -- assumed that \",\" implies a title, and try to strip them of their title\n            local possibleName = nameplateUnitName:match(\"^(.*)[,][^,]*$\")\n            \n            if possibleName then\n                if utf8len(possibleName) <= nameLength then\n                    return possibleName\n                end\n                \n                -- in case of longer names: \"Linaori the best fury warrior ever, of the deeps\n                nameplateUnitName = possibleName\n            end\n        end\n        \n        -- Forsworn Squad-Leader -> Forsworn Squad Leader\n        -- Squad-Leader of the Forsworn -> Squad Leader of the Forsworn\n        if config.hyphenAsSpace then\n            local lastPart\n            \n            -- keep \"Forsworn Squad-Leader\" as is, while still replacing \"Squad-Leader of the Forsworn\"\n            if config.keepHyphenInLastName then\n                local _, spaces = nameplateUnitName:gsub(\" \", \"\")\n                if spaces > 0 then\n                    nameplateUnitName, lastPart = nameplateUnitName:match(\"^(.*)[ ]([^ ]*)$\")\n                end\n            end\n            \n            nameplateUnitName = nameplateUnitName:gsub(\"-\", \" \")\n            if lastPart then\n                nameplateUnitName = nameplateUnitName .. \" \" .. lastPart\n            end\n        end\n        \n        -- amount of times we can check if the name needs replacing\n        local _, occurrences = nameplateUnitName:gsub(\" \", \"\")\n        \n        -- no spaces left to split on, just return whatever can be made of it\n        if occurrences == 0 then\n            return cutOffName(nameplateUnitName, config)\n        end\n        \n        local nameToShorten, nameToKeep, nameToKeepLength\n        if config.keepRightSide then\n            -- we always want the last name if possible\n            -- example: Cleave Training Dummy -> Dummy\n            nameToShorten, nameToKeep = nameplateUnitName:match(\"^(.*)[ ]([^ ]*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        else\n            -- we always want the first name if possible\n            -- example: Cleave Training Dummy -> Cleave\n            nameToKeep, nameToShorten = nameplateUnitName:match(\"^([^ ]*)[ ](.*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        end\n        \n        -- in case the name to keep is too long, just use that\n        if nameToKeepLength > nameLength or not config.abbreviate then\n            return cutOffName(nameToKeep, config)\n        end\n        \n        local shortenedName\n        if config.abbreviateLeftToRight then\n            shortenedName, _ = reduceLeftToRight(\"\", nameToShorten, nameToKeepLength, nameLength)\n        else\n            _, shortenedName = reduceRightToLeft(nameToShorten, \"\", nameToKeepLength, nameLength)\n        end\n        \n        if config.keepRightSide then\n            return shortenedName .. \" \" .. nameToKeep\n        else\n            return nameToKeep .. \" \" .. shortenedName\n        end\n    end\n    \n    local tryCache = function (unitId, nameplateUnitName, config, nameLength)\n        if cache[nameLength] == nil then\n            cache[nameLength] = {}\n        end\n        \n        if cache[nameLength][nameplateUnitName] == nil then\n            cache[nameLength][nameplateUnitName] = shorten(unitId, nameplateUnitName, config, nameLength)\n        end\n        \n        return cache[nameLength][nameplateUnitName]\n    end\n    \n    modTable.shortenNameplateName = function (unitId, unitFrame, config)\n        if not unitId or not unitFrame.namePlateUnitName then return end\n        \n        if config.ignorePlayers and unitFrame.isPlayer then return end\n        if config.ignoreFriendlyNpcNameplate and unitFrame.actorType == \"friendlynpc\" then return end\n        if config.ignoreObjectNameplate and unitFrame.isObject then return end\n        \n        local name = tryCache(unitId, unitFrame.namePlateUnitName, config, config.nameLength)\n        \n        if name == unitFrame.namePlateUnitName then return end\n        \n        unitFrame.namePlateUnitName = name\n        unitFrame.PlateFrame.namePlateUnitName = name\n        unitFrame.healthBar.unitName:SetText(name)\n        unitFrame.ActorNameSpecial:SetText(name)\n    end\n    \n    modTable.shortenCastBarName = function (unitId, unitFrame, config)\n        if not unitId then return end\n        \n        local castBar = unitFrame.castBar\n        if not castBar.unit then return end\n        local targetUnitId = castBar.unit .. \"target\"\n        \n        if not UnitExists(targetUnitId) then return end\n        \n        local isPlayer = UnitIsPlayer(targetUnitId)\n        if config.ignorePlayers and isPlayer then return end\n        if config.ignoreFriendlyNpcCastBar and not isPlayer and UnitIsFriend(\"player\", targetUnitId) then return end\n        \n        local targetName = castBar.FrameOverlay.TargetName\n        local oldName = targetName:GetText()\n        if not oldName then return end\n        \n        local newName = tryCache(unitId, oldName, config, config.castBarNameLength)\n        if oldName == newName then return end\n        \n        targetName:SetText(newName)\n    end\nend",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenCastBarName(unitId, unitFrame, modTable.config, envTable)\nend\n\n\n",
					},
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 99,
							["Desc"] = "The length of the name can be on nameplates before cutoff is applied",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 18,
							["Name"] = "Nameplate name length",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameLength",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 99,
							["Desc"] = "The length of the name can be on the cast bar before cutoff is applied",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 15,
							["Name"] = "Cast bar name length",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarNameLength",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Treat hyphens (-) as space",
							["Value"] = true,
							["Key"] = "hyphenAsSpace",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Also split names on hyphens instead of just the whole word",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Keep hyphen in the last name",
							["Value"] = true,
							["Key"] = "keepHyphenInLastName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When hyphens are treated as spaces, keep the last part of the name intact",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cutoff when no split can be done",
							["Value"] = true,
							["Key"] = "noSplitCutoff",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When the smallest word is still longer than \"Name length\", cut it off to the name length. If unchecked, will return the full name",
						}, -- [5]
						{
							["Type"] = 4,
							["Name"] = "Abbreviate names (W.O. Warcraft)",
							["Value"] = true,
							["Key"] = "abbreviate",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If unchecked, nothing is shown instead",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Abbreviate left to right",
							["Value"] = false,
							["Key"] = "abbreviateLeftToRight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Where to start abbreviation. (ltr) \"T. Best Linaori\" vs (rtl) \"The B. Linaori\"",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Keep right side",
							["Value"] = true,
							["Key"] = "keepRightSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Keep the right side instead of left side of the name. Right side: \"T.B. Warrior\". Left side: \"The B.L.\"",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Ignore Players",
							["Value"] = false,
							["Key"] = "ignorePlayers",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Ignore player characters",
						}, -- [9]
						{
							["Type"] = 4,
							["Name"] = "Ignore Friendly NPC nameplate",
							["Value"] = false,
							["Key"] = "ignoreFriendlyNpcNameplate",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Ignore friendly NPC on the nameplate",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Ignore Object Nameplate",
							["Value"] = true,
							["Key"] = "ignoreObjectNameplate",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Ignore nameplates from objects",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Ignore Friendly NPC cast bar",
							["Value"] = false,
							["Key"] = "ignoreFriendlyNpcCastBar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Ignore friendly NPC on the cast bar",
						}, -- [12]
						{
							["Type"] = 7,
							["Name"] = "Manual name overwrites",
							["Value"] = {
								{
									"Mordretha, the Endless Empress", -- [1]
									"Mordretha", -- [2]
								}, -- [1]
							},
							["Key"] = "manualNameOverwrites",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If a name matches the key, overwrite it with value and don't guess anything after",
						}, -- [13]
					},
				}, -- [22]
			},
			["auras_per_row_auto"] = false,
			["extra_icon_caster_outline"] = "OUTLINE",
			["auras_per_row_amount2"] = 2,
			["disable_omnicc_on_auras"] = true,
			["aura_width"] = 28,
			["ghost_auras"] = {
				["auras"] = {
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
				},
			},
			["castbar_target_shadow_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0, -- [4]
			},
			["blizzard_nameplate_large_font_size"] = 14,
			["pet_width_scale"] = 0.9999999403953552,
			["target_highlight_color"] = {
				0.9803922176361084, -- [1]
				1, -- [2]
				0.9529412388801575, -- [3]
			},
			["click_space_friendly"] = {
				150, -- [1]
			},
			["extra_icon_stack_outline"] = "OUTLINE",
			["click_space"] = {
				150, -- [1]
			},
			["castbar_target_font"] = "GennUI",
			["range_check_in_range_or_target_alpha_friendlies"] = 1,
			["cast_statusbar_texture"] = "GennUI",
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["indicator_spec"] = false,
			["pet_height_scale"] = 0.9999999403953552,
			["aura_x_offset"] = 0,
			["range_check_alpha_friendlies"] = 0.6499999761581421,
			["indicator_elite"] = false,
			["ui_parent_scale_tune"] = 1,
			["extra_icon_timer_outline"] = "OUTLINE",
			["health_statusbar_bgtexture"] = "GennUI",
			["extra_icon_use_blizzard_border_color"] = false,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[227931] = true,
					[233210] = true,
					[209859] = true,
					[163689] = true,
					[297133] = true,
				},
			},
			["extra_icon_caster_font"] = "GennUI",
			["cast_statusbar_color"] = {
				0.05098039656877518, -- [1]
				0.4627451300621033, -- [2]
				0.9333333969116211, -- [3]
				0.9600000008940697, -- [4]
			},
			["extra_icon_timer_font"] = "GennUI",
			["cast_statusbar_color_interrupted"] = {
				0.0196078431372549, -- [1]
				0.1843137254901961, -- [2]
				0.3176470588235294, -- [3]
			},
			["use_health_animation"] = true,
			["target_highlight_alpha"] = 1,
			["extra_icon_show_swipe"] = false,
			["aura_show_only_short_dispellable_on_players"] = true,
			["health_cutoff_upper"] = false,
			["blizzard_nameplate_font_size"] = 12,
			["health_selection_overlay"] = "GennUI",
			["hide_blizzard_castbar"] = true,
			["patch_version"] = 34,
			["range_check_in_range_or_target_alpha"] = 1,
			["aura_timer_text_size"] = 14,
			["bossmod_cooldown_text_size"] = 14,
			["number_region_first_run"] = true,
			["aura_width2"] = 28,
			["health_statusbar_bgcolor"] = {
				0.1137254901960784, -- [1]
				0.1137254901960784, -- [2]
				0.1137254901960784, -- [3]
				1, -- [4]
			},
			["aura2_grow_direction"] = 3,
			["castbar_target_anchor"] = {
				["y"] = -1,
				["side"] = 4,
			},
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
			},
			["script_auto_imported"] = {
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Effect After Cast [P]"] = 2,
				["Explosion Affix M+"] = 14,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 2,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Tank Interrupt"] = 12,
				["Cast - Important Target [P]"] = 2,
				["Cast - Very Important"] = 15,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Unit - Show Energy"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Cast - Glowing [P]"] = 10,
				["Aura - Buff Alert"] = 15,
				["Auto Set Skull"] = 11,
				["Fixate"] = 11,
				["Spiteful Affix"] = 3,
				["Unit - Important"] = 11,
				["Add - Non Elite Trash [P]"] = 4,
				["Countdown"] = 11,
				["Cast - On Going Cast [P]"] = 2,
				["Cast - Stop Casting"] = 4,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Add - Explode on Die [P]"] = 1,
				["Cast - Quick Flash"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Cast - Shield Interrupt"] = 2,
				["Fixate On You"] = 11,
			},
			["cast_statusbar_color_channeling"] = {
				0.05098039656877518, -- [1]
				0.4627451300621033, -- [2]
				0.9333333969116211, -- [3]
				0.9600000008940697, -- [4]
			},
			["indicator_faction"] = false,
			["extra_icon_height"] = 32,
			["first_run3"] = true,
			["aura_grow_direction"] = 1,
		},
	},
}
end