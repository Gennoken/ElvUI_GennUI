local E, L, V, P, G = unpack(ElvUI);
local GNUI = E:GetModule("GennUI");

function GNUI:LoadPlaterProfile()
PlaterDB = {
["captured_spells"] = {
[445281] = {
["encounterName"] = "Queen Ansurek",
["type"] = "BUFF",
["source"] = "Queen Ansurek",
["encounterID"] = 2922,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 218370,
},
},
["profileKeys"] = {
["Demïse - Stormscale"] = "Default",
["Dæthlørd - Stormscale"] = "Default",
["Mikhlabnamir - Ravencrest"] = "Default",
["Charchabiil - Stormscale"] = "Default",
["Trolløsaurus - Stormscale"] = "Default",
["Saahir - Stormscale"] = "Default",
},
["profiles"] = {
["Default"] = {
["target_shady_combat_only"] = false,
["aura_breakline_space"] = 2,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 632,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["Name"] = "Aura - Buff Alert [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Add the buff name in the trigger box.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 533,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["Name"] = "Explosion Affix M+ [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["semver"] = "",
["Icon"] = 2175503,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 368,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Name"] = "Aura - Debuff Alert [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Add the debuff name in the trigger box.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 1213,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 694,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 662,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 375,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Name"] = "Aura - Blink by Time Left [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 878,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Highlight the target name",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1680910379,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["NpcNames"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["Revision"] = 829,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["SpellIds"] = {
},
["Prio"] = 99,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Name"] = "Cast - Very Important [Plater]",
["PlaterCore"] = 1,
["Enabled"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["url"] = "",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 63,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Auto Set Skull",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Auto set skull marker",
["semver"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 206,
["Options"] = {
},
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Countdown",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animSpeed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 269,
["Options"] = {
},
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Show above the nameplate who is the player fixated",
["semver"] = "",
["Icon"] = 1029718,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 1194,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1728636533,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Icon"] = 136048,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 234,
["semver"] = "",
["Enabled"] = true,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 266,
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["semver"] = "",
["Icon"] = 841383,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 33,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Fixate by Unit Buff [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["semver"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 547,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Show a different animation for the cast bar.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 37,
["Options"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
191284,
},
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["semver"] = "",
["Icon"] = 134229,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"214840",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1680910341,
["semver"] = "",
["url"] = "",
["NpcNames"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["Enabled"] = true,
["Revision"] = 573,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["SpellIds"] = {
},
["Prio"] = 99,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Name"] = "Add - Important [P]",
["PlaterCore"] = 1,
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 161,
["Options"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["semver"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 887,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Play a very fast flash when the cast start",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 162,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Add - Warning [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Change the color of  add",
["semver"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 18,
["Options"] = {
},
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Aura While Casting [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["semver"] = "",
["Icon"] = 236209,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 111,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["Name"] = "Add - Non Elite Trash [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "",
["semver"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 101,
["Options"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["semver"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 162,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 506,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Just stop casting",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 106,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Name"] = "Add - Explode on Die [P]",
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "",
["semver"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    envTable.ShowTargeted = scriptTable.config.ShowTargeted\n    envTable.ShowRaidMarked = scriptTable.config.ShowRaidMarked\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["UID"] = "0x63dd148012eb3a2",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["Time"] = 1683674519,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    envTable.ShowTargeted = scriptTable.config.ShowTargeted\n    envTable.ShowRaidMarked = scriptTable.config.ShowRaidMarked\n    \nend",
["NpcNames"] = {
"5913",
"53006",
"10467",
"97369",
"100943",
"78001",
"104818",
"97285",
"166523",
"55659",
"143622",
"3527",
"2630",
"6112",
"60561",
"199916",
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend",
["Revision"] = 756,
["Options"] = {
{
["Type"] = 4,
["Key"] = "ShowTargeted",
["Value"] = true,
["Name"] = "Show if Targeted",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Determines if the nameplate should be shown if you have the unit targeted",
},
{
["Type"] = 4,
["Key"] = "ShowRaidMarked",
["Value"] = true,
["Name"] = "Show if Raid Marked",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Determines if the nameplate should be shown if it has a raid mark applied",
},
},
["Desc"] = "Hide's nameplates based on the unit's name or npcID. Add the Unit Name or npcID as a trigger.",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["Author"] = "Evolutious",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    self.ThrottleUpdate = 0.016\n    if (envTable.ShowTargeted) and (unitFrame.namePlateIsTarget) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    elseif (envTable.ShowRaidMarked) and (Plater.GetRaidMark (unitFrame)) then\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n    else\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        unitFrame.castBar:Hide ()\n    end\n    \nend",
["SpellIds"] = {
},
["Prio"] = 99,
["Name"] = "Hide Nameplate by UnitID",
["PlaterCore"] = 1,
["Enabled"] = true,
["Icon"] = 644389,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if not envTable.validUnit then return end\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    -- restore size/alpha\n    Plater.SetNameplateSize (unitFrame, envTable.defaultWidth, envTable.defaultHeight)\n    Plater.SetCastBarSize (unitFrame, envTable.defaultWidth, envTable.defaultHeight)\n    \n    --restore color\n    if scriptTable.config.changeNameplateColor then\n        Plater.DenyColorChange(unitFrame, false)\n    end\n    \n    envTable.validUnit = nil\n    \nend",
["OptionsValues"] = {
["widthTable"] = {
},
["ignoreFriendly"] = false,
["heightTable"] = {
},
["npcColor"] = {
},
["defaultHeight"] = 10,
["defaultWidth"] = 10,
["nameplateColor"] = {
1,
0,
0.9647059440612793,
1,
},
["creatureTypes"] = {
{
"Shadowfiend",
"Abberation",
},
{
"Psyfiend",
"Abberation",
},
{
"Ebon Gargoyle",
"Undead",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    -- avoid changing nameplates of units which don't exist, have the wrong creature type or whose name has been mimic'd by Hunter pets\n    if  not UnitExists(unitId) then\n        return\n    end\n    \n    if scriptTable.config.ignoreFriendly and UnitIsFriend(\"player\", unitId) then return end\n    \n    local t = scriptTable.config.creatureTypes[unitFrame.namePlateUnitName]\n    if  (t and t ~= UnitCreatureType(unitId)) then\n        return \n    end\n    \n    if IsActiveBattlefieldArena() then\n        for i=1,5 do \n            \n            if UnitExists(\"arenapet\"..i) and UnitIsUnit(\"arenapet\"..i, unitId) and select(2, UnitClass(\"arena\"..i)) == \"HUNTER\" then\n                return\n            end\n            \n            if scriptTable.config.ignoreFriendlyHunterPets then\n                if UnitExists(\"party\"..i) and UnitExists(\"partypet\"..i) and UnitIsUnit(\"partypet\"..i, unitId) and select(2, UnitClass(\"party\"..i)) == \"HUNTER\" then\n                    return\n                end\n            end\n        end\n    end\n    \n    envTable.validUnit = true\n    \n    -- get the width/height data\n    envTable.defaultWidth, envTable.defaultHeight =  scriptTable.GetDefaultSize(unitId)\n    \n    \n    local tag = scriptTable.config.widthTable[npcId] and npcId or npcName\n    local widthOffsetValue = scriptTable.config.widthTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.widthTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultWidth\n    local heightOffsetValue = scriptTable.config.heightTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.heightTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultHeight\n    \n    local width = envTable.defaultWidth + widthOffsetValue\n    local height = envTable.defaultHeight + heightOffsetValue\n    \n    -- set size\n    Plater.SetNameplateSize (unitFrame, width, height)\n    Plater.SetCastBarSize (unitFrame, width, height)\n    \n    local color = scriptTable.config.npcColor[unitFrame.namePlateUnitName]\n    \n    Plater.SetNameplateColor(unitFrame, Plater.GetColorByPriority(unitFrame, color,  scriptTable.config.changeNameplateColor and scriptTable.config.nameplateColor or nil))\n    Plater.DenyColorChange(unitFrame, true)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    scriptTable.GetDefaultSize = function(unitId)\n        local unitIsPlayer = UnitIsPlayer(unitId)\n        local unitIsFriendly = UnitIsFriend(\"player\", unitId)\n        if unitIsPlayer and unitIsFriendly then\n            return Plater.db.profile.plate_config.friendlyplayer.health_incombat [1], Plater.db.profile.plate_config.friendlyplayer.health_incombat [2]\n        elseif unitIsPlayer and not unitIsFriendly then\n            return Plater.db.profile.plate_config.enemyplayer.health_incombat [1], Plater.db.profile.plate_config.enemyplayer.health_incombat [2]\n        elseif not unitIsPlayer and unitIsFriendly then\n            return Plater.db.profile.plate_config.friendlynpc.health_incombat [1], Plater.db.profile.plate_config.friendlynpc.health_incombat [2]\n        else\n            return Plater.db.profile.plate_config.enemynpc.health_incombat [1], Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n    end\nend",
["Time"] = 1701955835,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if not envTable.validUnit then return end\n    \n    -- get the width/height data\n    envTable.defaultWidth, envTable.defaultHeight =  scriptTable.GetDefaultSize(unitId)\n    \n    \n    local tag = scriptTable.config.widthTable[npcId] and npcId or npcName\n    local widthOffsetValue = scriptTable.config.widthTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.widthTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultWidth\n    local heightOffsetValue = scriptTable.config.heightTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.heightTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultHeight\n    \n    local width = envTable.defaultWidth + widthOffsetValue\n    local height = envTable.defaultHeight + heightOffsetValue\n    \n    -- set size\n    Plater.SetNameplateSize (unitFrame, width, height)\n    Plater.SetCastBarSize (unitFrame, width, height)\n    \n    local color = scriptTable.config.npcColor[unitFrame.namePlateUnitName]\n    \n    Plater.SetNameplateColor(unitFrame, Plater.GetColorByPriority(unitFrame, color,  scriptTable.config.changeNameplateColor and scriptTable.config.nameplateColor or nil))\n    Plater.DenyColorChange(unitFrame, true)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["url"] = "https://wago.io/1d1rWcAmP/2",
["Icon"] = 135998,
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if not envTable.validUnit then return end\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    -- restore size/alpha\n    Plater.SetNameplateSize (unitFrame, envTable.defaultWidth, envTable.defaultHeight)\n    Plater.SetCastBarSize (unitFrame, envTable.defaultWidth, envTable.defaultHeight)\n    \n    --restore color\n    if scriptTable.config.changeNameplateColor then\n        Plater.DenyColorChange(unitFrame, false)\n    end\n    \n    envTable.validUnit = nil\n    \nend",
["Revision"] = 54,
["semver"] = "1.0.1",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if not envTable.validUnit then return end\n    \n    -- get the width/height data\n    envTable.defaultWidth, envTable.defaultHeight =  scriptTable.GetDefaultSize(unitId)\n    \n    \n    local tag = scriptTable.config.widthTable[npcId] and npcId or npcName\n    local widthOffsetValue = scriptTable.config.widthTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.widthTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultWidth\n    local heightOffsetValue = scriptTable.config.heightTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.heightTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultHeight\n    \n    local width = envTable.defaultWidth + widthOffsetValue\n    local height = envTable.defaultHeight + heightOffsetValue\n    \n    -- set size\n    Plater.SetNameplateSize (unitFrame, width, height)\n    Plater.SetCastBarSize (unitFrame, width, height)\n    \n    local color = scriptTable.config.npcColor[unitFrame.namePlateUnitName]\n    \n    Plater.SetNameplateColor(unitFrame, Plater.GetColorByPriority(unitFrame, color,  scriptTable.config.changeNameplateColor and scriptTable.config.nameplateColor or nil))\n    Plater.DenyColorChange(unitFrame, true)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Konjunktur-Firemaw",
["Initialization"] = "function (scriptTable)\n    scriptTable.GetDefaultSize = function(unitId)\n        local unitIsPlayer = UnitIsPlayer(unitId)\n        local unitIsFriendly = UnitIsFriend(\"player\", unitId)\n        if unitIsPlayer and unitIsFriendly then\n            return Plater.db.profile.plate_config.friendlyplayer.health_incombat [1], Plater.db.profile.plate_config.friendlyplayer.health_incombat [2]\n        elseif unitIsPlayer and not unitIsFriendly then\n            return Plater.db.profile.plate_config.enemyplayer.health_incombat [1], Plater.db.profile.plate_config.enemyplayer.health_incombat [2]\n        elseif not unitIsPlayer and unitIsFriendly then\n            return Plater.db.profile.plate_config.friendlynpc.health_incombat [1], Plater.db.profile.plate_config.friendlynpc.health_incombat [2]\n        else\n            return Plater.db.profile.plate_config.enemynpc.health_incombat [1], Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n    end\nend",
["Desc"] = "Change the color and size of a nameplate of an important unit. Add the unit name into the trigger box to add more.",
["SpellIds"] = {
},
["Prio"] = 99,
["version"] = 2,
["PlaterCore"] = 1,
["Name"] = "Nameplate Remodelling",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    -- avoid changing nameplates of units which don't exist, have the wrong creature type or whose name has been mimic'd by Hunter pets\n    if  not UnitExists(unitId) then\n        return\n    end\n    \n    if scriptTable.config.ignoreFriendly and UnitIsFriend(\"player\", unitId) then return end\n    \n    local t = scriptTable.config.creatureTypes[unitFrame.namePlateUnitName]\n    if  (t and t ~= UnitCreatureType(unitId)) then\n        return \n    end\n    \n    if IsActiveBattlefieldArena() then\n        for i=1,5 do \n            \n            if UnitExists(\"arenapet\"..i) and UnitIsUnit(\"arenapet\"..i, unitId) and select(2, UnitClass(\"arena\"..i)) == \"HUNTER\" then\n                return\n            end\n            \n            if scriptTable.config.ignoreFriendlyHunterPets then\n                if UnitExists(\"party\"..i) and UnitExists(\"partypet\"..i) and UnitIsUnit(\"partypet\"..i, unitId) and select(2, UnitClass(\"party\"..i)) == \"HUNTER\" then\n                    return\n                end\n            end\n        end\n    end\n    \n    envTable.validUnit = true\n    \n    -- get the width/height data\n    envTable.defaultWidth, envTable.defaultHeight =  scriptTable.GetDefaultSize(unitId)\n    \n    \n    local tag = scriptTable.config.widthTable[npcId] and npcId or npcName\n    local widthOffsetValue = scriptTable.config.widthTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.widthTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultWidth\n    local heightOffsetValue = scriptTable.config.heightTable[unitFrame.namePlateUnitName] and tonumber(scriptTable.config.heightTable[unitFrame.namePlateUnitName]) or scriptTable.config.defaultHeight\n    \n    local width = envTable.defaultWidth + widthOffsetValue\n    local height = envTable.defaultHeight + heightOffsetValue\n    \n    -- set size\n    Plater.SetNameplateSize (unitFrame, width, height)\n    Plater.SetCastBarSize (unitFrame, width, height)\n    \n    local color = scriptTable.config.npcColor[unitFrame.namePlateUnitName]\n    \n    Plater.SetNameplateColor(unitFrame, Plater.GetColorByPriority(unitFrame, color,  scriptTable.config.changeNameplateColor and scriptTable.config.nameplateColor or nil))\n    Plater.DenyColorChange(unitFrame, true)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the unit name in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set to true to change the default color of special units.",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Set the preferred default color for special units.",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Increase the nameplate height by this value (unless overriden by the specific table)",
["Min"] = -100,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "defaultHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Height Offset",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "Increase the nameplate width by this value (unless overriden by the specific table)",
["Min"] = -100,
["Fraction"] = false,
["Value"] = 31,
["Key"] = "defaultWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Width Offset",
},
{
["Type"] = 7,
["Name"] = "NPC Type by Name or ID (Optional, used to keep Hunter pets from screwing things up)",
["Value"] = {
{
"Shadowfiend",
"Abberation",
},
{
"Psyfiend",
"Abberation",
},
{
"Ebon Gargoyle",
"Undead",
},
},
["Key"] = "creatureTypes",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the unit name, value is the creature type",
},
{
["Type"] = 7,
["Name"] = "NPC Color by Name (Choose a special color for the unit)",
["Value"] = {
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID/name, value is the color",
},
{
["Type"] = 7,
["Name"] = "NPC Nameplate Width by Name (Choose a special width for the units nameplate)",
["Value"] = {
},
["Key"] = "widthTable",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID/name, value is the width",
},
{
["Type"] = 7,
["Name"] = "NPC Nameplate Height by Name (Choose a special height for the units nameplate)",
["Value"] = {
},
["Key"] = "heightTable",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the name, value is the height",
},
{
["Type"] = 4,
["Name"] = "Ignore Friendly Hunter Pets",
["Value"] = true,
["Key"] = "ignoreFriendlyHunterPets",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "This option prevents Hunters in your group from griefing with pet naming.",
},
{
["Type"] = 4,
["Name"] = "Ignore Friendly Units",
["Value"] = false,
["Key"] = "ignoreFriendly",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Ignores friendly units",
},
},
["NpcNames"] = {
"Shadowfiend",
"Psyfiend",
"Ebon Gargoyle",
"Cleansing Totem",
"Venomous Snake",
"Viper",
"Tremor Totem",
"Grounding Totem",
"Water Elemental",
"Incorporeal Being",
"Afflicted Soul",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important by Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shining Green [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["NpcNames"] = {
},
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Special Ability [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heroic Leap [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["NpcNames"] = {
},
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Spark Color [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "sparkWithScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Spark Width Scale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkHeightScale",
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["NpcNames"] = {
},
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Stun [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE Hit All [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Debuff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["NpcNames"] = {
},
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Simple Interrupt [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ongoing Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "maxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Heal Cut [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["NpcNames"] = {
},
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Voidzone [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Name"] = "Cast - AoE With Range [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Name"] = "Animation Start Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["NpcNames"] = {
},
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Is Cast Bar [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
},
},
["npcs_renamed"] = {
[167731] = "Separator",
[214350] = "Turned",
},
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:2204",
["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:14006: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:14004>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:775: in function <Interface/AddOns/Details/Libs/DF/slider.lua:726>\n",
["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:14104: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:14102>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:775: in function <Interface/AddOns/Details/Libs/DF/slider.lua:726>\n",
["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateMinAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4823: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4821: in function <Interface/AddOns/Plater/Plater.lua:4821>\n",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:2204",
["clampTargetNameplateToScreen"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:14088: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:14086>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:775: in function <Interface/AddOns/Details/Libs/DF/slider.lua:726>\n",
["nameplateTargetBehindMaxDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:100: in function `SetCVar'\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:129: in function `CVarReset'\n[string \"@Interface/AddOns/ElvUI/Core/General/Install.lua\"]:171: in function `SetupCVars'\n[string \"@Interface/AddOns/ElvUI_GennUI/core/chat.lua\"]:113: in function `SetupChat'\n[string \"@Interface/AddOns/ElvUI_GennUI/init.lua\"]:66: in function <Interface/AddOns/ElvUI_GennUI/init.lua:66>\n",
["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"ALLNAMEPLATES\"]:4: in function <[string \"ALLNAMEPLATES\"]:1>\n",
["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4825: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4821: in function <Interface/AddOns/Plater/Plater.lua:4821>\n",
["nameplateMotionSpeed"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:100: in function `SetCVar'\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:119: in function `CVarReset'\n[string \"@Interface/AddOns/ElvUI/Core/General/Install.lua\"]:171: in function `SetupCVars'\n[string \"@Interface/AddOns/ElvUI_GennUI/core/chat.lua\"]:113: in function `SetupChat'\n[string \"@Interface/AddOns/ElvUI_GennUI/init.lua\"]:66: in function <Interface/AddOns/ElvUI_GennUI/init.lua:66>\n",
["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13630",
["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:14056: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:14054>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:775: in function <Interface/AddOns/Details/Libs/DF/slider.lua:726>\n",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateShowFriends"] = "Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua:72",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6940",
["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateLargerScale"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:100: in function `SetCVar'\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:111: in function `CVarReset'\n[string \"@Interface/AddOns/ElvUI/Core/General/Install.lua\"]:171: in function `SetupCVars'\n[string \"@Interface/AddOns/ElvUI_GennUI/core/chat.lua\"]:113: in function `SetupChat'\n[string \"@Interface/AddOns/ElvUI_GennUI/init.lua\"]:66: in function <Interface/AddOns/ElvUI_GennUI/init.lua:66>\n",
["nameplateShowEnemyGuardians"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13582",
["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:14072: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:14070>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:775: in function <Interface/AddOns/Details/Libs/DF/slider.lua:726>\n",
["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:2204",
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5362",
["nameplateLargeTopInset"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:100: in function `SetCVar'\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:112: in function `CVarReset'\n[string \"@Interface/AddOns/ElvUI/Core/General/Install.lua\"]:171: in function `SetupCVars'\n[string \"@Interface/AddOns/ElvUI_GennUI/core/chat.lua\"]:113: in function `SetupChat'\n[string \"@Interface/AddOns/ElvUI_GennUI/init.lua\"]:66: in function <Interface/AddOns/ElvUI_GennUI/init.lua:66>\n",
["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:13: in function <Interface/SharedXML/CvarUtil.lua:9>\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:100: in function `SetCVar'\n[string \"@Interface/AddOns/ElvUI/Core/Modules/Nameplates/Nameplates.lua\"]:120: in function `CVarReset'\n[string \"@Interface/AddOns/ElvUI/Core/General/Install.lua\"]:171: in function `SetupCVars'\n[string \"@Interface/AddOns/ElvUI_GennUI/core/chat.lua\"]:113: in function `SetupChat'\n[string \"@Interface/AddOns/ElvUI_GennUI/init.lua\"]:66: in function <Interface/AddOns/ElvUI_GennUI/init.lua:66>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4824: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4821: in function <Interface/AddOns/Plater/Plater.lua:4821>\n",
},
["blizzard_nameplate_font_override_enabled"] = true,
["target_shady_enabled"] = false,
["aura2_y_offset"] = 10,
["extra_icon_caster_size"] = 8,
["buffs_on_aura2"] = true,
["health_selection_overlay"] = "GennUI B",
["expansion_triggerwipe"] = {
[9] = true,
[10] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.8392156862745098,
0.08627450980392157,
0.08627450980392157,
1,
},
["hide_blizzard_castbar"] = true,
["extra_icon_cooldown_reverse"] = false,
["npc_cache"] = {
[204262] = {
"Necrofrost",
"Dawn of the Infinite",
"enUS",
},
[16523] = {
"Shattered Hand Savage",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[24777] = {
"Sunblade Sentinel",
"Magisters' Terrace",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
"enUS",
},
[29064] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[184300] = {
"Gólem de rocaébano",
"Uldaman: Legado de Tyr",
},
[221667] = {
"Lost Watcher",
"Nerub-ar Palace",
"enUS",
},
[58632] = {
"Armsmaster Harlan",
"Scarlet Halls",
"enUS",
},
[170480] = {
"Caminamuerte Atal'ai",
"El Otro Lado",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
},
[184301] = {
"Buscador de caverna",
"Uldaman: Legado de Tyr",
},
[29768] = {
"Unyielding Constrictor",
"Gundrak",
"enUS",
},
[29832] = {
"Drakkari Golem",
"Gundrak",
"enUS",
},
[214502] = {
"The Bloodbound Horror",
"Nerub-ar Palace",
"enUS",
},
[223204] = {
"Chamber Guardian",
"Nerub-ar Palace",
"enUS",
},
[60040] = {
"Commander Durand",
"Scarlet Monastery",
"enUS",
},
[221669] = {
"Blight Swarmer",
"Nerub-ar Palace",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
},
[214503] = {
"Sikran",
"Nerub-ar Palace",
"enUS",
},
[101637] = {
"Aspirante Valarjar",
"Salones del Valor",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
},
[184303] = {
"Reptador sigiloso",
"Uldaman: Legado de Tyr",
"enUS",
},
[214504] = {
"Rasha'nan",
"Nerub-ar Palace",
"enUS",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[223207] = {
"Black Blood",
"Nerub-ar Palace",
"enUS",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205804] = {
"Dragón resucitado",
"El Alba del Infinito",
"enUS",
},
[214506] = {
"Broodtwister Ovi'nax",
"Nerub-ar Palace",
"enUS",
},
[216554] = {
"Sureki String Conductor",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[220138] = {
"Regurgitating Monstrosity",
"Nerub-ar Palace",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[178165] = {
"Goliat caminacosta",
"Tazavesh, el Mercado Velado",
},
[134144] = {
"Living Current",
"Shrine of the Storm",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
"enUS",
},
[174071] = {
"Gargon sañoso",
"Castillo Nathria",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[135169] = {
"Entidad desconocida",
"Bardoma",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[222700] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[43662] = {
"Unbound Earth Rager",
"The Stonecore",
"enUS",
},
[220141] = {
"Royal Jelly Purveyor",
"Cinderbrew Meadery",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[170490] = {
"Sumo sacerdote Atal'ai",
"El Otro Lado",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[166396] = {
"Hostigador noble",
"Profundidades Sanguíneas",
},
[203763] = {
"Alliance Footman",
"Dawn of the Infinite",
"enUS",
},
[216560] = {
"Al'haggro",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[164861] = {
"Zurcecorteza spriggan",
"El Otro Lado",
},
[118022] = {
"Infernal Chaosbringer",
"Tomb of Sargeras",
"enUS",
},
[216561] = {
"Gahn'dante",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[59915] = {
"Jasper Guardian",
"Mogu'shan Vaults",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
},
[187897] = {
"Retador Draghar",
"Estanques de Vida Rubí",
},
[139269] = {
"Entidad desconocida",
"Mansión Tarjasenda",
"enUS",
},
[222193] = {
"Hollow Frostweaver",
"Nerub-ar Palace",
"enUS",
},
[36497] = {
"Bronjahm",
"The Forge of Souls",
"enUS",
},
[138247] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[212981] = {
"Hapless Assistant",
"The Everbloom",
"enUS",
},
[17357] = {
"Creeping Oozeling",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[29834] = {
"Drakkari Frenzy",
"Gundrak",
"enUS",
},
[210423] = {
"Keeper of the Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
},
[168962] = {
"Reborn Phoenix",
"Castle Nathria",
},
[56717] = {
"Hoptallus",
"Stormstout Brewery",
"enUS",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[53134] = {
"Ancient Core Hound",
"Firelands",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[26763] = {
"Anomalus",
"The Nexus",
"enUS",
},
[96015] = {
"Inquisitor Tormentorum",
"Vault of the Wardens",
"enUS",
},
[134157] = {
"Shadow-Borne Warrior",
"Kings' Rest",
},
[94224] = {
"Entidad desconocida",
"Guarida de Neltharion",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59789] = {
"Thalnos the Soulrender",
"Scarlet Monastery",
"enUS",
},
[43537] = {
"Stonecore Earthshaper",
"The Stonecore",
"enUS",
},
[39698] = {
"Karsh Steelbender",
"Blackrock Caverns",
"enUS",
},
[185346] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
},
[56718] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[36499] = {
"Soulguard Reaper",
"The Forge of Souls",
"enUS",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
"enUS",
},
[86547] = {
"Venom Sprayer",
"The Everbloom",
},
[230904] = {
"Shadeguard Speaker",
"Nightfall Sanctum",
"enUS",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[164873] = {
"Vetecuerno venado rúnico",
"El Otro Lado",
},
[59150] = {
"Flameweaver Koegler",
"Scarlet Halls",
"enUS",
},
[164362] = {
"Bocado limoso",
"Plaga Abrumadora",
},
[220158] = {
"Under-Lord Vik'tis",
"The Dread Pit",
"enUS",
},
[215040] = {
"Kobyss Bonechewer",
"Tak-Rethan Abyss",
"enUS",
},
[18894] = {
"Felguard Brute",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[129547] = {
"Manopla dientenegro",
"Puerto Libre",
},
[97043] = {
"Seacursed Slaver",
"Maw of Souls",
},
[77080] = {
"Sargerei Arbiter",
"Auchindoun",
},
[196102] = {
"Azotador conjurado",
"La Bóveda Azur",
},
[192519] = {
"Monstrous Mud",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[185353] = {
"Huntmaster",
"10.0 Dragon Isles",
},
[60047] = {
"Amethyst Guardian",
"Mogu'shan Vaults",
"enUS",
},
[39700] = {
"Beauty",
"Blackrock Caverns",
"enUS",
},
[212483] = {
"Gnarled Roots",
"The Everbloom",
"enUS",
},
[201222] = {
"Valow, Vigilante vetusto",
"El Alba del Infinito",
"enUS",
},
[193544] = {
"Nokhudon Houndsman",
"The Nokhud Offensive",
},
[210436] = {
"Flowering Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[81432] = {
"Técnico Grom'kar",
"Muelles de hierro",
},
[216579] = {
"Swarmspike",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[184331] = {
"Atracadora del Tiempo Infinito",
"Uldaman: Legado de Tyr",
},
[201223] = {
"Magus Crepuscular infinito",
"El Alba del Infinito",
"enUS",
},
[210437] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[220164] = {
"Darkened Husk",
"The Dread Pit",
"enUS",
},
[185357] = {
"Sentry",
"10.0 Dragon Isles",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[216582] = {
"Kx",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[129550] = {
"Bilge Rat Padfoot",
"Freehold",
"enUS",
},
[36502] = {
"Devourer of Souls",
"The Forge of Souls",
"enUS",
},
[118289] = {
"Maiden of Vigilance",
"Tomb of Sargeras",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"Earthcrawl Mines",
"enUS",
},
[184335] = {
"Agente infinito",
"Uldaman: Legado de Tyr",
"enUS",
},
[222214] = {
"Frenzied Leaper",
"Nerub-ar Palace",
"enUS",
},
[86809] = {
"Incineradora Grom'kar",
"Muelles de hierro",
},
[211977] = {
"Pack Mole",
"Darkflame Cleft",
"enUS",
},
[216584] = {
"Nerubian Captain",
"Earthcrawl Mines",
"enUS",
},
[167956] = {
"Acólita oscura",
"Profundidades Sanguíneas",
},
[59153] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[163862] = {
"Defensora de muchos ojos",
"Plaga Abrumadora",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[19919] = {
"Thorn Lasher",
"Tempest Keep: The Botanica",
"enUS",
},
[24078] = {
"Dragonflayer Metalworker",
"Utgarde Keep",
"enUS",
},
[217610] = {
"Deviant Skardyn",
"Hall of Awakening",
"enUS",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[68639] = {
"Bloodhilt Battlemage",
"Lion's Landing",
"enUS",
},
[133663] = {
"Fanatical Headhunter",
"The Underrot",
"enUS",
},
[151579] = {
"Shield Generator",
"Operation: Mechagon",
},
[205326] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[193553] = {
"Nokhudon Warhound",
"The Nokhud Offensive",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[129553] = {
"Dinomántica Kish'o",
"Atal'Dazar",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[43286] = {
"Crystal Shard",
"The Stonecore",
"enUS",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
},
[196115] = {
"Cuidador arcano",
"La Bóveda Azur",
},
[167962] = {
"Taladro dental destrozado",
"El Otro Lado",
},
[222221] = {
"Swarmspike",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
},
[196116] = {
"Furia de cristal",
"La Bóveda Azur",
},
[167963] = {
"Cliente sin cabeza",
"El Otro Lado",
},
[222222] = {
"Swarmspike",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[191510] = {
"Smoldering Hellion",
"Vault of the Incarnates",
},
[196117] = {
"Crystal Thrasher",
"La Bóveda Azur",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[205843] = {
"Cinderstep Melter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
"enUS",
},
[167965] = {
"Lubricante",
"El Otro Lado",
},
[189464] = {
"Antorcha de hierro qalashi",
"Neltharus",
"enUS",
},
[60051] = {
"Cobalt Guardian",
"Mogu'shan Vaults",
"enUS",
},
[95772] = {
"Garranocturna enloquecida",
"Matorral Corazón Oscuro",
"enUS",
},
[104218] = {
"Advisor Melandrus",
"Court of Stars",
"enUS",
},
[39960] = {
"Bracero múrloc profundo",
"Trono de las Mareas",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
"enUS",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[167967] = {
"Aceite consciente",
"El Otro Lado",
},
[189466] = {
"Comandante de antorcha de hierro",
"Neltharus",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"Tak-Rethan Abyss",
"enUS",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
},
[189467] = {
"Partehuesos qalashi",
"Neltharus",
"enUS",
},
[210966] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[29774] = {
"Spitting Cobra",
"Gundrak",
"enUS",
},
[29838] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[74787] = {
"Slave Watcher Crushto",
"Bloodmaul Slag Mines",
},
[39705] = {
"Ascendant Lord Obsidius",
"Blackrock Caverns",
"enUS",
},
[205337] = {
"Manipuladora del tiempo infinito",
"El Alba del Infinito",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[193565] = {
"Nokhudon Defender",
"The Nokhud Offensive",
},
[99358] = {
"Dríade Corazón podrido",
"Matorral Corazón Oscuro",
"enUS",
},
[154663] = {
"Gnome-Eating Droplet",
"Operation: Mechagon",
},
[197149] = {
"Lavamante Qalashi",
"Segrete delle Incarnazioni",
},
[201756] = {
"Whiiskeyz",
"Dawn of the Infinite",
"enUS",
},
[134701] = {
"Blood Effigy",
"The Underrot",
},
[102430] = {
"Tarspitter Slug",
"Neltharion's Lair",
},
[189472] = {
"Ser de lava qalashi",
"Neltharus",
"enUS",
},
[173604] = {
"Sinister Antiquarian",
"Castle Nathria",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[171557] = {
"Shade of Bargast",
"Castle Nathria",
},
[112668] = {
"Infernal Imp",
"Court of Stars",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[225817] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[16594] = {
"Shadowmoon Acolyte",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[223770] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[222235] = {
"Bloodthirsty Swarmer",
"Nerub-ar Palace",
"enUS",
},
[219676] = {
"Nerl'athekk the Skulking",
"Skittering Breach",
"enUS",
},
[98081] = {
"Bellowing Idol",
"Neltharion's Lair",
},
[163882] = {
"Gigante de carne descompuesto",
"Plaga Abrumadora",
},
[223772] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
},
[223773] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[199715] = {
"Nokhud Battleguard",
"The Nokhud Offensive",
},
[61334] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[115486] = {
"Asesino erudito",
"Regreso a Karazhan",
},
[223774] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
},
[54552] = {
"Time-Twisted Breaker",
"End Time",
"enUS",
},
[80935] = {
"Explotador Grom'kar",
"Depósito Riel siniestro",
},
[133685] = {
"Espíritu turbio",
"Bardoma",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[106785] = {
"Bitterbrine Slave",
"Eye of Azshara",
"enUS",
},
[202789] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[178731] = {
"Bonesteel",
"Sanctum of Domination",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[80936] = {
"Granadero Grom'kar",
"Depósito Riel siniestro",
},
[223777] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[106786] = {
"Bitterbrine Slave",
"Eye of Azshara",
"enUS",
},
[115488] = {
"Piromante imbuido",
"Regreso a Karazhan",
},
[24849] = {
"Proto-Drake Rider",
"Utgarde Keep",
"enUS",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
"enUS",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[80937] = {
"Artillero Grom'kar",
"Depósito Riel siniestro",
},
[227874] = {
"Web Spreader",
"Skittering Breach",
"enUS",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
"enUS",
},
[17427] = {
"Shattered Hand Archer",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[180782] = {
"Consumed Soul",
"Sanctum of Domination",
},
[136249] = {
"Guardian Elemental",
"Shrine of the Storm",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
},
[99365] = {
"Taintheart Stalker",
"Darkheart Thicket",
"enUS",
},
[220197] = {
"Royal Swarmguard",
"City of Threads",
"enUS",
},
[217126] = {
"Over-Indulged Patron",
"Cinderbrew Meadery",
"enUS",
},
[80938] = {
"Mole Grom'kar",
"Depósito Riel siniestro",
},
[220710] = {
"Leviathan Manipulator",
"The Sinkhole",
"enUS",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
},
[220199] = {
"Battle Scarab",
"City of Threads",
"enUS",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[101414] = {
"Saltscale Skulker",
"Eye of Azshara",
"enUS",
},
[163894] = {
"Rompeespinas contagioso",
"Plaga Abrumadora",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[165430] = {
"Engendro del mal",
"Plaga Abrumadora",
},
[195119] = {
"Lanzarrayosayos primalista",
"Estanques de Vida Rubí",
},
[23954] = {
"Ingvar the Plunderer",
"Utgarde Keep",
"enUS",
},
[24082] = {
"Proto-Drake Handler",
"Utgarde Keep",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[216619] = {
"Orator Krix'vizk",
"City of Threads",
"enUS",
},
[164920] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[197169] = {
"Urglan",
"10.0 Dragon Isles",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
"enUS",
},
[210478] = {
"Infected Beast",
"Fungal Folly",
"enUS",
},
[186420] = {
"Tejedor terráneo",
"Uldaman: Legado de Tyr",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[216621] = {
"Nerubian Webspinner",
"Earthcrawl Mines",
"enUS",
},
[151613] = {
"Anti-Personnel Squirrel",
"Operation: Mechagon",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
},
[210479] = {
"Carnivorous Lasher",
"Fungal Folly",
"enUS",
},
[59930] = {
"Empowered Zombie",
"Scarlet Monastery",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[204337] = {
"Entidad desconocida",
"La Cumbre del Vórtice",
"enUS",
},
[135234] = {
"Mastín enfermo",
"Mansión Tarjasenda",
"enUS",
},
[56731] = {
"Habanero Brew",
"Stormstout Brewery",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[208945] = {
"Dwarven Bomber",
"Dawn of the Infinite",
"enUS",
},
[214576] = {
"Iron-Runed Protector",
"Hall of Awakening",
"enUS",
},
[227373] = {
"Vicious Spiderling",
"Earthcrawl Mines",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[167998] = {
"Guardián de portal",
"Teatro del Dolor",
},
[97068] = {
"Draco de la tormenta",
"Salones del Valor",
},
[32593] = {
"Skittering Swarmer",
"Azjol-Nerub",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[205366] = {
"Time-Lost Wakethrasher",
"Dawn of the Infinite",
"enUS",
},
[24723] = {
"Selin Fireheart",
"Magisters' Terrace",
"enUS",
},
[208438] = {
"Saboteador Infinito",
"El Alba del Infinito",
"enUS",
},
[135240] = {
"Esencia de alma",
"Mansión Tarjasenda",
"enUS",
},
[62619] = {
"Jade Destroyer",
"Greenstone Village",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
"enUS",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
},
[176703] = {
"Frostbound Devoted",
"Sanctum of Domination",
},
[17621] = {
"Heathen Guard",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[208440] = {
"Destripador Infinito",
"El Alba del Infinito",
"enUS",
},
[173633] = {
"Nathrian Archivist",
"Castle Nathria",
},
[208441] = {
"Water Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[215608] = {
"Siegehold Drone",
"The Spiral Weave",
"enUS",
},
[128551] = {
"Mastín mareaférrea",
"Puerto Libre",
},
[201788] = {
"Dazhak",
"El Alba del Infinito",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[59293] = {
"Scarlet Cannoneer",
"Scarlet Halls",
"enUS",
},
[135245] = {
"Bilge Rat Demolisher",
"Siege of Boralus",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[23956] = {
"Dragonflayer Strategist",
"Utgarde Keep",
"enUS",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
},
[196671] = {
"Devastador arcano",
"Academia Algeth'ar",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[214075] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[101679] = {
"Dreadsoul Poisoner",
"Darkheart Thicket",
"enUS",
},
[61213] = {
"Krik'thik Conscript",
"Gate of the Setting Sun",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[115244] = {
"Archimago Xylem",
"El Ojo de la Eternidad - Gesta",
},
[179269] = {
"Seguridad del oasis",
"Tazavesh, el Mercado Velado",
},
[83764] = {
"Grom'kar Deadeye",
"Iron Docks",
},
[54431] = {
"Echo of Baine",
"End Time",
"enUS",
},
[201792] = {
"Ahnzon",
"Dawn of the Infinite",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[197698] = {
"Tronatesta",
"Estanques de Vida Rubí",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
"enUS",
},
[56863] = {
"Sleepy Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[36516] = {
"Soulguard Animator",
"The Forge of Souls",
"enUS",
},
[127019] = {
"Training Dummy",
"Freehold",
"enUS",
},
[199748] = {
"Merodeador de la línea temporal",
"El Alba del Infinito",
"enUS",
},
[155215] = {
"Faeleaf Lasher",
"Torghast, Tower of the Damned",
},
[131669] = {
"Sabueso dentado",
"Mansión Tarjasenda",
"enUS",
},
[58783] = {
"Scarlet Initiate",
"Scarlet Monastery",
"enUS",
},
[170572] = {
"Aojadora hudú Atal'ai",
"El Otro Lado",
},
[199749] = {
"Anomalía del flujo temporal",
"El Alba del Infinito",
"enUS",
},
[155216] = {
"Faeleaf Warden",
"Torghast, Tower of the Damned",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
},
[99891] = {
"Draco de la tormenta",
"Salones del Valor",
},
[196679] = {
"Frozen Shroud",
"Vault of the Incarnates",
},
[222273] = {
"Sureki Silkbow",
"Nerub-ar Palace",
"enUS",
},
[40484] = {
"Erudax",
"Grim Batol",
"enUS",
},
[219714] = {
"Ice Block",
"The Underkeep",
"enUS",
},
[65310] = {
"Naba de boxeo",
"Torres de Ascensión",
},
[220738] = {
"Leviathan Caller",
"The Sinkhole",
"enUS",
},
[222274] = {
"Sureki Darkblade",
"Nerub-ar Palace",
"enUS",
},
[222786] = {
"Parasitic Worm",
"Nerub-ar Palace",
"enUS",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[155219] = {
"Gormling Spitter",
"Torghast, Tower of the Damned",
},
[184908] = {
"Entidad desconocida",
"Plaga Abrumadora",
},
[222275] = {
"Training Dummy",
"Nerub-ar Palace",
"enUS",
},
[68668] = {
"S.H.A.R.K. Medic",
"Lion's Landing",
"enUS",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[205384] = {
"Tejetiempo infinita",
"El Alba del Infinito",
"enUS",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
},
[135258] = {
"Irontide Curseblade",
"Siege of Boralus",
"enUS",
},
[184910] = {
"Entidad desconocida",
"Plaga Abrumadora",
},
[40357] = {
"Invoked Shadowflame Spirit",
"Grim Batol",
"enUS",
},
[68669] = {
"S.H.A.R.K. Rocketeer",
"Lion's Landing",
"enUS",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
},
[184911] = {
"Entidad desconocida",
"Plaga Abrumadora",
},
[173138] = {
"Escolta jurafauces",
"Las Tierras de las Sombras",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[216648] = {
"Nx",
"City of Threads",
"enUS",
},
[213577] = {
"Spitfire Charger",
"Kriegval's Rest",
"enUS",
},
[113971] = {
"Maiden of Virtue",
"Return to Karazhan",
},
[42789] = {
"Stonecore Magmalord",
"The Stonecore",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[59553] = {
"La Reina Cantora",
"Templo del Dragón de Jade",
},
[210507] = {
"Stalwart Bristlebruin",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[155225] = {
"Faeleaf Grovesinger",
"Torghast, Tower of the Damned",
},
[168022] = {
"Tentáculo de baba",
"Plaga Abrumadora",
},
[81212] = {
"Vigía Supremo Riel siniestro",
"Depósito Riel siniestro",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[208461] = {
"Scorching Roots",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[177237] = {
"Chains of Damnation",
"Tazavesh, the Veiled Market",
},
[190034] = {
"Destructor lazollama",
"Estanques de Vida Rubí",
},
[207438] = {
"Headless Horseman",
"Scarlet Monastery",
"enUS",
},
[104247] = {
"Arcanista de la Guardia Umbría",
"Corte de Estrellas",
},
[84028] = {
"Maestro de asedio Rokra",
"Muelles de hierro",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
"enUS",
},
[219724] = {
"Court Attendant",
"Nerub-ar Palace",
"enUS",
},
[59426] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[43430] = {
"Stonecore Berserker",
"The Stonecore",
"enUS",
},
[115765] = {
"Anulador abstracto",
"Regreso a Karazhan",
},
[219725] = {
"Chitin Knight",
"Nerub-ar Palace",
"enUS",
},
[203857] = {
"Bruja de la Horda",
"El Alba del Infinito",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[56867] = {
"Fiery Trickster",
"Stormstout Brewery",
"enUS",
},
[138338] = {
"Reanimated Guardian",
"The Underrot",
},
[98362] = {
"Troubled Soul",
"Black Rook Hold",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[223822] = {
"Queen's Guard Re'zah",
"Nerub-ar Palace",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[97083] = {
"Rey Ranulf",
"Salones del Valor",
},
[59299] = {
"Scarlet Guardian",
"Scarlet Halls",
"enUS",
},
[81983] = {
"Verdant Mandragora",
"The Everbloom",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[19608] = {
"Frayer Wildling",
"Tempest Keep: The Botanica",
"enUS",
},
[165470] = {
"Nathrian Executor",
"Castle Nathria",
},
[194647] = {
"Invocatore di Tuoni",
"Segrete delle Incarnazioni",
},
[203861] = {
"Destructor de la Horda",
"El Alba del Infinito",
},
[216658] = {
"Izo, the Grand Splicer",
"City of Threads",
"enUS",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[61347] = {
"Kingsguard",
"Mogu'shan Vaults",
"enUS",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[136295] = {
"Sunken Denizen",
"Shrine of the Storm",
},
[104251] = {
"Centinela de la Guardia Umbría",
"Corte de Estrellas",
},
[217684] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
},
[210518] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[174175] = {
"Petronato leal",
"Salones de Expiación",
},
[77890] = {
"Durag the Dominator",
"Auchindoun",
},
[59684] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[219221] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[96574] = {
"Centinela Tronaforjado",
"Salones del Valor",
},
[121400] = {
"Accusator Gnazh",
"Tomb of Sargeras",
"enUS",
},
[101437] = {
"Burning Geode",
"UNKNOWN",
},
[36522] = {
"Soul Horror",
"The Forge of Souls",
"enUS",
},
[134251] = {
"Seneschal M'bara",
"Kings' Rest",
},
[224853] = {
"Mutated Hatchling",
"Grim Batol",
"enUS",
},
[98366] = {
"Ghostly Retainer",
"Black Rook Hold",
"enUS",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[223318] = {
"Devoted Worshipper",
"Nerub-ar Palace",
"enUS",
},
[207450] = {
"Fungal Stabber",
"Fungal Folly",
"enUS",
},
[187999] = {
"Shrieking Whelp",
"The Azure Vault",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
},
[60197] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[228951] = {
"Nerubian Stalker",
"Skittering Breach",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[60709] = {
"Qiang the Merciless",
"Mogu'shan Vaults",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[207453] = {
"Fungal Rotspreader",
"Fungal Folly",
"enUS",
},
[44841] = {
"Blight Beast",
"Throne of the Tides",
"enUS",
},
[228952] = {
"Nerubian Skulker",
"The Spiral Weave",
"enUS",
},
[151659] = {
"Rocket Tonk",
"Operation: Mechagon",
},
[24664] = {
"Kael'thas Sunstrider",
"Magisters' Terrace",
"enUS",
},
[61989] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[207454] = {
"Fungal Gutter",
"Fungal Folly",
"enUS",
},
[228953] = {
"Skittering Intruder",
"Earthcrawl Mines",
"enUS",
},
[29335] = {
"Anub'ar Webspinner",
"Azjol-Nerub",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[59302] = {
"Sergeant Verdone",
"Scarlet Halls",
"enUS",
},
[205408] = {
"Cercenador del Tiempo Infinito",
"El Alba del Infinito",
"enUS",
},
[17626] = {
"Laughing Skull Legionnaire",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[99649] = {
"Dreadlord Mendacius",
"Vault of the Wardens",
"enUS",
},
[17882] = {
"The Black Stalker",
"Coilfang: The Underbog",
"enUS",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[197219] = {
"Azotador vil",
"Academia Algeth'ar",
},
[60710] = {
"Subetai the Swift",
"Mogu'shan Vaults",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[207969] = {
"Asaltante de la Horda",
"El Alba del Infinito",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[180840] = {
"Frostbound Devoted",
"Sanctum of Domination",
},
[141938] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[167532] = {
"Heavin el destructor",
"Teatro del Dolor",
},
[76104] = {
"Araña cadáver monstruosa",
"Cementerios de Sombraluna",
},
[84550] = {
"Xeri'tac",
"The Everbloom",
},
[214625] = {
"Kobyss Necromancer",
"Tak-Rethan Abyss",
"enUS",
},
[207459] = {
"Fungal Rotcaster",
"Fungal Folly",
"enUS",
},
[59175] = {
"Master Archer",
"Pandaria",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[107073] = {
"Entidad desconocida",
"Corte de Estrellas",
},
[207460] = {
"Fungarian Flinger",
"Fungal Folly",
"enUS",
},
[203877] = {
"Kobold Thwacker",
"Kriegval's Rest",
"enUS",
},
[167534] = {
"Rek la curtida",
"Teatro del Dolor",
},
[39980] = {
"Twilight Sadist",
"Blackrock Caverns",
"enUS",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[222305] = {
"Palace Guardian",
"Nerub-ar Palace",
"enUS",
},
[44715] = {
"Vicious Mindlasher",
"Throne of the Tides",
"enUS",
},
[203878] = {
"Kobold Mystic",
"Kriegval's Rest",
"enUS",
},
[196200] = {
"Agente de Algeth'ar",
"Academia Algeth'ar",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
},
[183404] = {
"Eternal Assembler",
"Sepulcher of the First Ones",
},
[167536] = {
"Harugia la sanguinaria",
"Teatro del Dolor",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214117] = {
"Entidad desconocida",
"Trono de las Mareas",
"enUS",
},
[77130] = {
"Sargerei Ritualist",
"Auchindoun",
},
[196202] = {
"Educador de Algeth'ar",
"Academia Algeth'ar",
},
[157300] = {
"Tunk",
"Darkmaul Citadel",
"enUS",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[196203] = {
"Algeth'ar Nurse",
"Algeth'ar Academy",
},
[180335] = {
"Contrabandista del cártel",
"Tazavesh, el Mercado Velado",
},
[213607] = {
"Múrloc de las profundidades",
"Trono de las Mareas",
"enUS",
},
[129598] = {
"Freehold Pack Mule",
"Freehold",
"enUS",
},
[77131] = {
"Sargerei Spirit-Tender",
"Auchindoun",
},
[18331] = {
"Ethereal Darkcaster",
"Auchindoun: Mana-Tombs",
"enUS",
},
[180336] = {
"Mafioso del cártel",
"Tazavesh, el Mercado Velado",
},
[18587] = {
"Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[62632] = {
"Sik'thik Engineer",
"Siege of Niuzao Temple",
"enUS",
},
[129599] = {
"Cutwater Knife Juggler",
"Freehold",
"enUS",
},
[215657] = {
"Ulgrax the Devourer",
"Nerub-ar Palace",
"enUS",
},
[154744] = {
"Monstruosidad tóxica",
"Operación: Mecalópolis",
},
[210539] = {
"Corridor Creeper",
"Darkflame Cleft",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"Fungal Folly",
"enUS",
},
[39982] = {
"Crazed Mage",
"Blackrock Caverns",
"enUS",
},
[96584] = {
"Immoliant Fury",
"Vault of the Wardens",
},
[129600] = {
"Rata de sentina escamasalada",
"Puerto Libre",
},
[174197] = {
"Ritualista del campo de batalla",
"Teatro del Dolor",
},
[77133] = {
"Sargerei Hoplite",
"Auchindoun",
},
[195696] = {
"Truenobestia primalista",
"El Ataque Nokhud",
},
[28825] = {
"Cyclone",
"Halls of Lightning",
"enUS",
},
[183412] = {
"Dominated Saboteur",
"Sepulcher of the First Ones",
},
[62633] = {
"Sik'thik Builder",
"Siege of Niuzao Temple",
"enUS",
},
[189555] = {
"Arcane Attendant",
"The Azure Vault",
},
[97097] = {
"Helarjar Champion",
"Maw of Souls",
},
[77134] = {
"Sargerei Cleric",
"Auchindoun",
},
[43438] = {
"Corborus",
"The Stonecore",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
},
[116549] = {
"Cantante de soporte",
"Regreso a Karazhan",
},
[168058] = {
"Pluma imbuida",
"Profundidades Sanguíneas",
},
[229995] = {
"Sureki Arbalest",
"Nerub-ar Palace",
"enUS",
},
[129602] = {
"Agente mareaférrea",
"Puerto Libre",
},
[150143] = {
"Picador huesudo",
"Operación: Mecalópolis",
},
[173178] = {
"Stone Legion Goliath",
"Castle Nathria",
},
[183416] = {
"Bound Realmbreaker",
"Sepulcher of the First Ones",
},
[168572] = {
"Hongos de asalto",
"Plaga Abrumadora",
},
[54700] = {
"Time-Twisted Nightsaber",
"End Time",
"enUS",
},
[201333] = {
"Awakened Avalanche",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[185465] = {
"Wardog",
"10.0 Dragon Isles",
},
[157824] = {
"Protector de la llama",
"Castillo de Colmillo Oscuro",
},
[150146] = {
"Chamán huesudo",
"Operación: Mecalópolis",
},
[224368] = {
"Chamber Expeller",
"Nerub-ar Palace",
"enUS",
},
[184954] = {
"Ancient Shaper",
"Sepulcher of the First Ones",
},
[32665] = {
"Crystalline Tangler",
"The Nexus",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[28826] = {
"Stormfury Revenant",
"Halls of Lightning",
"enUS",
},
[211061] = {
"Patreux",
"Fungal Folly",
"enUS",
},
[163457] = {
"Vanguardia Rechazada",
"Torres de Ascensión",
},
[184444] = {
"Oppressive Artificer",
"10.0 Dragon Isles",
},
[54701] = {
"Time-Twisted Huntress",
"End Time",
"enUS",
},
[211062] = {
"Bill",
"Fungal Folly",
"enUS",
},
[114249] = {
"Volatile Energy",
"Return to Karazhan",
},
[163458] = {
"Castigadora Rechazada",
"Torres de Ascensión",
},
[74579] = {
"Molten Elemental",
"Bloodmaul Slag Mines",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
},
[163459] = {
"Ensalmador Rechazado",
"Torres de Ascensión",
},
[39985] = {
"Mad Prisoner",
"Blackrock Caverns",
"enUS",
},
[168578] = {
"Fungimántico",
"Plaga Abrumadora",
},
[136330] = {
"Entidad desconocida",
"Mansión Tarjasenda",
"enUS",
},
[207481] = {
"Spinshroom",
"Fungal Folly",
"enUS",
},
[154758] = {
"Monstruosidad tóxica",
"Operación: Mecalópolis",
},
[179840] = {
"Market Peacekeeper",
"Tazavesh, the Veiled Market",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[83026] = {
"Maestro de asedio Olugar",
"Muelles de hierro",
},
[207482] = {
"Invasive Sporecap",
"Kriegval's Rest",
"enUS",
},
[134284] = {
"Portavoz de la muerte caído",
"Bardoma",
},
[179841] = {
"Veterano lanzachispa",
"Tazavesh, el Mercado Velado",
},
[217208] = {
"Zekvir",
"Skittering Breach",
"enUS",
},
[205435] = {
"Destripador de época",
"El Alba del Infinito",
"enUS",
},
[114251] = {
"Galindre",
"Return to Karazhan",
},
[179842] = {
"Agente comercial",
"Tazavesh, el Mercado Velado",
},
[115019] = {
"Viuda Bruma Fría",
"Regreso a Karazhan",
},
[150154] = {
"Saurolisco mascahuesos",
"Operación: Mecalópolis",
},
[104270] = {
"Ensamblaje de los Guardianes",
"Corte de Estrellas",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[81236] = {
"Técnico de Riel siniestro",
"Depósito Riel siniestro",
},
[98384] = {
"Razormouth",
"Neltharion's Lair",
"enUS",
},
[115020] = {
"Arcánido",
"Regreso a Karazhan",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[83028] = {
"Grom'kar Deadeye",
"Iron Docks",
},
[99664] = {
"Restless Soul",
"Black Rook Hold",
"enUS",
},
[120651] = {
"Entidad desconocida",
"Plaga Abrumadora",
},
[62637] = {
"Cursed Brew",
"Greenstone Village",
"enUS",
},
[179334] = {
"Portalmancer Zo'dahh",
"Tazavesh, the Veiled Market",
},
[184453] = {
"Brutal Motivator",
"10.0 Dragon Isles",
},
[17694] = {
"Shadowmoon Darkcaster",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[165515] = {
"Filoscuro depravado",
"Salones de Expiación",
},
[223357] = {
"Sureki Conscript",
"City of Threads",
"enUS",
},
[178824] = {
"Borr-Gahn",
"Sanctum of Domination",
},
[36916] = {
"Ghoul Minion",
"The Forge of Souls",
"enUS",
},
[41139] = {
"Naz'jar Spiritmender",
"Throne of the Tides",
"enUS",
},
[156814] = {
"Gor'groth",
"Darkmaul Citadel",
"enUS",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
},
[150160] = {
"Matón huesudo",
"Operación: Mecalópolis",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[104273] = {
"Jazshariu",
"Corte de Estrellas",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[183945] = {
"Unstable Matter",
"Sepulcher of the First Ones",
},
[19486] = {
"Sunseeker Chemist",
"Tempest Keep: The Botanica",
"enUS",
},
[157328] = {
"Darkmaul Channeler",
"Darkmaul Citadel",
"enUS",
},
[23965] = {
"Frost Tomb",
"Utgarde Keep",
"enUS",
},
[167566] = {
"Asesina alatétrica",
"Castillo Nathria",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[98900] = {
"Wyrmtongue Trickster",
"Black Rook Hold",
"enUS",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[104275] = {
"Imacu'tya",
"Corte de Estrellas",
},
[200840] = {
"Flamebound Huntsman",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[29340] = {
"Anub'ar Brood Keeper",
"Azjol-Nerub",
"enUS",
},
[214661] = {
"Goldie Baronbottom",
"Cinderbrew Meadery",
"enUS",
},
[97365] = {
"Seacursed Mistmender",
"Maw of Souls",
},
[150165] = {
"Elemental de baba",
"Operación: Mecalópolis",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[165010] = {
"Babosa coagulada",
"Plaga Abrumadora",
},
[17695] = {
"Shattered Hand Assassin",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[223876] = {
"Impaling Spike",
"Nerub-ar Palace",
"enUS",
},
[168594] = {
"Centinela de la cámara",
"Profundidades Sanguíneas",
},
[156821] = {
"Darkmaul Shadowcaller",
"Darkmaul Citadel",
"enUS",
},
[177808] = {
"Sobrestante acorazado",
"Tazavesh, el Mercado Velado",
},
[208521] = {
"Pumpkin Soldier",
"Scarlet Monastery",
"enUS",
},
[173714] = {
"Mistveil Nightblossom",
"Mists of Tirna Scithe",
"enUS",
},
[45620] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[150168] = {
"Monstruosidad tóxica",
"Operación: Mecalópolis",
},
[116562] = {
"Flamewaker Centurion",
"Return to Karazhan",
},
[164501] = {
"Mistcaller",
"Mists of Tirna Scithe",
"enUS",
},
[215177] = {
"Waximus",
"New Candle, New Hope",
"enUS",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[217225] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[95832] = {
"Doncella escudera Valarjar",
"Salones del Valor",
},
[104278] = {
"Sicario vínculo vil",
"Corte de Estrellas",
},
[39990] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[156825] = {
"Darkmaul Centurion",
"Darkmaul Citadel",
"enUS",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
},
[114260] = {
"Mrrgria",
"Return to Karazhan",
},
[130896] = {
"Blackout Barrel",
"Freehold",
"enUS",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[214668] = {
"Venture Co. Patron",
"Cinderbrew Meadery",
"enUS",
},
[153755] = {
"Naeno Megacrash",
"Operation: Mechagon",
},
[95833] = {
"Hyrja",
"Halls of Valor",
},
[29213] = {
"Anub'ar Darter",
"Azjol-Nerub",
"enUS",
},
[58674] = {
"Angry Hound",
"Pandaria",
"enUS",
},
[165529] = {
"Coleccionista depravada",
"Salones de Expiación",
},
[114261] = {
"Toe Knee",
"Return to Karazhan",
},
[102232] = {
"Trampero rocoso",
"Guarida de Neltharion",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[164506] = {
"Capitán antiguo",
"Teatro del Dolor",
},
[136353] = {
"Colossal Tentacle",
"Shrine of the Storm",
},
[173720] = {
"Mistveil Gorgegullet",
"Mists of Tirna Scithe",
"enUS",
},
[211087] = {
"Speaker Shadowcrown",
"The Dawnbreaker",
"enUS",
},
[95834] = {
"Místico Valarjar",
"Salones del Valor",
},
[177816] = {
"Especialista en interrogatorios",
"Tazavesh, el Mercado Velado",
},
[114262] = {
"Attumen the Huntsman",
"Return to Karazhan",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[26782] = {
"Crystalline Keeper",
"The Nexus",
"enUS",
},
[177817] = {
"Oficial de apoyo",
"Tazavesh, el Mercado Velado",
},
[211089] = {
"Anub'ikkaj",
"The Dawnbreaker",
"enUS",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[214673] = {
"Flavor Scientist",
"Cinderbrew Meadery",
"enUS",
},
[122965] = {
"Vol'kaal",
"Atal'Dazar",
"enUS",
},
[164510] = {
"Ballestero desgarbado",
"Teatro del Dolor",
},
[187033] = {
"Putrealiento",
"Hondonada Frondacuero",
"enUS",
},
[114264] = {
"Midnight",
"Return to Karazhan",
},
[99676] = {
"Mogu'shan Secret-Keeper",
"Vault of the Wardens",
"enUS",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[29214] = {
"Anub'ar Assassin",
"Azjol-Nerub",
"enUS",
},
[217748] = {
"Nexus-Princess Ky'veza",
"Nerub-ar Palace",
"enUS",
},
[58676] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[42808] = {
"Stonecore Flayer",
"The Stonecore",
"enUS",
},
[17377] = {
"Keli'dan the Breaker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[29982] = {
"Drakkari Raider",
"Gundrak",
"enUS",
},
[220309] = {
"Shadow-Crazed Hog",
"Mycomancer Cavern",
"enUS",
},
[116569] = {
"Razorjaw Wavemender",
"Tomb of Sargeras",
"enUS",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[40633] = {
"Guardia de honor Naz'jar",
"Trono de las Mareas",
"enUS",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[114522] = {
"Mrs. Cauldrons",
"Return to Karazhan",
},
[122968] = {
"Yazma",
"Atal'Dazar",
"enUS",
},
[170147] = {
"Recuerdo volátil",
"El Otro Lado",
},
[120153] = {
"Eonic Defender",
"Tomb of Sargeras",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
"enUS",
},
[129879] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[178851] = {
"Burning Stygia",
"Sanctum of Domination",
},
[180387] = {
"Mawsworn Paindrinker",
"Sanctum of Domination",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[40634] = {
"Bruja de la tempestad Naz'jar",
"Trono de las Mareas",
"enUS",
},
[220314] = {
"Bogpiper",
"Mycomancer Cavern",
"enUS",
},
[122970] = {
"Acechador de hoja de las sombras",
"Atal'Dazar",
"enUS",
},
[78437] = {
"Gul'kosh",
"Auchindoun",
},
[188067] = {
"Tejescarcha rayogélido",
"Estanques de Vida Rubí",
},
[88163] = {
"Vidente cinéreo Grom'kar",
"Depósito Riel siniestro",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
"enUS",
},
[197793] = {
"Awakened Juggernaut",
"Vault of the Incarnates",
},
[117596] = {
"Razorjaw Gladiator",
"Tomb of Sargeras",
"enUS",
},
[42810] = {
"Crystalspawn Giant",
"The Stonecore",
"enUS",
},
[122971] = {
"Gigante Dazar'ai",
"Atal'Dazar",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[226459] = {
"Glowmite",
"Fungal Folly",
"enUS",
},
[95842] = {
"Clamatruenos Valarjar",
"Salones del Valor",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[56631] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[114526] = {
"Suplente fantasmal",
"Regreso a Karazhan",
},
[180392] = {
"Gorgoan Souldrinker",
"Sanctum of Domination",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[95843] = {
"Rey Haldor",
"Salones del Valor",
},
[163501] = {
"Hostigador Rechazado",
"Torres de Ascensión",
},
[96611] = {
"Toro Uñainquina",
"Salones del Valor",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[59191] = {
"Commander Lindon",
"Pandaria",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[222368] = {
"Exalted Priest",
"Nerub-ar Palace",
"enUS",
},
[120158] = {
"Volatile Corruption",
"Tomb of Sargeras",
"enUS",
},
[171181] = {
"Picofiloso territorial",
"El Otro Lado",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
},
[192680] = {
"Centinela guardián",
"Academia Algeth'ar",
},
[129372] = {
"Blacktar Bomber",
"Siege of Boralus",
"enUS",
},
[197799] = {
"Instillatore della Cava",
"Segrete delle Incarnazioni",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[219810] = {
"Nerubian Ritualist",
"Skittering Breach",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[67692] = {
"Thaumaturge Saresse",
"Lion's Landing",
"enUS",
},
[197801] = {
"Awakened Terrasentry",
"Vault of the Incarnates",
},
[42428] = {
"Devout Follower",
"The Stonecore",
"enUS",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
},
[171184] = {
"Mythresh, garfas del cielo",
"El Otro Lado",
},
[130909] = {
"Gusano fétido",
"UNKNOWN",
},
[1863] = {
"Shah-sahar",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[66413] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[219301] = {
"Brew Drop",
"Cinderbrew Meadery",
"enUS",
},
[17827] = {
"Claw",
"Coilfang: The Underbog",
"enUS",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[98406] = {
"Escorpión Cascarascuas",
"Guarida de Neltharion",
},
[168627] = {
"Ligaplagas",
"Plaga Abrumadora",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[150712] = {
"Trixie Tazer",
"Operation: Mechagon",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[221863] = {
"Summoned Acolyte",
"Nerub-ar Palace",
"enUS",
},
[214697] = {
"Chef Chewie",
"Cinderbrew Meadery",
"enUS",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[11859] = {
"Doomguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190128] = {
"Zul'gamux",
"Regreso a Karazhan",
},
[137405] = {
"Gripping Terror",
"Siege of Boralus",
"enUS",
},
[23970] = {
"Vrykul Skeleton",
"Utgarde Keep",
"enUS",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
"enUS",
},
[130400] = {
"Triturador mareaférrea",
"Puerto Libre",
},
[101991] = {
"Criatura de Pesadilla",
"Matorral Corazón Oscuro",
"enUS",
},
[167607] = {
"Mutilador petronato",
"Salones de Expiación",
},
[24674] = {
"Phoenix",
"Magisters' Terrace",
"enUS",
},
[165560] = {
"Gormling Larva",
"Mists of Tirna Scithe",
"enUS",
},
[28961] = {
"Titanium Siegebreaker",
"Halls of Lightning",
"enUS",
},
[203951] = {
"Kobold Skullface",
"Kriegval's Rest",
"enUS",
},
[179893] = {
"Vagador del cártel",
"Tazavesh, el Mercado Velado",
},
[29217] = {
"Anub'ar Venomancer",
"Azjol-Nerub",
"enUS",
},
[17380] = {
"Broggok",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[211119] = {
"Kasthrik",
"Fungal Folly",
"enUS",
},
[134338] = {
"Tidesage Enforcer",
"Shrine of the Storm",
},
[180407] = {
"Gorgoan Sentinel",
"Sanctum of Domination",
},
[100713] = {
"Rockbait Fisher",
"Neltharion's Lair",
"enUS",
},
[167611] = {
"Evisceradora petronato",
"Salones de Expiación",
},
[114790] = {
"Viz'aduum the Watcher",
"Return to Karazhan",
},
[26722] = {
"Azure Magus",
"The Nexus",
"enUS",
},
[211121] = {
"Rank Overseer",
"Darkflame Cleft",
"enUS",
},
[167612] = {
"Atracador petronato",
"Salones de Expiación",
},
[58555] = {
"Scarlet Fanatic",
"Scarlet Monastery",
"enUS",
},
[185528] = {
"Mística zarpatruco",
"Hondonada Frondacuero",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[118374] = {
"Captain Yathae Moonstrike",
"Tomb of Sargeras",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[185529] = {
"Plaga bélica frondacuero",
"Hondonada Frondacuero",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[60731] = {
"Undying Shadows",
"Mogu'shan Vaults",
"enUS",
},
[166079] = {
"Brittlebone Crossbowman",
"The Necrotic Wake",
"enUS",
},
[130404] = {
"Trampa para alimañas",
"Puerto Libre",
},
[179388] = {
"Maresabia de reloj de arena",
"Tazavesh, el Mercado Velado",
},
[167615] = {
"Filoscura depravada",
"Salones de Expiación",
},
[114792] = {
"Virtuous Lady",
"Return to Karazhan",
},
[213684] = {
"Void Chunk",
"The Rookery",
"enUS",
},
[107114] = {
"Tormenting Orb",
"Vault of the Wardens",
"enUS",
},
[194745] = {
"Hiena colmipútrea",
"Hondonada Frondacuero",
"enUS",
},
[217268] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[58684] = {
"Scarlet Scourge Hewer",
"Scarlet Halls",
"enUS",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[17381] = {
"The Maker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[74355] = {
"Captured Miner",
"Bloodmaul Slag Mines",
},
[227507] = {
"Sureki Skirmisher",
"Nerub-ar Palace",
"enUS",
},
[191164] = {
"Cuidador arcano",
"La Bóveda Azur",
},
[104300] = {
"Señora de la Sombra",
"Corte de Estrellas",
},
[56637] = {
"Ook-Ook",
"Stormstout Brewery",
"enUS",
},
[170690] = {
"Horror enfermo",
"Teatro del Dolor",
},
[81522] = {
"Witherbark",
"The Everbloom",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[114794] = {
"Sabueso esquelético",
"Regreso a Karazhan",
},
[26723] = {
"Keristrasza",
"The Nexus",
"enUS",
},
[74356] = {
"Captured Miner",
"Bloodmaul Slag Mines",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
},
[180417] = {
"Loom Artificer",
"Sanctum of Domination",
},
[58685] = {
"Scarlet Evangelist",
"Scarlet Halls",
"enUS",
},
[196798] = {
"Maligno de maná corrupto",
"Academia Algeth'ar",
},
[19557] = {
"Greater Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[213179] = {
"Avanoxx",
"Ara-Kara, City of Echoes",
"enUS",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
"enUS",
},
[114796] = {
"Anfitriona íntegra",
"Regreso a Karazhan",
},
[169159] = {
"Lata inestable",
"Plaga Abrumadora",
},
[194241] = {
"Vil Maleputre",
"Hondonada Frondacuero",
"enUS",
},
[195265] = {
"Clamatormentas Arynga",
"El Ataque Nokhud",
},
[228537] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
"enUS",
},
[188100] = {
"Cría estridente",
"La Bóveda Azur",
},
[64061] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[179399] = {
"Drunk Pirate",
"Tazavesh, the Veiled Market",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[76407] = {
"Ner'zhul",
"Shadowmoon Burial Grounds",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[114542] = {
"Filántropo fantasmal",
"Regreso a Karazhan",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[167116] = {
"Spinemaw Reaver",
"Mists of Tirna Scithe",
"enUS",
},
[212673] = {
"Devastador Naz'jar",
"Trono de las Mareas",
"enUS",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[223423] = {
"Careless Hopgoblin",
"Cinderbrew Meadery",
"enUS",
},
[42691] = {
"Stonecore Rift Conjurer",
"The Stonecore",
"enUS",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[180426] = {
"Feeding Horror",
"Sanctum of Domination",
},
[201413] = {
"Inflammable Wall",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[90997] = {
"Destructor de Petrofuerza",
"Guarida de Neltharion",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
},
[64446] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[218306] = {
"Scarab Captain Vul'akan",
"Nerub-ar Palace",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[28580] = {
"Hardened Steel Skycaller",
"Halls of Lightning",
"enUS",
},
[114544] = {
"Ujier esquelético",
"Regreso a Karazhan",
},
[28836] = {
"Stormforged Runeshaper",
"Halls of Lightning",
"enUS",
},
[90998] = {
"Modelador trozo de añublo",
"Guarida de Neltharion",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
},
[95861] = {
"Hatecoil Oracle",
"Eye of Azshara",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[180429] = {
"Astrovidente ornamentado",
"Tazavesh, el Mercado Velado",
},
[42692] = {
"Stonecore Bruiser",
"The Stonecore",
"enUS",
},
[114289] = {
"Skeletal Sorcerer",
"Maw of Souls",
},
[98677] = {
"Rook Spiderling",
"Black Rook Hold",
"enUS",
},
[64063] = {
"Mogu'shan Arcanist",
"Mogu'shan Vaults",
"enUS",
},
[75899] = {
"Entidad desconocida",
"Cementerios de Sombraluna",
},
[164563] = {
"Gargon sañoso",
"Salones de Expiación",
},
[197835] = {
"Kaurdyth",
"Vault of the Incarnates",
},
[18343] = {
"Tavarok",
"Auchindoun: Mana-Tombs",
"enUS",
},
[114802] = {
"Oficial espectral",
"Regreso a Karazhan",
},
[217799] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[165076] = {
"Garrapata glotona",
"Profundidades Sanguíneas",
},
[91000] = {
"Mole Piezavil",
"Guarida de Neltharion",
},
[133852] = {
"Living Rot",
"The Underrot",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[79739] = {
"Granadero Grom'kar",
"Depósito Riel siniestro",
},
[180433] = {
"Entidad desconocida",
"Tazavesh, el Mercado Velado",
},
[126832] = {
"Skycap'n Kragg",
"Freehold",
},
[114803] = {
"Mano de establo espectral",
"Regreso a Karazhan",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[91001] = {
"Rondador Escupebrea",
"Guarida de Neltharion",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[104822] = {
"Flame of Woe",
"Halls of Valor",
},
[178388] = {
"Bazaar Strongarm",
"Tazavesh, the Veiled Market",
},
[36551] = {
"Spiteful Apparition",
"The Forge of Souls",
"enUS",
},
[28581] = {
"Stormforged Tactician",
"Halls of Lightning",
"enUS",
},
[184019] = {
"Lanzarrocas fornido",
"Uldaman: Legado de Tyr",
"enUS",
},
[114804] = {
"Destrero espectral",
"Regreso a Karazhan",
},
[218315] = {
"Kaheti Sentry",
"Nerub-ar Palace",
"enUS",
},
[91002] = {
"Rotdrool Grabber",
"UNKNOWN",
},
[170199] = {
"Harnessed Specter",
"Castle Nathria",
},
[16808] = {
"Warchief Kargath Bladefist",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[100216] = {
"Hatecoil Wrangler",
"Eye of Azshara",
"enUS",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[92538] = {
"Entidad desconocida",
"Guarida de Neltharion",
},
[218316] = {
"Kaheti Vanguard",
"Nerub-ar Palace",
"enUS",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[138464] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
},
[98681] = {
"Hilador Grajo",
"Fuerte Torre Oscura",
"enUS",
},
[218317] = {
"Woven Threadmancer",
"Nerub-ar Palace",
"enUS",
},
[91003] = {
"Rokmora",
"Neltharion's Lair",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[184022] = {
"Geomante grutacanto",
"Uldaman: Legado de Tyr",
},
[178392] = {
"Guardián de la puerta Zo'mazz",
"Tazavesh, el Mercado Velado",
},
[228044] = {
"Reno Jackson",
"Kriegval's Rest",
"enUS",
},
[61250] = {
"Sorcerer Mogu",
"Mogu'shan Vaults",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
},
[94331] = {
"Petrifying Crystal",
"Neltharion's Lair",
},
[61634] = {
"Commander Vo'jak",
"Siege of Niuzao Temple",
"enUS",
},
[91004] = {
"Ularogg Cragshaper",
"Neltharion's Lair",
"enUS",
},
[26918] = {
"Chaotic Rift",
"The Nexus",
"enUS",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[218320] = {
"Web Acolyte",
"Nerub-ar Palace",
"enUS",
},
[165597] = {
"Patchwerk Soldier",
"The Necrotic Wake",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[81279] = {
"Grom'kar Flameslinger",
"Iron Docks",
},
[220368] = {
"Failed Batch",
"Cinderbrew Meadery",
"enUS",
},
[59459] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[91005] = {
"Naraxas",
"Neltharion's Lair",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[120182] = {
"Tormented Priestess",
"Tomb of Sargeras",
"enUS",
},
[40008] = {
"Lucky",
"Blackrock Caverns",
"enUS",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[216275] = {
"Brann's Epic Egg",
"Kriegval's Rest",
"enUS",
},
[184539] = {
"Automated Eliminator",
"Sepulcher of the First Ones",
},
[28838] = {
"Titanium Vanguard",
"Halls of Lightning",
"enUS",
},
[91006] = {
"Rechinador Espaldapétrea",
"Guarida de Neltharion",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[16809] = {
"Warbringer O'mrogg",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[67460] = {
"Bilgewater Grenadier",
"Lion's Landing",
"enUS",
},
[131817] = {
"Cragmaw the Infested",
"The Underrot",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[42696] = {
"Stonecore Warbringer",
"The Stonecore",
"enUS",
},
[98173] = {
"Mystic Ssa'veh",
"Eye of Azshara",
"enUS",
},
[59460] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
"enUS",
},
[218325] = {
"Swarming Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[91007] = {
"Dargrul",
"Neltharion's Lair",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[39625] = {
"General Umbriss",
"Grim Batol",
"enUS",
},
[131819] = {
"Adivina del aquelarre",
"Mansión Tarjasenda",
"enUS",
},
[26727] = {
"Mage Hunter Ascendant",
"The Nexus",
"enUS",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
},
[75652] = {
"Engendro del vacío",
"Cementerios de Sombraluna",
},
[131821] = {
"Doncella ignota",
"Mansión Tarjasenda",
"enUS",
},
[77700] = {
"Exhumadora Sombraluna",
"Cementerios de Sombraluna",
},
[59461] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[177891] = {
"Entidad desconocida",
"Sagrario de Dominación",
},
[64068] = {
"Mogu'shan Engine Keeper",
"Mogu'shan Vaults",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
},
[67463] = {
"Baxel Brassbombs",
"Lion's Landing",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[96640] = {
"Valarjar Marksman",
"Halls of Valor",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[150251] = {
"Mecánico pistonero",
"Operación: Mecalópolis",
},
[28583] = {
"Blistering Steamrager",
"Halls of Lightning",
"enUS",
},
[24552] = {
"Sliver",
"Magisters' Terrace",
"enUS",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
"enUS",
},
[24744] = {
"Vexallus",
"Magisters' Terrace",
"enUS",
},
[173798] = {
"Rat of Unusual Size",
"Castle Nathria",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
},
[80005] = {
"Skylord Tovra",
"Grimrail Depot",
},
[50376] = {
"Angered Earth",
"Blackrock Caverns",
"enUS",
},
[197857] = {
"Hendetripas",
"Hondonada Frondacuero",
"enUS",
},
[58822] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[133361] = {
"Entidad desconocida",
"Mansión Tarjasenda",
"enUS",
},
[150253] = {
"Reptador armado",
"Operación: Mecalópolis",
},
[98177] = {
"Glayvianna Soulrender",
"Vault of the Wardens",
},
[29735] = {
"Savage Worg",
"Utgarde Keep",
"enUS",
},
[168681] = {
"Vándalo Rechazado",
"Torres de Ascensión",
},
[173800] = {
"Sewer Rat",
"Castle Nathria",
},
[150254] = {
"Chataperro",
"Operación: Mecalópolis",
},
[196835] = {
"Kroshk",
"10.0 Dragon Isles",
},
[189669] = {
"Binding Spear",
"Neltharus",
"enUS",
},
[137458] = {
"Rotting Spore",
"The Underrot",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[26728] = {
"Mage Hunter Initiate",
"The Nexus",
"enUS",
},
[26792] = {
"Crystalline Protector",
"The Nexus",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[169196] = {
"Crimson Cabalist",
"Castle Nathria",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[19306] = {
"Mana Leech",
"Auchindoun: Mana-Tombs",
"enUS",
},
[131318] = {
"Elder Leaxa",
"The Underrot",
},
[160495] = {
"Atrapaalmas maníaco",
"Teatro del Dolor",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[78728] = {
"Shaadum",
"Auchindoun",
},
[219361] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[91781] = {
"Hatecoil Warrior",
"Eye of Azshara",
},
[213219] = {
"Congealed Ooze",
"Throne of the Tides",
"enUS",
},
[156913] = {
"Decaying Corpse",
"Darkmaul Citadel",
"enUS",
},
[113536] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[219874] = {
"High Speaker's Construct",
"Hall of Awakening",
"enUS",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[126845] = {
"Captain Jolly",
"Freehold",
},
[24745] = {
"Pure Energy",
"Magisters' Terrace",
"enUS",
},
[120191] = {
"Eternal Soulguard",
"Tomb of Sargeras",
"enUS",
},
[91782] = {
"Hatecoil Crusher",
"Eye of Azshara",
"enUS",
},
[200936] = {
"Fiamma Vivente",
"Segrete delle Incarnazioni",
},
[42188] = {
"Ozruk",
"The Stonecore",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[163058] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[59464] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[98949] = {
"Smashspite the Hateful",
"Black Rook Hold",
"enUS",
},
[17771] = {
"Murkblood Oracle",
"Coilfang: The Underbog",
"enUS",
},
[91783] = {
"Hatecoil Stormweaver",
"Eye of Azshara",
},
[40013] = {
"Buster",
"Blackrock Caverns",
"enUS",
},
[18155] = {
"Bloodfalcon",
"Tempest Keep: The Botanica",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[126847] = {
"Captain Raoul",
"Freehold",
"enUS",
},
[26729] = {
"Steward",
"The Nexus",
"enUS",
},
[26793] = {
"Crystalline Frayer",
"The Nexus",
"enUS",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[58569] = {
"Scarlet Purifier",
"Scarlet Monastery",
"enUS",
},
[121473] = {
"Coercitor Nixa",
"Tomb of Sargeras",
"enUS",
},
[214761] = {
"Nightfall Ritualist",
"The Dawnbreaker",
"enUS",
},
[162038] = {
"Bailarín de la niebla regio",
"Profundidades Sanguíneas",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
},
[142587] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[126848] = {
"Captain Eudora",
"Freehold",
"enUS",
},
[214762] = {
"Nightfall Commander",
"The Dawnbreaker",
"enUS",
},
[162039] = {
"Opresora siniestra",
"Profundidades Sanguíneas",
},
[120194] = {
"Ghostly Acolyte",
"Tomb of Sargeras",
"enUS",
},
[91785] = {
"Wandering Shellback",
"Eye of Azshara",
"enUS",
},
[117123] = {
"Tidescale Legionnaire",
"Tomb of Sargeras",
"enUS",
},
[210156] = {
"Skarmorak",
"The Stonevault",
"enUS",
},
[162040] = {
"Gran sobrestante",
"Profundidades Sanguíneas",
},
[28585] = {
"Slag",
"Halls of Lightning",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[115844] = {
"Goroth",
"Tomb of Sargeras",
"enUS",
},
[91786] = {
"Gritslime Snail",
"Eye of Azshara",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
},
[206063] = {
"Desviación temporal",
"El Alba del Infinito",
"enUS",
},
[58826] = {
"Zao Sunseeker",
"Temple of the Jade Serpent",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
},
[43214] = {
"Slabhide",
"The Stonecore",
"enUS",
},
[59722] = {
"Pile of Corpses",
"Pandaria",
"enUS",
},
[78734] = {
"Zipteq",
"Auchindoun",
},
[91787] = {
"Cove Seagull",
"Eye of Azshara",
},
[40015] = {
"Runty",
"Blackrock Caverns",
"enUS",
},
[213743] = {
"Enraged Skardyn",
"Hall of Awakening",
"enUS",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
},
[26730] = {
"Mage Slayer",
"The Nexus",
"enUS",
},
[26794] = {
"Ormorok the Tree-Shaper",
"The Nexus",
"enUS",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[125828] = {
"Hoobgoob",
"Atal'Dazar",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[171772] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[206068] = {
"Fusión temporal",
"El Alba del Infinito",
"enUS",
},
[218865] = {
"Bee-let",
"Cinderbrew Meadery",
"enUS",
},
[162047] = {
"Bruto insaciable",
"Profundidades Sanguíneas",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
},
[179963] = {
"Terror Orb",
"Sanctum of Domination",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
},
[76177] = {
"Soulbinder Nyami",
"Auchindoun",
},
[137478] = {
"Queen Wasi",
"Kings' Rest",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
},
[114312] = {
"Moroes",
"Return to Karazhan",
},
[24555] = {
"Garaxxas",
"Magisters' Terrace",
"enUS",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
},
[24683] = {
"Sunblade Mage Guard",
"Magisters' Terrace",
"enUS",
},
[206070] = {
"Cronaxi",
"El Alba del Infinito",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
},
[162049] = {
"Vestige of Doubt",
"Sanguine Depths",
},
[150276] = {
"Robot chatarra pesado",
"Operación: Mecalópolis",
},
[95885] = {
"Tirathon Saltheril",
"Vault of the Wardens",
"enUS",
},
[151812] = {
"Detect-o-Bot",
"Operation: Mechagon",
},
[201464] = {
"Cinderstep Weaver",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[62795] = {
"Sik'thik Warden",
"Siege of Niuzao Temple",
"enUS",
},
[97677] = {
"Barbed Spiderling",
"Vault of the Wardens",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
},
[204536] = {
"Trozo de añubio",
"El Alba del Infinito",
"enUS",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
},
[201465] = {
"Cinderstep Melter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[177407] = {
"Formless Mass",
"Sanctum of Domination",
},
[222964] = {
"Flavor Scientist",
"Cinderbrew Meadery",
"enUS",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[95886] = {
"Ash'Golm",
"Vault of the Wardens",
"enUS",
},
[40017] = {
"Twilight Element Warden",
"Blackrock Caverns",
"enUS",
},
[201466] = {
"Cinderstep Igniter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[214263] = {
"Waxface",
"The Waterworks",
"enUS",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[44752] = {
"Faceless Sapper",
"Throne of the Tides",
"enUS",
},
[127111] = {
"Remero mareaférrea",
"Puerto Libre",
},
[26731] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[190206] = {
"Danzallamas primalista",
"Estanques de Vida Rubí",
},
[227573] = {
"Anub'vir",
"Earthcrawl Mines",
"enUS",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
},
[91792] = {
"Stormwake Hydra",
"Eye of Azshara",
},
[201468] = {
"Stonebreath Landslider",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190207] = {
"Tejecenizas primalista",
"Estanques de Vida Rubí",
},
[137484] = {
"King A'akul",
"Kings' Rest",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
},
[201469] = {
"Restless Pebble",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[82579] = {
"Clarividente Grom'kar",
"Depósito Riel siniestro",
},
[227575] = {
"Armored Shellguard",
"Earthcrawl Mines",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
},
[79508] = {
"Felborne Abyssal",
"Auchindoun",
},
[201470] = {
"Flickering Flame",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[129928] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[194816] = {
"Monstruosidad de la forja",
"Neltharus",
"enUS",
},
[204030] = {
"Entidad desconocida",
"El Alba del Infinito",
},
[102287] = {
"Dominador Cascarascuas",
"Guarida de Neltharion",
},
[201471] = {
"Earthborne Charger",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[162057] = {
"Centinela de la cámara",
"Profundidades Sanguíneas",
},
[187139] = {
"Crystal Thrasher",
"La Bóveda Azur",
},
[91794] = {
"Saltscale Lurker",
"Eye of Azshara",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legado de Tyr",
},
[201472] = {
"Torch Revenant",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[101008] = {
"Entidad desconocida",
"Fuerte Torre Oscura",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[227578] = {
"Nerubian Webcaster",
"Earthcrawl Mines",
"enUS",
},
[223995] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[195842] = {
"Corruptor ukhel",
"El Ataque Nokhud",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[29931] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[59982] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
},
[40019] = {
"Twilight Obsidian Borer",
"Blackrock Caverns",
"enUS",
},
[222461] = {
"Congealed Mass",
"Nerub-ar Palace",
"enUS",
},
[97170] = {
"Hatecoil Wavebinder",
"Eye of Azshara",
},
[138002] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[114318] = {
"Baron Rafe Dreuger",
"Return to Karazhan",
},
[167691] = {
"Stasis Trap",
"Castle Nathria",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[26796] = {
"Commander Stoutbeard",
"The Nexus",
"enUS",
},
[222974] = {
"Hungry Scarab",
"City of Threads",
"enUS",
},
[227581] = {
"Nerubian Oracle",
"Earthcrawl Mines",
"enUS",
},
[91796] = {
"Skrog Wavecrasher",
"Eye of Azshara",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
"enUS",
},
[176394] = {
"Trabajador de C.A.R.T.A.",
"Tazavesh, el Mercado Velado",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[176395] = {
"Elemental postal sobrecargado",
"Tazavesh, el Mercado Velado",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[193799] = {
"Entidad desconocida",
"Hondonada Frondacuero",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[91797] = {
"King Deepbeard",
"Eye of Azshara",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[176396] = {
"Defective Sorter",
"Tazavesh, the Veiled Market",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[186122] = {
"Rira Hachagarra",
"Hondonada Frondacuero",
"enUS",
},
[114320] = {
"Lord Robin Daris",
"Return to Karazhan",
},
[24557] = {
"Kagani Nightstrike",
"Magisters' Terrace",
"enUS",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[150292] = {
"Caballería de Mecalópolis",
"Operación: Mecalópolis",
},
[120463] = {
"Undersea Custodian",
"Tomb of Sargeras",
"enUS",
},
[120719] = {
"Lunar Priestess",
"Tomb of Sargeras",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
"enUS",
},
[186124] = {
"Tajolmillo",
"Hondonada Frondacuero",
"enUS",
},
[150293] = {
"Merodeador de Mecalópolis",
"Operación: Mecalópolis",
},
[114321] = {
"Lord Crispin Ference",
"Return to Karazhan",
},
[225539] = {
"Kobold Ambusher",
"Kriegval's Rest",
"enUS",
},
[193291] = {
"Alardiente alfa",
"Neltharus",
"enUS",
},
[165138] = {
"Blight Bag",
"The Necrotic Wake",
"enUS",
},
[194315] = {
"Clamatormentas Solongo",
"El Ataque Nokhud",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[120720] = {
"Lunar Guard",
"Tomb of Sargeras",
"enUS",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[194316] = {
"Clamatormentas Zarii",
"El Ataque Nokhud",
},
[127119] = {
"Freehold Deckhand",
"Freehold",
"enUS",
},
[193293] = {
"Celador qalashi",
"Neltharus",
"enUS",
},
[194317] = {
"Clamatormentas Boroo",
"El Ataque Nokhud",
},
[216328] = {
"Unstable Test Subject",
"City of Threads",
"enUS",
},
[120721] = {
"Lunar Archer",
"Tomb of Sargeras",
"enUS",
},
[150297] = {
"Renormalizadora de Mecalópolis",
"Operación: Mecalópolis",
},
[216329] = {
"Congealed Droplet",
"City of Threads",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[217353] = {
"Master Machinist Dunstan",
"Hall of Awakening",
"enUS",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
},
[176404] = {
"Dark Sentinel",
"Sanctum of Domination",
},
[96664] = {
"Gravacuevas Valarjar",
"Salones del Valor",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[187154] = {
"Arcane Curator",
"The Azure Vault",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[24686] = {
"Sunblade Warlock",
"Magisters' Terrace",
"enUS",
},
[223498] = {
"Bee-let",
"Cinderbrew Meadery",
"enUS",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
},
[171799] = {
"Celador de las profundidades",
"Profundidades Sanguíneas",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[186644] = {
"Leymor",
"The Azure Vault",
},
[216333] = {
"Bloodstained Assistant",
"Ara-Kara, City of Echoes",
"enUS",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
},
[192787] = {
"Rompespaldas qalashi",
"Neltharus",
"enUS",
},
[86684] = {
"Azotador feroz",
"El Sempibrote",
},
[83613] = {
"Koramar",
"Muelles de hierro",
},
[100249] = {
"Channeler Varisz",
"Eye of Azshara",
"enUS",
},
[192788] = {
"Taumaturga qalashi",
"Neltharus",
"enUS",
},
[217870] = {
"Devouring Shade",
"Skittering Breach",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[192789] = {
"Arco largo nokhud",
"El Ataque Nokhud",
},
[26734] = {
"Azure Enforcer",
"The Nexus",
"enUS",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[145185] = {
"Gnomercy 4.U.",
"Operation: Mechagon",
},
[187159] = {
"Cría estridente",
"La Bóveda Azur",
},
[216336] = {
"Ravenous Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[100250] = {
"Binder Ashioi",
"Eye of Azshara",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
},
[214801] = {
"Skipper",
"Nerub-ar Palace",
"enUS",
},
[198933] = {
"Iridikron",
"Dawn of the Infinite",
"enUS",
},
[187160] = {
"Furia de cristal",
"La Bóveda Azur",
},
[216337] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
},
[19632] = {
"Lykul Stinger",
"Coilfang: The Underbog",
"enUS",
},
[215826] = {
"Bloodworker",
"Ara-Kara, City of Echoes",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[171805] = {
"Escriba investigadora",
"Profundidades Sanguíneas",
},
[61139] = {
"Shan-xi Watershaper",
"Mogu'shan Vaults",
"enUS",
},
[65362] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[114584] = {
"Equipo fantasma",
"Regreso a Karazhan",
},
[24687] = {
"Sunblade Physician",
"Magisters' Terrace",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
},
[198424] = {
"Scultrice di Ghiaccio Primalista",
"Segrete delle Incarnazioni",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
"enUS",
},
[207638] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[75426] = {
"Bloodmaul Overseer",
"Bloodmaul Slag Mines",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[207639] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[114329] = {
"Luminore",
"Return to Karazhan",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
"enUS",
},
[216342] = {
"Skittering Assistant",
"City of Threads",
"enUS",
},
[163619] = {
"Zolramus Bonecarver",
"The Necrotic Wake",
"enUS",
},
[192796] = {
"Soplacuernos nokhud",
"El Ataque Nokhud",
},
[97182] = {
"Night Watch Mariner",
"Maw of Souls",
},
[114330] = {
"Babblet",
"Return to Karazhan",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
"enUS",
},
[176929] = {
"Remnant of Kel'Thuzad",
"Sanctum of Domination",
},
[82594] = {
"Estibador de Riel siniestro",
"Depósito Riel siniestro",
},
[120473] = {
"Tidescale Combatant",
"Tomb of Sargeras",
"enUS",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
"enUS",
},
[163622] = {
"Goregrind Bits",
"The Necrotic Wake",
"enUS",
},
[19505] = {
"Sunseeker Channeler",
"Tempest Keep: The Botanica",
"enUS",
},
[197406] = {
"Libélula escurridiza exasperada",
"Academia Algeth'ar",
},
[19633] = {
"Bloodwarder Mender",
"Tempest Keep: The Botanica",
"enUS",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
"enUS",
},
[208668] = {
"Elisande",
"10.2. Nighthold",
"enUS",
},
[192800] = {
"Maestra de lanzas nokhud",
"El Ataque Nokhud",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
},
[186658] = {
"Geomante grutacanto",
"Uldaman: Legado de Tyr",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[24688] = {
"Wretched Skulker",
"Magisters' Terrace",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[80805] = {
"Makogg Hoja de brasal",
"Muelles de hierro",
},
[77734] = {
"Teron'gor",
"Auchindoun",
},
[192803] = {
"Ohuna de guerra",
"El Ataque Nokhud",
},
[82597] = {
"Capitana Grom'kar",
"Depósito Riel siniestro",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
"enUS",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
},
[195876] = {
"Ohuna profanada",
"El Ataque Nokhud",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[26800] = {
"Alliance Berserker",
"The Nexus",
"enUS",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
},
[26928] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[195877] = {
"Mística resucitada",
"El Ataque Nokhud",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
},
[59479] = {
"Yan-Zhu the Uncasked",
"Stormstout Brewery",
"enUS",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[181546] = {
"Prototype of Renewal",
"Sepulcher of the First Ones",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[60375] = {
"Zandalari Skullcharger",
"Mogu'shan Vaults",
"enUS",
},
[131383] = {
"Sporecaller Zancha",
"The Underrot",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[184107] = {
"Protector rúnico",
"Uldaman: Legado de Tyr",
},
[221986] = {
"Blood Horror",
"Nerub-ar Palace",
"enUS",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
"enUS",
},
[217380] = {
"Master Machinist Dunstan",
"Hall of Awakening",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[181549] = {
"Prototype of War",
"Sepulcher of the First Ones",
},
[163122] = {
"Brittlebone Warrior",
"The Necrotic Wake",
"enUS",
},
[17395] = {
"Shadowmoon Summoner",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[173360] = {
"Escupeplagas",
"Plaga Abrumadora",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[212775] = {
"Vidente ignoto",
"Trono de las Mareas",
"enUS",
},
[105636] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[114338] = {
"Confluencia de maná",
"Regreso a Karazhan",
},
[40925] = {
"Avizor corrupto",
"Trono de las Mareas",
"enUS",
},
[26737] = {
"Crazed Mana-Surge",
"The Nexus",
"enUS",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[117154] = {
"Razorjaw Acolyte",
"Tomb of Sargeras",
"enUS",
},
[42333] = {
"High Priestess Azil",
"The Stonecore",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
"enUS",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[102566] = {
"Grimhorn the Enslaver",
"Vault of the Wardens",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[39390] = {
"Twilight Drake",
"Grim Batol",
"enUS",
},
[120482] = {
"Tidescale Seacaller",
"Tomb of Sargeras",
"enUS",
},
[212779] = {
"Umbraclaw",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[168246] = {
"Reanimated Crossbowman",
"The Necrotic Wake",
"enUS",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
"enUS",
},
[176949] = {
"Mawsworn Embermage",
"Sanctum of Domination",
},
[45917] = {
"Príncipe de las Nubes",
"La Cumbre del Vórtice",
},
[212781] = {
"Dreamtalon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[189235] = {
"Sobrestante Lahar",
"Neltharus",
"enUS",
},
[212681] = {
"Tarasca sañosa",
"Trono de las Mareas",
"enUS",
},
[84554] = {
"Venom-Crazed Pale One",
"The Everbloom",
},
[216365] = {
"Winged Carrier",
"Ara-Kara, City of Echoes",
"enUS",
},
[29216] = {
"Anub'ar Guardian",
"Azjol-Nerub",
"enUS",
},
[29128] = {
"Anub'ar Prime Guard",
"Azjol-Nerub",
"enUS",
},
[213806] = {
"Entidad desconocida",
"Trono de las Mareas",
"enUS",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[168942] = {
"Portavoz de la muerte",
"El Otro Lado",
},
[67919] = {
"Bilgewater Field Medic",
"Lion's Landing",
"enUS",
},
[29098] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[99188] = {
"Waterlogged Soul Guard",
"Maw of Souls",
},
[163503] = {
"Éter del abismo",
"Torres de Ascensión",
},
[61341] = {
"Mounted Mogu",
"Mogu'shan Vaults",
"enUS",
},
[201522] = {
"Summitshaper Lorac",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[29153] = {
"Animated Bones",
"Azjol-Nerub",
"enUS",
},
[200836] = {
"Obsidian Guard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23953] = {
"Prince Keleseth",
"Utgarde Keep",
"enUS",
},
[29096] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[102295] = {
"Emberhusk Dominator",
"Neltharion's Lair",
},
[18420] = {
"Sunseeker Geomancer",
"Tempest Keep: The Botanica",
"enUS",
},
[29097] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[26802] = {
"Alliance Ranger",
"The Nexus",
"enUS",
},
[215111] = {
"Fungarian Sporeling",
"Fungal Folly",
"enUS",
},
[26930] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[23961] = {
"Dragonflayer Ironhelm",
"Utgarde Keep",
"enUS",
},
[29713] = {
"Slad'ran Constrictor",
"Gundrak",
"enUS",
},
[39987] = {
"Evolved Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[28684] = {
"Krik'thir the Gatewatcher",
"Azjol-Nerub",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[185656] = {
"Clamaescorias",
"Hondonada Frondacuero",
"enUS",
},
[28965] = {
"Titanium Thunderer",
"Halls of Lightning",
"enUS",
},
[220401] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[187192] = {
"Garrafuria",
"Hondonada Frondacuero",
"enUS",
},
[155226] = {
"Verdant Keeper",
"Torghast, Tower of the Damned",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[19508] = {
"Sunseeker Herbalist",
"Tempest Keep: The Botanica",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[190776] = {
"Arcane Commander",
"10.0 Dragon Isles",
},
[28579] = {
"Hardened Steel Berserker",
"Halls of Lightning",
"enUS",
},
[91808] = {
"Serpentrix",
"Eye of Azshara",
"enUS",
},
[17826] = {
"Swamplord Musel'ek",
"Coilfang: The Underbog",
"enUS",
},
[24083] = {
"Enslaved Proto-Drake",
"Utgarde Keep",
"enUS",
},
[17871] = {
"Underbog Shambler",
"Coilfang: The Underbog",
"enUS",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[80816] = {
"Ahri'ok Dugru",
"Muelles de hierro",
},
[56924] = {
"Inflamed Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[24080] = {
"Dragonflayer Weaponsmith",
"Utgarde Keep",
"enUS",
},
[17371] = {
"Shadowmoon Warlock",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[224221] = {
"Twilight Overseer",
"Grim Batol",
"enUS",
},
[17624] = {
"Laughing Skull Warden",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[185147] = {
"Stormcaller",
"10.0 Dragon Isles",
},
[56862] = {
"Drunken Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[54688] = {
"Time-Twisted Nightsaber",
"End Time",
"enUS",
},
[24084] = {
"Tunneling Ghoul",
"Utgarde Keep",
"enUS",
},
[28584] = {
"Unbound Firestorm",
"Halls of Lightning",
"enUS",
},
[45919] = {
"Dragón de tormenta joven",
"La Cumbre del Vórtice",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17397] = {
"Shadowmoon Adept",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[76466] = {
"Psyfiend",
"Auchindoun",
},
[97197] = {
"Purificador Valarjar",
"Salones del Valor",
},
[190779] = {
"Arcane Golem",
"10.0 Dragon Isles",
},
[59100] = {
"Expired Test Subject",
"Scholomance",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[131402] = {
"Underrot Tick",
"The Underrot",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[29874] = {
"Drakkari Inciter",
"Gundrak",
"enUS",
},
[107435] = {
"Noble sospechoso",
"Corte de Estrellas",
},
[190780] = {
"Arcane Elemental",
"10.0 Dragon Isles",
},
[19598] = {
"Mutate Fleshlasher",
"Tempest Keep: The Botanica",
"enUS",
},
[40084] = {
"Bellows Slave",
"Blackrock Caverns",
"enUS",
},
[17420] = {
"Shattered Hand Heathen",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[59220] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[226100] = {
"Kaheti Skirmisher",
"Nerub-ar Palace",
"enUS",
},
[18344] = {
"Nexus-Prince Shaffar",
"Auchindoun: Mana-Tombs",
"enUS",
},
[211063] = {
"Fungal Podling",
"Mycomancer Cavern",
"enUS",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[220139] = {
"Slithering Spew",
"Nerub-ar Palace",
"enUS",
},
[224731] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[18421] = {
"Sunseeker Researcher",
"Tempest Keep: The Botanica",
"enUS",
},
[211228] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[167117] = {
"Spinemaw Larva",
"Mists of Tirna Scithe",
"enUS",
},
[19507] = {
"Sunseeker Gene-Splicer",
"Tempest Keep: The Botanica",
"enUS",
},
[214840] = {
"Engorged Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[18315] = {
"Ethereal Theurgist",
"Auchindoun: Mana-Tombs",
"enUS",
},
[79720] = {
"Explotador Grom'kar",
"Depósito Riel siniestro",
},
[24560] = {
"Priestess Delrissa",
"Magisters' Terrace",
"enUS",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[165189] = {
"Чук",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[128652] = {
"Viq'Goth",
"Siege of Boralus",
"enUS",
},
[227532] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[216634] = {
"Swooping Spreader",
"Earthcrawl Mines",
"enUS",
},
[118698] = {
"Entidad desconocida",
"Falla Cicatriz Aterradora - Plataforma de gesta de brujo",
},
[19509] = {
"Sunseeker Harvester",
"Tempest Keep: The Botanica",
"enUS",
},
[115115] = {
"Coldmist Stalker",
"Return to Karazhan",
},
[206140] = {
"Tiempo fusionado",
"El Alba del Infinito",
"enUS",
},
[24559] = {
"Warlord Salaris",
"Magisters' Terrace",
"enUS",
},
[59303] = {
"Houndmaster Braun",
"Scarlet Halls",
"enUS",
},
[141939] = {
"Ashvane Spotter",
"Siege of Boralus",
"enUS",
},
[171333] = {
"Devota Atal'ai",
"El Otro Lado",
},
[60381] = {
"Zandalari Infiltrator",
"Mogu'shan Vaults",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[61701] = {
"Sik'thik Warrior",
"Siege of Niuzao Temple",
"enUS",
},
[128651] = {
"Hadal Darkfathom",
"Siege of Boralus",
"enUS",
},
[97200] = {
"Seacursed Soulkeeper",
"Maw of Souls",
},
[196576] = {
"Cetro encantado",
"Academia Algeth'ar",
},
[16593] = {
"Shattered Hand Brawler",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[17693] = {
"Shattered Hand Scout",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[184131] = {
"Guardián terráneo",
"Uldaman: Legado de Tyr",
"enUS",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[17429] = {
"Fel Orc Neophyte",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[226617] = {
"Snake",
"Tak-Rethan Abyss",
"enUS",
},
[19307] = {
"Nexus Terror",
"Auchindoun: Mana-Tombs",
"enUS",
},
[211261] = {
"Ascendant Vis'coxria",
"The Dawnbreaker",
"enUS",
},
[168934] = {
"Espíritu enfurecido",
"El Otro Lado",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[184132] = {
"Depositario terráneo",
"Uldaman: Legado de Tyr",
},
[121003] = {
"Rez the Tombwatcher",
"Tomb of Sargeras",
"enUS",
},
[58590] = {
"Scarlet Zealot",
"Scarlet Monastery",
"enUS",
},
[24690] = {
"Wretched Husk",
"Magisters' Terrace",
"enUS",
},
[89011] = {
"Rylak Skyterror",
"Iron Docks",
},
[211262] = {
"Ixkreten the Unbreakable",
"The Dawnbreaker",
"enUS",
},
[138254] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[164427] = {
"Reanimated Warrior",
"The Necrotic Wake",
"enUS",
},
[17398] = {
"Nascent Fel Orc",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[17462] = {
"Shattered Hand Zealot",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[223372] = {
"Prime Slime",
"Nerub-ar Palace",
"enUS",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[211263] = {
"Deathscreamer Iken'tak",
"The Dawnbreaker",
"enUS",
},
[16807] = {
"Grand Warlock Nethekurse",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[164517] = {
"Tred'ova",
"Mists of Tirna Scithe",
"enUS",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[121004] = {
"Razorjaw Myrmidon",
"Tomb of Sargeras",
"enUS",
},
[70544] = {
"Hekima el Sabio",
"Sangre en la Nieve",
},
[226620] = {
"Rat",
"Earthcrawl Mines",
"enUS",
},
[97202] = {
"Olmyr el Iluminado",
"Salones del Valor",
},
[56927] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[24684] = {
"Sunblade Blood Knight",
"Magisters' Terrace",
"enUS",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[18422] = {
"Sunseeker Botanist",
"Tempest Keep: The Botanica",
"enUS",
},
[172312] = {
"Spinemaw Gorger",
"Mists of Tirna Scithe",
"enUS",
},
[216649] = {
"Vx",
"City of Threads",
"enUS",
},
[221945] = {
"Forgotten Harbinger",
"Nerub-ar Palace",
"enUS",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[19865] = {
"Mutate Horror",
"Tempest Keep: The Botanica",
"enUS",
},
[211777] = {
"Spitfire Fusetender",
"Kriegval's Rest",
"enUS",
},
[45922] = {
"Asesino empíreo",
"La Cumbre del Vórtice",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[129640] = {
"Snarling Dockhound",
"Siege of Boralus",
"enUS",
},
[224276] = {
"Twilight Enforcer",
"Grim Batol",
"enUS",
},
[165197] = {
"Skeletal Monstrosity",
"The Necrotic Wake",
"enUS",
},
[129527] = {
"Bucanero rata de sentina",
"Puerto Libre",
},
[186696] = {
"Entidad desconocida",
"Uldaman: Legado de Tyr",
},
[24685] = {
"Sunblade Magister",
"Magisters' Terrace",
"enUS",
},
[136483] = {
"Ashvane Deckhand",
"Siege of Boralus",
"enUS",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[59487] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[216326] = {
"Ascended Neophyte",
"City of Threads",
"enUS",
},
[214338] = {
"Kobyss Spearfisher",
"Tak-Rethan Abyss",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
"enUS",
},
[17491] = {
"Laughing Skull Rogue",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[195399] = {
"Croacito curioso",
"Salas de Infusión",
},
[43875] = {
"Asaad",
"The Vortex Pinnacle",
"enUS",
},
[19958] = {
"White Seedling",
"Tempest Keep: The Botanica",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[193352] = {
"Entidad desconocida",
"Hondonada Frondacuero",
},
[223541] = {
"Stolen Loader",
"Fungal Folly",
"enUS",
},
[214251] = {
"Kobyss Witherer",
"Tak-Rethan Abyss",
"enUS",
},
[220741] = {
"Slamming Tentacle",
"The Sinkhole",
"enUS",
},
[18404] = {
"Bloodwarder Steward",
"Tempest Keep: The Botanica",
"enUS",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[225601] = {
"Mereldar Citizen",
"The Dawnbreaker",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[226625] = {
"Cave Skipper",
"Fungal Folly",
"enUS",
},
[59552] = {
"El Hozen Llorica",
"Templo del Dragón de Jade",
},
[217299] = {
"Ostiary Wystan",
"Hall of Awakening",
"enUS",
},
[75194] = {
"Gnasher",
"Bloodmaul Slag Mines",
},
[208198] = {
"Whiiskeyz",
"Scarlet Monastery",
},
[184140] = {
"Acólito de Xy",
"Sepulcro de los Primeros",
},
[100532] = {
"Entidad desconocida",
"Matorral Corazón Oscuro",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[228015] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[218671] = {
"Venture Co. Pyromaniac",
"Cinderbrew Meadery",
"enUS",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[168418] = {
"Inquisidora Rechazada",
"Torres de Ascensión",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[17399] = {
"Seductress",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[24815] = {
"Sunblade Imp",
"Magisters' Terrace",
"enUS",
},
[213830] = {
"Candleclaw Kobold",
"New Candle, New Hope",
"enUS",
},
[220946] = {
"Venture Co. Honey Harvester",
"Cinderbrew Meadery",
"enUS",
},
[210759] = {
"Brann Bronzebeard",
"The Waterworks",
"enUS",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[156501] = {
"Ravnyr",
"Darkmaul Citadel",
"enUS",
},
[220485] = {
"Peculiar Nerubian",
"The Spiral Weave",
"enUS",
},
[60384] = {
"Zandalari Pterror Wing",
"Mogu'shan Vaults",
"enUS",
},
[17975] = {
"High Botanist Freywinn",
"Tempest Keep: The Botanica",
"enUS",
},
[213831] = {
"Candleclaw Underboss",
"New Candle, New Hope",
"enUS",
},
[214343] = {
"Kobyss Trickster",
"Tak-Rethan Abyss",
"enUS",
},
[59705] = {
"Scarlet Flamethrower",
"Scarlet Monastery",
"enUS",
},
[207177] = {
"Guardián vigía infinito",
"El Alba del Infinito",
"enUS",
},
[203594] = {
"Lumbering Boulder",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[192333] = {
"Águila alfa",
"Academia Algeth'ar",
},
[225605] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[26805] = {
"Alliance Cleric",
"The Nexus",
"enUS",
},
[218439] = {
"Sureki War Banner",
"Nerub-ar Palace",
"enUS",
},
[186191] = {
"Portavoz de descomposición",
"Hondonada Frondacuero",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[75452] = {
"Bonemaw",
"Shadowmoon Burial Grounds",
},
[192334] = {
"Graath",
"10.0 Dragon Isles",
},
[225606] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[185168] = {
"Brute",
"10.0 Dragon Isles",
},
[185680] = {
"Reliquia Vy",
"Plaga Abrumadora",
},
[228954] = {
"Nerubian Marauder",
"The Spiral Weave",
"enUS",
},
[194894] = {
"Hablatormentas primalista",
"El Ataque Nokhud",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
"enUS",
},
[216339] = {
"Sureki Unnaturaler",
"City of Threads",
"enUS",
},
[102253] = {
"Understone Demolisher",
"Neltharion's Lair",
"enUS",
},
[19511] = {
"Nethervine Inciter",
"Tempest Keep: The Botanica",
"enUS",
},
[213834] = {
"Candleclaw Mole",
"New Candle, New Hope",
"enUS",
},
[136541] = {
"Bile Oozeling",
"Waycrest Manor",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
},
[219856] = {
"Researcher Ven'kex",
"The Underkeep",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"Kriegval's Rest",
"enUS",
},
[225479] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[40166] = {
"Molten Giant",
"Grim Batol",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
},
[17356] = {
"Creeping Ooze",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[194896] = {
"Escudo de tormenta primigenio",
"El Ataque Nokhud",
},
[191313] = {
"Volatile Sapling",
"The Azure Vault",
},
[216555] = {
"Heelripper",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[102583] = {
"Fel Scorcher",
"Vault of the Wardens",
"enUS",
},
[189266] = {
"Novato qalashi",
"Neltharus",
"enUS",
},
[214348] = {
"Undersea Abomination",
"Tak-Rethan Abyss",
"enUS",
},
[223562] = {
"Brew Drop",
"Cinderbrew Meadery",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
},
[75198] = {
"Bloodmaul Geomancer",
"Bloodmaul Slag Mines",
},
[167731] = {
"Separation Assistant",
"The Necrotic Wake",
"enUS",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[190426] = {
"Tótem de descomposición",
"Hondonada Frondacuero",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[62945] = {
"Bloodthirsty Prowler",
"Greenstone Village",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
},
[229706] = {
"Explosive Bomberbot",
"Awakening The Machine",
"enUS",
},
[61699] = {
"Sik'thik Amberwing",
"Siege of Niuzao Temple",
"enUS",
},
[17400] = {
"Felguard Annihilator",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[17464] = {
"Shattered Hand Gladiator",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[96657] = {
"Blade Dancer Illianna",
"Vault of the Wardens",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[172858] = {
"Stone Legion Goliath",
"Castle Nathria",
},
[102584] = {
"Malignant Defiler",
"Vault of the Wardens",
"enUS",
},
[83389] = {
"Escupefuego Alahierro",
"Muelles de hierro",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[192340] = {
"Apprentice",
"10.0 Dragon Isles",
},
[17976] = {
"Commander Sarannis",
"Tempest Keep: The Botanica",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
"enUS",
},
[213008] = {
"Wriggling Darkspawn",
"Darkflame Cleft",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[83761] = {
"Trabajador ogron",
"Muelles de hierro",
},
[223994] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[115767] = {
"Mistress Sassz'ine",
"Tomb of Sargeras",
"enUS",
},
[218447] = {
"Web Cocoon",
"Nerub-ar Palace",
"enUS",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[219983] = {
"Eye of the Queen",
"City of Threads",
"enUS",
},
[45926] = {
"Sirviente de Asaad",
"La Cumbre del Vórtice",
},
[210153] = {
"Ol' Waxbeard",
"Darkflame Cleft",
"enUS",
},
[42695] = {
"Stonecore Sentry",
"The Stonecore",
"enUS",
},
[219148] = {
"Skardyn Metamorphosis",
"Hall of Awakening",
"enUS",
},
[228538] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[187224] = {
"Vil Maleputre",
"Hondonada Frondacuero",
"enUS",
},
[198997] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[219984] = {
"Xeph'itik",
"City of Threads",
"enUS",
},
[178139] = {
"Rompevalvas salsombría",
"Tazavesh, el Mercado Velado",
},
[229695] = {
"Corrupted Machinist",
"Awakening The Machine",
"enUS",
},
[19512] = {
"Nethervine Reaper",
"Tempest Keep: The Botanica",
"enUS",
},
[164702] = {
"Carrion Worm",
"The Necrotic Wake",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[218961] = {
"Starved Crawler",
"Ara-Kara, City of Echoes",
"enUS",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[133990] = {
"Scrimshaw Gutter",
"Siege of Boralus",
"enUS",
},
[195927] = {
"Cosechadora de almas Galtmaa",
"El Ataque Nokhud",
},
[75713] = {
"Arreglahuesos de Sombraluna",
"Cementerios de Sombraluna",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[228539] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[47238] = {
"Whipping Wind",
"The Vortex Pinnacle",
},
[218962] = {
"Bloated Pest",
"The Underkeep",
"enUS",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[61155] = {
"Wily Woodling",
"Pandaria",
"enUS",
},
[195928] = {
"Cosechador de almas Duuren",
"El Ataque Nokhud",
},
[40936] = {
"Vigía ignoto",
"Trono de las Mareas",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
"enUS",
},
[118518] = {
"Priestess Lunaspyre",
"Tomb of Sargeras",
"enUS",
},
[185691] = {
"Hiena sañosa",
"Hondonada Frondacuero",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[83392] = {
"Uñagrieta furioso",
"Muelles de hierro",
},
[195929] = {
"Cosechadora de almas Tumen",
"El Ataque Nokhud",
},
[220730] = {
"Royal Venomshell",
"City of Threads",
"enUS",
},
[92350] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
},
[189470] = {
"Bengala de lava",
"Neltharus",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[131812] = {
"Encantaalmas de Hiel de corazón",
"Mansión Tarjasenda",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[195930] = {
"Cosechador de almas Mandakh",
"El Ataque Nokhud",
},
[17401] = {
"Felhound Manastalker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[17465] = {
"Shattered Hand Centurion",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[185181] = {
"Automated Eliminator",
"Sepulcher of the First Ones",
},
[174210] = {
"Escupidor de lodo contagiado",
"Teatro del Dolor",
},
[218440] = {
"Kaheti War Banner",
"Nerub-ar Palace",
"enUS",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[208728] = {
"Treasure Wraith",
"Kriegval's Rest",
"enUS",
},
[75459] = {
"Murciélago apestado",
"Cementerios de Sombraluna",
},
[75715] = {
"Reanimated Ritual Bones",
"Shadowmoon Burial Grounds",
},
[17977] = {
"Warp Splinter",
"Tempest Keep: The Botanica",
"enUS",
},
[164707] = {
"Babosa coagulada",
"Plaga Abrumadora",
},
[210264] = {
"Bee Wrangler",
"Cinderbrew Meadery",
"enUS",
},
[186206] = {
"Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[44648] = {
"Unyielding Behemoth",
"Throne of the Tides",
"enUS",
},
[61156] = {
"Vengeful Hui",
"Greenstone Village",
"enUS",
},
[208457] = {
"Skittering Darkness",
"Darkflame Cleft",
"enUS",
},
[208729] = {
"Astromancer's Guard",
"10.2. Nighthold",
"enUS",
},
[131436] = {
"Matrona de sangre electa",
"Bardoma",
},
[222038] = {
"Shrillwing Hunter En'kilah",
"Nerub-ar Palace",
"enUS",
},
[210265] = {
"Worker Bee",
"Cinderbrew Meadery",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[45672] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[116410] = {
"Karam Lanzarcana",
"Falla Cicatriz Aterradora - Plataforma de gesta de brujo",
},
[214550] = {
"Deepwater Snapper",
"Tak-Rethan Abyss",
"enUS",
},
[164705] = {
"Babosa pestilente",
"Plaga Abrumadora",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[68294] = {
"S.H.A.R.K. Sapper",
"Lion's Landing",
"enUS",
},
[186208] = {
"Acechador putrefaarco",
"Hondonada Frondacuero",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[191243] = {
"Azotador salvaje",
"Hondonada Frondacuero",
},
[81603] = {
"Campeona Druna",
"Muelles de hierro",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[19513] = {
"Mutate Fear-Shrieker",
"Tempest Keep: The Botanica",
"enUS",
},
[223775] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[206172] = {
"Nymue",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[129208] = {
"Dread Captain Lockwood",
"Siege of Boralus",
"enUS",
},
[164562] = {
"Maestra de canes depravada",
"Salones de Expiación",
},
[219912] = {
"Crawler",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[223181] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[115388] = {
"Rey",
"Regreso a Karazhan",
},
[118715] = {
"Reanimated Templar",
"Tomb of Sargeras",
"enUS",
},
[217435] = {
"Master Machinist Dunstan",
"Hall of Awakening",
"enUS",
},
[24696] = {
"Coilskar Witch",
"Magisters' Terrace",
"enUS",
},
[210269] = {
"Hired Muscle",
"Cinderbrew Meadery",
"enUS",
},
[204127] = {
"Kobold Taskfinder",
"Kriegval's Rest",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[197985] = {
"Canalizador de llamas",
"Estanques de Vida Rubí",
},
[220507] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[208734] = {
"Senior Researcher Alydrus",
"10.2. Nighthold",
"enUS",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
"enUS",
},
[92610] = {
"Tamborilero Infrapiedra",
"Guarida de Neltharion",
},
[210270] = {
"Brew Drop",
"Cinderbrew Meadery",
"enUS",
},
[133835] = {
"Enjambrista de sangre feral",
"Bardoma",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[219996] = {
"Faceless Devotee",
"Skittering Breach",
"enUS",
},
[220508] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[205152] = {
"Lerai, Doncella vetusta",
"El Alba del Infinito",
"enUS",
},
[104295] = {
"Blazing Imp",
"Court of Stars",
},
[210271] = {
"Brew Master Aldryr",
"Cinderbrew Meadery",
"enUS",
},
[216341] = {
"Jabbing Flyer",
"Ara-Kara, City of Echoes",
"enUS",
},
[213828] = {
"Candleclaw Pyromancer",
"New Candle, New Hope",
"enUS",
},
[17978] = {
"Thorngrin the Tender",
"Tempest Keep: The Botanica",
"enUS",
},
[220509] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[212831] = {
"Forge Master Damian",
"Priory of the Sacred Flame",
"enUS",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[180348] = {
"Fortachón del cártel",
"Tazavesh, el Mercado Velado",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
"enUS",
},
[83616] = {
"Zoggosh",
"Iron Docks",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
"enUS",
},
[200035] = {
"Carrion Worm",
"Shadowmoon Burial Grounds",
},
[220510] = {
"The Puppetmaster?",
"The Spiral Weave",
"enUS",
},
[45477] = {
"Soldado de ráfaga",
"La Cumbre del Vórtice",
},
[204560] = {
"Incorporeal Being",
"Freehold",
"enUS",
},
[61670] = {
"Sik'thik Demolisher",
"Siege of Niuzao Temple",
"enUS",
},
[74571] = {
"Calamity",
"Bloodmaul Slag Mines",
},
[198500] = {
"Invocatrice della Terra del Concilio",
"Segrete delle Incarnazioni",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[195847] = {
"Ukhel Willcrusher",
"The Nokhud Offensive",
},
[95939] = {
"Skrog Tidestomper",
"Eye of Azshara",
},
[216578] = {
"Swarm-Maven Donmiss",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[92612] = {
"Destructor de Petrofuerza",
"Guarida de Neltharion",
},
[180432] = {
"Cómplice devoto",
"Tazavesh, el Mercado Velado",
},
[97219] = {
"Solsten",
"Salones del Valor",
},
[113998] = {
"Destructor de Petrofuerza",
"Guarida de Neltharion",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
},
[191847] = {
"Pisallanuras nokhud",
"El Ataque Nokhud",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[164557] = {
"Esquirla de Halkias",
"Salones de Expiación",
},
[228361] = {
"Agile Pursuer",
"City of Threads",
"enUS",
},
[217672] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[198502] = {
"Invocatempeste del Concilio",
"Segrete delle Incarnazioni",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[220001] = {
"Black Blood Ooze",
"The Underkeep",
"enUS",
},
[219149] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[221537] = {
"Unstable Experiment",
"Nerub-ar Palace",
"enUS",
},
[114624] = {
"Celador arcano",
"Regreso a Karazhan",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[61159] = {
"Greenstone Terror",
"Greenstone Village",
"enUS",
},
[224609] = {
"Twilight Destroyer",
"Grim Batol",
"enUS",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
"enUS",
},
[205158] = {
"Spurlok, Centinela vetusta",
"El Alba del Infinito",
"enUS",
},
[16507] = {
"Shattered Hand Sentry",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[24761] = {
"Brightscale Wyrm",
"Magisters' Terrace",
"enUS",
},
[28920] = {
"Stormforged Giant",
"Halls of Lightning",
"enUS",
},
[16699] = {
"Shattered Hand Reaver",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[75210] = {
"Bloodmaul Warder",
"Bloodmaul Slag Mines",
},
[229729] = {
"Nullbot",
"Awakening The Machine",
"enUS",
},
[171887] = {
"Bufé limoso",
"Plaga Abrumadora",
},
[29240] = {
"Stormforged Lieutenant",
"Halls of Lightning",
"enUS",
},
[29304] = {
"Slad'ran",
"Gundrak",
"enUS",
},
[17083] = {
"Fel Orc Convert",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[186220] = {
"Moldeadora frondacuero",
"Hondonada Frondacuero",
"enUS",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[96608] = {
"Huargo Garra de ébano",
"Salones del Valor",
},
[59240] = {
"Scarlet Hall Guardian",
"Scarlet Halls",
"enUS",
},
[208743] = {
"Blazikon",
"Darkflame Cleft",
"enUS",
},
[196970] = {
"Taranthiza",
"10.0 Dragon Isles",
},
[121498] = {
"Twilight Soul",
"Tomb of Sargeras",
"enUS",
},
[222564] = {
"Rupturing Ooze",
"Nerub-ar Palace",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[17723] = {
"Bog Giant",
"Coilfang: The Underbog",
"enUS",
},
[75211] = {
"Magma Lord",
"Bloodmaul Slag Mines",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[116563] = {
"Ancient Core Hound",
"Return to Karazhan",
},
[196971] = {
"Rendvith",
"10.0 Dragon Isles",
},
[174773] = {
"Entidad desconocida",
"Teatro del Dolor",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[122963] = {
"Rezan",
"Atal'Dazar",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
},
[208745] = {
"The Candle King",
"Darkflame Cleft",
"enUS",
},
[196972] = {
"Korvelnor",
"10.0 Dragon Isles",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[61928] = {
"Sik'thik Guardian",
"Siege of Niuzao Temple",
"enUS",
},
[104274] = {
"Baalgar el Atento",
"Corte de Estrellas",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[45932] = {
"Estrella de Hundecielos",
"La Cumbre del Vórtice",
},
[104277] = {
"Can de la Legión",
"Corte de Estrellas",
},
[102404] = {
"Amo de Larvas Garrapétrea",
"Guarida de Neltharion",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208747] = {
"The Darkness",
"Darkflame Cleft",
"enUS",
},
[59241] = {
"Scarlet Treasurer",
"Scarlet Halls",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[114783] = {
"Doncella reformada",
"Regreso a Karazhan",
},
[69374] = {
"Dios de la guerra Jalak",
"Solio del Trueno",
},
[115395] = {
"Reina",
"Regreso a Karazhan",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
},
[95888] = {
"Cordana Felsong",
"Vault of the Wardens",
"enUS",
},
[224616] = {
"Animated Shadow",
"The Dawnbreaker",
"enUS",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[168310] = {
"Roc de plaga",
"Plaga Abrumadora",
},
[210797] = {
"The Darkness",
"Darkflame Cleft",
"enUS",
},
[61929] = {
"Sik'thik Amber-Weaver",
"Siege of Niuzao Temple",
"enUS",
},
[186226] = {
"Cantoputre fétida",
"Hondonada Frondacuero",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
},
[16700] = {
"Shattered Hand Legionnaire",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[96247] = {
"Vileshard Crawler",
"Neltharion's Lair",
},
[114628] = {
"Camarero esquelético",
"Regreso a Karazhan",
},
[28729] = {
"Watcher Narjil",
"Azjol-Nerub",
"enUS",
},
[24698] = {
"Ethereum Smuggler",
"Magisters' Terrace",
"enUS",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[28921] = {
"Hadronox",
"Azjol-Nerub",
"enUS",
},
[166264] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[150396] = {
"Aerial Unit R-21/X",
"Operation: Mechagon",
},
[20923] = {
"Blood Guard Porung",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[221035] = {
"Royal Scribe",
"Nerub-ar Palace",
"enUS",
},
[135552] = {
"Entidad desconocida",
"Mansión Tarjasenda",
"enUS",
},
[29305] = {
"Moorabi",
"Gundrak",
"enUS",
},
[40023] = {
"Defiled Earth Rager",
"Blackrock Caverns",
"enUS",
},
[166266] = {
"Spare Parts",
"The Necrotic Wake",
"enUS",
},
[186740] = {
"Ensamblaje arcano",
"La Bóveda Azur",
},
[186229] = {
"Roble marchito",
"Hondonada Frondacuero",
},
[208239] = {
"Skittering Menace",
"Earthcrawl Mines",
"enUS",
},
[131009] = {
"Entidad desconocida",
"Atal'Dazar",
"enUS",
},
[186741] = {
"Elemental arcano",
"La Bóveda Azur",
},
[98761] = {
"Goodoption",
"Maw of Souls",
},
[222572] = {
"Infesting Latcher",
"Nerub-ar Palace",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[17724] = {
"Underbat",
"Coilfang: The Underbog",
"enUS",
},
[137486] = {
"Queen Patlaa",
"Kings' Rest",
},
[120516] = {
"Razorjaw Swiftfin",
"Tomb of Sargeras",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[17980] = {
"Laj",
"Tempest Keep: The Botanica",
"enUS",
},
[83578] = {
"Trabajador ogron",
"Muelles de hierro",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[61345] = {
"Mogu Archer",
"Mogu'shan Vaults",
"enUS",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[40943] = {
"Mago acuático Gilgoblin",
"Trono de las Mareas",
"enUS",
},
[229739] = {
"Malfunctioning Pylon",
"Awakening The Machine",
"enUS",
},
[26746] = {
"Crazed Mana-Wraith",
"The Nexus",
"enUS",
},
[170838] = {
"Contrincante implacable",
"Teatro del Dolor",
},
[167533] = {
"Adventa Nuncamás",
"Teatro del Dolor",
},
[208242] = {
"Nerubian Darkcaster",
"Earthcrawl Mines",
"enUS",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[95947] = {
"Mak'rana Hardshell",
"Eye of Azshara",
"enUS",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[206074] = {
"Péndulo",
"El Alba del Infinito",
"enUS",
},
[213873] = {
"Waxy Globule",
"New Candle, New Hope",
"enUS",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[202612] = {
"Cliffkeeper Bouldani",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
},
[180015] = {
"Marinero de cubierta fornido",
"Tazavesh, el Mercado Velado",
},
[208243] = {
"Nerubian Slasher",
"Earthcrawl Mines",
"enUS",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
"enUS",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[198501] = {
"Invocatrice del Ghiaccio del Concilio",
"Segrete delle Incarnazioni",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[202613] = {
"Portalkeeper Cimbra",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[185534] = {
"Cazador saetaósea",
"Hondonada Frondacuero",
"enUS",
},
[208244] = {
"Nerubian Threadmancer",
"Earthcrawl Mines",
"enUS",
},
[180091] = {
"Can del Núcleo anciano",
"Tazavesh, el Mercado Velado",
},
[168318] = {
"Goliat Rechazado",
"Torres de Ascensión",
},
[210510] = {
"Flimflam the Cowardly",
"Darkflame Cleft",
"enUS",
},
[98963] = {
"Blazing Imp",
"Vault of the Wardens",
"enUS",
},
[28410] = {
"Dragonflayer Spiritualist",
"Utgarde Keep",
"enUS",
},
[167538] = {
"Dokigg el demoledor",
"Teatro del Dolor",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[208245] = {
"Skittering Swarmer",
"Earthcrawl Mines",
"enUS",
},
[114632] = {
"Auxiliar espectral",
"Regreso a Karazhan",
},
[28730] = {
"Watcher Gashra",
"Azjol-Nerub",
"enUS",
},
[29306] = {
"Gal'darah",
"Gundrak",
"enUS",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[28922] = {
"Anub'ar Crusher",
"Azjol-Nerub",
"enUS",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[162689] = {
"Surgeon Stitchflesh",
"The Necrotic Wake",
"enUS",
},
[45935] = {
"Adepto del templo",
"La Cumbre del Vórtice",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[129989] = {
"Irontide Powdershot",
"Siege of Boralus",
"enUS",
},
[164737] = {
"Emboscador de la colonia",
"Plaga Abrumadora",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[114633] = {
"Valet espectral",
"Regreso a Karazhan",
},
[126918] = {
"Irontide Crackshot",
"Freehold",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
"enUS",
},
[115401] = {
"Alfil",
"Regreso a Karazhan",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[17725] = {
"Underbog Lurker",
"Coilfang: The Underbog",
"enUS",
},
[39665] = {
"Rom'ogg Bonecrusher",
"Blackrock Caverns",
"enUS",
},
[58683] = {
"Scarlet Myrmidon",
"Scarlet Halls",
"enUS",
},
[60396] = {
"Emperor's Rage",
"Mogu'shan Vaults",
"enUS",
},
[170882] = {
"Mago de huesos",
"Teatro del Dolor",
},
[40177] = {
"Forgemaster Throngus",
"Grim Batol",
"enUS",
},
[222581] = {
"Ruptured Ooze",
"Nerub-ar Palace",
"enUS",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
"enUS",
},
[162692] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[40817] = {
"Shadow of Obsidius",
"Blackrock Caverns",
"enUS",
},
[126919] = {
"Clamatormentas mareaférrea",
"Puerto Libre",
},
[81297] = {
"Dreadfang",
"Iron Docks",
},
[165764] = {
"Rockbound Vanquisher",
"Castle Nathria",
},
[115402] = {
"Alfil",
"Regreso a Karazhan",
},
[111563] = {
"Guardia de la Guardia Umbría",
"Corte de Estrellas",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
"enUS",
},
[162693] = {
"Nalthor the Rimebinder",
"The Necrotic Wake",
"enUS",
},
[79545] = {
"Nitrogg Thundertower",
"Grimrail Depot",
},
[135052] = {
"Sapo de añublo",
"Mansión Tarjasenda",
"enUS",
},
[58605] = {
"Scarlet Judicator",
"Scarlet Monastery",
"enUS",
},
[205691] = {
"Creación de Iridikron",
"El Alba del Infinito",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[210810] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
},
[199549] = {
"Flamesworn Herald",
"Vault of the Incarnates",
},
[102094] = {
"Espadachín resucitado",
"Fuerte Torre Oscura",
"enUS",
},
[59373] = {
"Scarlet Pupil",
"Scarlet Halls",
"enUS",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[168837] = {
"Sigilaria",
"Plaga Abrumadora",
},
[54543] = {
"Time-Twisted Drake",
"End Time",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[83025] = {
"Maestro de batalla Grom'kar",
"Muelles de hierro",
},
[197697] = {
"Pirogarganta",
"Estanques de Vida Rubí",
},
[192481] = {
"Entidad desconocida",
"Hondonada Frondacuero",
"enUS",
},
[60397] = {
"Emperor's Strength",
"Mogu'shan Vaults",
"enUS",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
"enUS",
},
[213883] = {
"Dripear the Waxy",
"New Candle, New Hope",
"enUS",
},
[28731] = {
"Watcher Silthik",
"Azjol-Nerub",
"enUS",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[137614] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[102095] = {
"Lancero resucitado",
"Fuerte Torre Oscura",
"enUS",
},
[114636] = {
"Aparición de custodio",
"Regreso a Karazhan",
},
[196992] = {
"Arcane Elemental",
"10.0 Dragon Isles",
},
[168398] = {
"Bocado limoso",
"Plaga Abrumadora",
},
[137103] = {
"Blood Visage",
"The Underrot",
},
[28923] = {
"Loken",
"Halls of Lightning",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[213885] = {
"Nightfall Dark Architect",
"The Dawnbreaker",
"enUS",
},
[54553] = {
"Time-Twisted Seer",
"End Time",
"enUS",
},
[179821] = {
"Comandante Zo'far",
"Tazavesh, el Mercado Velado",
},
[42845] = {
"Rock Borer",
"The Stonecore",
"enUS",
},
[183173] = {
"Guardanegra jurafauces",
"Las Tierras de las Sombras",
},
[29307] = {
"Drakkari Colossus",
"Gundrak",
"enUS",
},
[76595] = {
"Sargerei Soulpriest",
"Auchindoun",
},
[165251] = {
"Illusionary Vulpin",
"Mists of Tirna Scithe",
"enUS",
},
[29819] = {
"Drakkari Lancer",
"Gundrak",
"enUS",
},
[87252] = {
"Ogron rebelde",
"Muelles de hierro",
},
[190340] = {
"Defensora refti",
"Salas de Infusión",
},
[17726] = {
"Wrathfin Myrmidon",
"Coilfang: The Underbog",
"enUS",
},
[220029] = {
"Gearsweep",
"Hall of Awakening",
"enUS",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[60398] = {
"Emperor's Courage",
"Mogu'shan Vaults",
"enUS",
},
[127106] = {
"Oficial mareaférrea",
"Puerto Libre",
},
[186246] = {
"Buitre desgarrador",
"Hondonada Frondacuero",
"enUS",
},
[44658] = {
"Deep Murloc Invader",
"Throne of the Tides",
"enUS",
},
[219006] = {
"Venommaster Nezarox",
"Nerub-ar Palace",
"enUS",
},
[223613] = {
"Weave Drone",
"The Spiral Weave",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
},
[220542] = {
"Enraged Kelp",
"The Waterworks",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[189318] = {
"Oso infectado",
"Hondonada Frondacuero",
"enUS",
},
[115406] = {
"Caballo",
"Regreso a Karazhan",
},
[190342] = {
"Aparato de contención",
"Salas de Infusión",
},
[223614] = {
"Kobold Thief",
"Fungal Folly",
"enUS",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
},
[59884] = {
"Fallen Crusader",
"Scarlet Monastery",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
},
[54512] = {
"Time-Twisted Sentinel",
"End Time",
"enUS",
},
[101074] = {
"Vástago de engendro de odio ",
"Matorral Corazón Oscuro",
"enUS",
},
[210818] = {
"Lowly Moleherd",
"Darkflame Cleft",
"enUS",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[120188] = {
"Wailing Soul",
"Tomb of Sargeras",
"enUS",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[115407] = {
"Torre",
"Regreso a Karazhan",
},
[45915] = {
"Mistral acorazado",
"La Cumbre del Vórtice",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[60143] = {
"Gara'jal the Spiritbinder",
"Mogu'shan Vaults",
"enUS",
},
[131850] = {
"Superviviente enajenado",
"Mansión Tarjasenda",
"enUS",
},
[60399] = {
"Qin-xi",
"Mogu'shan Vaults",
"enUS",
},
[121011] = {
"Tidescale Witch",
"Tomb of Sargeras",
"enUS",
},
[190345] = {
"Geomante primalista",
"Salas de Infusión",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
},
[129996] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[215427] = {
"Waxen Copy",
"New Candle, New Hope",
"enUS",
},
[17990] = {
"Underbog Mushroom",
"Coilfang: The Underbog",
"enUS",
},
[166262] = {
"Decaying Corpse",
"Darkmaul Citadel",
"enUS",
},
[104246] = {
"Guardia de la Guardia Umbría",
"Corte de Estrellas",
},
[28732] = {
"Anub'ar Warrior",
"Azjol-Nerub",
"enUS",
},
[213892] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[206214] = {
"Infiltrado Infinito",
"El Alba del Infinito",
"enUS",
},
[28924] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[17734] = {
"Underbog Lord",
"Coilfang: The Underbog",
"enUS",
},
[17670] = {
"Shattered Hand Houndmaster",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[52019] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[68508] = {
"Bloodhilt Earth-Singer",
"Lion's Landing",
"enUS",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[79507] = {
"Felguard",
"Auchindoun",
},
[82590] = {
"Exploradora de Riel siniestro",
"Depósito Riel siniestro",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
"enUS",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
"enUS",
},
[79511] = {
"Blazing Trickster",
"Auchindoun",
},
[29820] = {
"Drakkari God Hunter",
"Gundrak",
"enUS",
},
[213894] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
},
[137625] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[205759] = {
"Whirling Torrent",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[44566] = {
"Ozumat",
"Throne of the Tides",
"enUS",
},
[116689] = {
"Atrigan",
"Tomb of Sargeras",
"enUS",
},
[104217] = {
"Talixae Flamewreath",
"Court of Stars",
},
[213895] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[44404] = {
"Bruja de escarcha Naz'jar",
"Trono de las Mareas",
"enUS",
},
[77905] = {
"Felborne Abyssal",
"Auchindoun",
},
[137626] = {
"Demolishing Terror",
"Siege of Boralus",
"enUS",
},
[209800] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[119742] = {
"Felguard Invader",
"Tomb of Sargeras",
"enUS",
},
[18431] = {
"Ethereal Beacon",
"Auchindoun: Mana-Tombs",
"enUS",
},
[120201] = {
"Spectral Guardian",
"Tomb of Sargeras",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[213576] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[214920] = {
"Tasting Room Attendant",
"Cinderbrew Meadery",
"enUS",
},
[137627] = {
"Constricting Terror",
"Siege of Boralus",
"enUS",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[220551] = {
"Sureki Ironweaver",
"Nerub-ar Palace",
"enUS",
},
[176581] = {
"Spiked Ball",
"Sanctum of Domination",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[91789] = {
"Lady Hatecoil",
"Eye of Azshara",
"enUS",
},
[171376] = {
"Custodio en jefe Javlin",
"Profundidades Sanguíneas",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[130024] = {
"Soggy Shiprat",
"Freehold",
},
[135049] = {
"Cuervo alatemible",
"Mansión Tarjasenda",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[126928] = {
"Corsario mareaférrea",
"Puerto Libre",
},
[3977] = {
"High Inquisitor Whitemane",
"Scarlet Monastery",
"enUS",
},
[116407] = {
"Harjatan",
"Tomb of Sargeras",
"enUS",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[211339] = {
"Dream Seedling",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[77483] = {
"Artillero Grom'kar",
"Depósito Riel siniestro",
},
[68640] = {
"Bloodhilt Lightsworn",
"Lion's Landing",
"enUS",
},
[116691] = {
"Belac",
"Tomb of Sargeras",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[104918] = {
"Vigilant Duskwatch",
"Court of Stars",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[60913] = {
"Energy Charge",
"Mogu'shan Vaults",
"enUS",
},
[215435] = {
"Foreseer Xix'amon",
"Nerub-ar Palace",
"enUS",
},
[118728] = {
"Ghastly Bonewarden",
"Tomb of Sargeras",
"enUS",
},
[152009] = {
"Robot chatarra descompuesto",
"Operación: Mecalópolis",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
"enUS",
},
[28733] = {
"Anub'ar Shadowcaster",
"Azjol-Nerub",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[154011] = {
"Armed Prisoner",
"Torghast, Tower of the Damned",
},
[16704] = {
"Shattered Hand Sharpshooter",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[84978] = {
"Bloodmaul Enforcer",
"Bloodmaul Slag Mines",
},
[29117] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[59372] = {
"Scarlet Scholar",
"Scarlet Halls",
"enUS",
},
[229769] = {
"Medbot",
"Awakening The Machine",
"enUS",
},
[177889] = {
"Juzgaalmas fauceforjada",
"Sagrario de Dominación",
},
[205799] = {
"Cinderstep Melter",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[174842] = {
"Belligerent Waiter",
"Castle Nathria",
},
[102104] = {
"Enslaved Shieldmaiden",
"Maw of Souls",
},
[176535] = {
"Infused Goliath",
"Sanctum of Domination",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[178171] = {
"Guardián tronaforjado",
"Tazavesh, el Mercado Velado",
},
[99033] = {
"Helarjar Mistcaller",
"Maw of Souls",
},
[186150] = {
"Soul Fragment",
"Sepulcher of the First Ones",
},
[17728] = {
"Murkblood Tribesman",
"Coilfang: The Underbog",
"enUS",
},
[164804] = {
"Droman Oulfarran",
"Mists of Tirna Scithe",
"enUS",
},
[26929] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[60402] = {
"Zandalari Fire-Dancer",
"Mogu'shan Vaults",
"enUS",
},
[96677] = {
"Oso pardo Quijacero",
"Salones del Valor",
},
[50284] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
"enUS",
},
[219022] = {
"Ascended Webfriar",
"The Underkeep",
"enUS",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
},
[60009] = {
"Feng the Accursed",
"Mogu'shan Vaults",
"enUS",
},
[59309] = {
"Obedient Hound",
"Scarlet Halls",
"enUS",
},
[86552] = {
"Gorged Burster",
"The Everbloom",
},
[131492] = {
"Sacerdote de sangre devoto",
"Bardoma",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[91793] = {
"Seaspray Crab",
"Eye of Azshara",
"enUS",
},
[97173] = {
"Restless Tides",
"Eye of Azshara",
},
[154015] = {
"Escaped Ritualist",
"Torghast, Tower of the Damned",
},
[26735] = {
"Azure Scale-Binder",
"The Nexus",
"enUS",
},
[106787] = {
"Bitterbrine Slave",
"Eye of Azshara",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[50417] = {
"Bound Flames",
"Blackrock Caverns",
"enUS",
},
[213905] = {
"Animated Darkness",
"The Dawnbreaker",
"enUS",
},
[208698] = {
"Mago de fallas infinitas",
"El Alba del Infinito",
"enUS",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
"enUS",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[23487] = {
"Wolpertinger salvaje",
"Reinos del Este",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
},
[217489] = {
"Anub'arash",
"Nerub-ar Palace",
"enUS",
},
[59545] = {
"El Alfazaque Dorado",
"Templo del Dragón de Jade",
},
[121399] = {
"Inquisitor Sebilus",
"Tomb of Sargeras",
"enUS",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
"enUS",
},
[54699] = {
"Time-Twisted Nightsaber",
"End Time",
"enUS",
},
[83390] = {
"Retador Señor del Trueno",
"Muelles de hierro",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[218002] = {
"Benk Buzzbee",
"Cinderbrew Meadery",
"enUS",
},
[193944] = {
"Lavamante qalashi",
"Neltharus",
"enUS",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[154018] = {
"Prisonbreak Mauler",
"Torghast, Tower of the Damned",
},
[67504] = {
"Baxel Brassbombs",
"Lion's Landing",
"enUS",
},
[183707] = {
"Entidad desconocida",
"Sepulcro de los Primeros",
},
[65522] = {
"Bubble Shield",
"Stormstout Brewery",
"enUS",
},
[217491] = {
"Skeinspinner Takazj",
"Nerub-ar Palace",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
},
[206230] = {
"Distractor Infinito",
"El Alba del Infinito",
"enUS",
},
[190362] = {
"Libélula deslumbrante",
"Salas de Infusión",
},
[166304] = {
"Mistveil Stinger",
"Mists of Tirna Scithe",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[29118] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[126983] = {
"Harlan Sweete",
"Freehold",
"enUS",
},
[81737] = {
"Crecimiento desenfrenado",
"El Sempibrote",
"enUS",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
"enUS",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
},
[29822] = {
"Drakkari Fire Weaver",
"Gundrak",
"enUS",
},
[29630] = {
"Fanged Pit Viper",
"Gundrak",
"enUS",
},
[163746] = {
"Walkie Shockie X1",
"Operation: Mechagon",
},
[229778] = {
"Automatic Ironstrider",
"Awakening The Machine",
"enUS",
},
[144295] = {
"Mechagon Mechanic",
"Operation: Mechagon",
},
[115417] = {
"Rata",
"Regreso a Karazhan",
},
[167964] = {
"4.RF-4.RF",
"El Otro Lado",
},
[17729] = {
"Murkblood Spearman",
"Coilfang: The Underbog",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
},
[91332] = {
"Stoneclaw Hunter",
"Neltharion's Lair",
"enUS",
},
[59544] = {
"El Tigre Asertivo",
"Templo del Dragón de Jade",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
},
[76259] = {
"Felguard",
"Auchindoun",
},
[168153] = {
"Roc de plaga",
"Plaga Abrumadora",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[134331] = {
"King Rahu'ai",
"Kings' Rest",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[96028] = {
"Wrath of Azshara",
"Eye of Azshara",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
"enUS",
},
[190366] = {
"Croacito curioso",
"Salas de Infusión",
},
[75829] = {
"Nhallish",
"Shadowmoon Burial Grounds",
},
[174012] = {
"Executrix Ophelia",
"Castle Nathria",
},
[59771] = {
"Zombified Corpse",
"Pandaria",
"enUS",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
},
[67814] = {
"Bloodhilt Grunt",
"Lion's Landing",
"enUS",
},
[144298] = {
"Robot de defensa Mk III",
"Operación: Mecalópolis",
},
[26716] = {
"Azure Warder",
"The Nexus",
"enUS",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
},
[205212] = {
"Entidad desconocida",
"El Alba del Infinito",
"enUS",
},
[224663] = {
"Mesmerized Flyer",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[169893] = {
"Hablaoscuro nefario",
"Teatro del Dolor",
},
[229782] = {
"Awakened Phalanx",
"Awakening The Machine",
"enUS",
},
[111068] = {
"Archmage Galeorn",
"Black Rook Hold",
},
[115419] = {
"Ancient Tome",
"Return to Karazhan",
},
[190368] = {
"Clamallamas Aymi",
"Salas de Infusión",
},
[192764] = {
"Guardiano della Fiamma",
"Segrete delle Incarnazioni",
},
[224152] = {
"Twilight Brute",
"Grim Batol",
"enUS",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
},
[96480] = {
"Viletongue Belcher",
"Vault of the Wardens",
"enUS",
},
[197535] = {
"Suma canalizadora Ryvati",
"Estanques de Vida Rubí",
},
[198047] = {
"Canalizadora de tempestades",
"Estanques de Vida Rubí",
},
[219034] = {
"Web Marauder",
"The Underkeep",
"enUS",
},
[99956] = {
"Fel-Infused Fury",
"Vault of the Wardens",
"enUS",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[59223] = {
"Brother Korloff",
"Scarlet Monastery",
"enUS",
},
[83763] = {
"Técnico Grom'kar",
"Muelles de hierro",
},
[144301] = {
"Living Waste",
"Operation: Mechagon",
},
[120477] = {
"Deep Stalker",
"Tomb of Sargeras",
"enUS",
},
[219035] = {
"Deepwalker Guardian",
"The Underkeep",
"enUS",
},
[176957] = {
"Shadowsteel Colossus",
"Sanctum of Domination",
},
[162729] = {
"Patchwerk Soldier",
"The Necrotic Wake",
"enUS",
},
[29119] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[114284] = {
"Elfyra",
"Return to Karazhan",
},
[130521] = {
"Freehold Deckhand",
"Freehold",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[190371] = {
"Sacudetierra primalista",
"Salas de Infusión",
},
[58998] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[220060] = {
"Taste Tester",
"Cinderbrew Meadery",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
},
[180664] = {
"Mawsworn Infuser",
"Sanctum of Domination",
},
[176551] = {
"Purificador de la bóveda",
"Tazavesh, el Mercado Velado",
},
[221102] = {
"Elder Shadeweaver",
"City of Threads",
"enUS",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
"enUS",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[17730] = {
"Murkblood Healer",
"Coilfang: The Underbog",
"enUS",
},
[198868] = {
"Tessitore Elettrico Primalista",
"Segrete delle Incarnazioni",
},
[212383] = {
"Kobold Taskworker",
"Darkflame Cleft",
"enUS",
},
[189707] = {
"Chaotic Mote",
"Castle Nathria",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[76263] = {
"Sargerei Magus",
"Auchindoun",
},
[113197] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[190373] = {
"Cantavientos primalista",
"Salas de Infusión",
},
[61174] = {
"Cursed Jade",
"Greenstone Village",
"enUS",
},
[130522] = {
"Freehold Shipmate",
"Freehold",
"enUS",
},
[81638] = {
"Aqueous Globule",
"The Everbloom",
"enUS",
},
[43878] = {
"Grand Vizier Ertan",
"The Vortex Pinnacle",
"enUS",
},
[225708] = {
"Sporbit",
"Mycomancer Cavern",
"enUS",
},
[92387] = {
"Drums of War",
"Neltharion's Lair",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
"enUS",
},
[223646] = {
"Pale Priest",
"City of Threads",
"enUS",
},
[215968] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[60708] = {
"Meng the Demented",
"Mogu'shan Vaults",
"enUS",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[218016] = {
"Ravenous Cinderbee",
"Cinderbrew Meadery",
"enUS",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[130011] = {
"Irontide Buccaneer",
"Freehold",
},
[217519] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
},
[136214] = {
"Windspeaker Heldis",
"Shrine of the Storm",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[176555] = {
"Achillite",
"Tazavesh, the Veiled Market",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[100529] = {
"Hatespawn Slime",
"Darkheart Thicket",
"enUS",
},
[201467] = {
"Stonebreath Summoner",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[75506] = {
"Partidaria de Sombraluna",
"Cementerios de Sombraluna",
},
[220065] = {
"Umbral Weave",
"City of Threads",
"enUS",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
},
[219066] = {
"Inflicted Civilian",
"The Rookery",
"enUS",
},
[133912] = {
"Profanador jurasangre",
"Bardoma",
},
[168878] = {
"Apestado manipulado",
"Plaga Abrumadora",
},
[190377] = {
"Invocahielo primalista",
"Salas de Infusión",
},
[130012] = {
"Devastadora mareaférrea",
"Puerto Libre",
},
[131847] = {
"Waycrest Reveler",
"Waycrest Manor",
"enUS",
},
[220066] = {
"Scroll Bearer",
"The Underkeep",
"enUS",
},
[97081] = {
"Rey Bjorn",
"Salones del Valor",
},
[45924] = {
"Borrasca turbulenta",
"La Cumbre del Vórtice",
},
[28736] = {
"Skittering Infector",
"Azjol-Nerub",
"enUS",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
},
[59605] = {
"Sodden Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
},
[170927] = {
"Moco eruptivo",
"Plaga Abrumadora",
},
[29120] = {
"Anub'arak",
"Azjol-Nerub",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
},
[133007] = {
"Unbound Abomination",
"The Underrot",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[213932] = {
"Sureki Militant",
"The Dawnbreaker",
"enUS",
},
[186284] = {
"Oso muerdetripas",
"Hondonada Frondacuero",
"enUS",
},
[105699] = {
"Sable de maná",
"Corte de Estrellas",
},
[203688] = {
"Bruto de la Horda",
"El Alba del Infinito",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
"enUS",
},
[122847] = {
"Umbral Priestess",
"Tomb of Sargeras",
"enUS",
},
[98533] = {
"Foul Mother",
"Vault of the Wardens",
"enUS",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[169905] = {
"Señor de la guerra resucitado",
"El Otro Lado",
},
[17731] = {
"Fen Ray",
"Coilfang: The Underbog",
"enUS",
},
[219045] = {
"Colossal Spider",
"Nerub-ar Palace",
"enUS",
},
[67309] = {
"Dreadguard Cavalry",
"Lion's Landing",
"enUS",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[219046] = {
"Voracious Worm",
"Nerub-ar Palace",
"enUS",
},
[36478] = {
"Soulguard Watchman",
"The Forge of Souls",
"enUS",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[216487] = {
"Skardyn Remnants",
"Hall of Awakening",
"enUS",
},
[77803] = {
"Railmaster Rocketspark",
"Grimrail Depot",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
},
[56930] = {
"Krik'thik Swarm Bringer",
"Gate of the Setting Sun",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
"enUS",
},
[168973] = {
"High Torturer Darithos",
"Castle Nathria",
},
[76446] = {
"Dominador de Sombraluna",
"Cementerios de Sombraluna",
},
[129758] = {
"Irontide Grenadier",
"Freehold",
"enUS",
},
[102375] = {
"Runecarver Slave",
"Maw of Souls",
},
[59746] = {
"Scarlet Centurion",
"Scarlet Monastery",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[172979] = {
"Esporeadora Almíbar",
"Nieblas de Tirna Scithe",
},
[60386] = {
"Zandalari Terror Rider",
"Mogu'shan Vaults",
"enUS",
},
[80875] = {
"Bombsquad",
"Iron Docks",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[190381] = {
"Entidad desconocida",
"Hondonada Frondacuero",
"enUS",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
"enUS",
},
[176563] = {
"Zo'gron",
"Tazavesh, the Veiled Market",
},
[23682] = {
"El Jinete decapitado",
"Monasterio Escarlata",
},
[97264] = {
"Hatecoil Shellbreaker",
"Eye of Azshara",
},
[129548] = {
"Blacktooth Brute",
"Freehold",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
},
[19843] = {
"Nethervine Trickster",
"Tempest Keep: The Botanica",
"enUS",
},
[39978] = {
"Twilight Torturer",
"Blackrock Caverns",
"enUS",
},
[79852] = {
"Oshir",
"Iron Docks",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[168886] = {
"Virulax Hilañublo",
"Plaga Abrumadora",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[165414] = {
"Desintegrador depravado",
"Salones de Expiación",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[162744] = {
"Nekthara el machacador",
"Teatro del Dolor",
},
[204206] = {
"Clarividente de la Horda",
"El Alba del Infinito",
},
[122850] = {
"Umbral Guard",
"Tomb of Sargeras",
"enUS",
},
[176565] = {
"Entidad desconocida",
"Tazavesh, el Mercado Velado",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
},
[105715] = {
"Inquisidor vigilante",
"Corte de Estrellas",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[98926] = {
"Shadow Hunter",
"Vault of the Wardens",
"enUS",
},
[217516] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[189363] = {
"Azotador infectado",
"Hondonada Frondacuero",
},
[176973] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[127124] = {
"Freehold Barhand",
"Freehold",
"enUS",
},
[105703] = {
"Mana Wyrm",
"Court of Stars",
},
[89012] = {
"Ravenous Wolf",
"Iron Docks",
},
[119072] = {
"The Desolate Host",
"Tomb of Sargeras",
"enUS",
},
[122851] = {
"Umbral Archer",
"Tomb of Sargeras",
"enUS",
},
[217517] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[213934] = {
"Nightfall Tactician",
"The Dawnbreaker",
"enUS",
},
[56865] = {
"Aqua Dancer",
"Stormstout Brewery",
"enUS",
},
[138281] = {
"Corruptor ignoto",
"Bardoma",
},
[17732] = {
"Lykul Wasp",
"Coilfang: The Underbog",
"enUS",
},
[39679] = {
"Corla, Herald of Twilight",
"Blackrock Caverns",
"enUS",
},
[45928] = {
"Ejecutor del califa",
"La Cumbre del Vórtice",
},
[60410] = {
"Elegon",
"Mogu'shan Vaults",
"enUS",
},
[217518] = {
"Puppetmaster's Subject",
"The Spiral Weave",
"enUS",
},
[168992] = {
"Cultista resucitado",
"El Otro Lado",
},
[40319] = {
"Drahga Shadowburner",
"Grim Batol",
"enUS",
},
[40447] = {
"Chains of Woe",
"Blackrock Caverns",
"enUS",
},
[105704] = {
"Manifestación Arcana",
"Corte de Estrellas",
},
[163086] = {
"Bolsa de gas rancio",
"Teatro del Dolor",
},
[212400] = {
"Void Touched Elemental",
"The Stonevault",
"enUS",
},
[61434] = {
"Sik'thik Vanguard",
"Siege of Niuzao Temple",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
},
[168891] = {
"Apestado manipulado",
"Plaga Abrumadora",
},
[189878] = {
"Entidad desconocida",
"Regreso a Karazhan",
},
[223150] = {
"Ascended Voidspeaker",
"Nerub-ar Palace",
"enUS",
},
[203679] = {
"Anduin Lothar",
"Dawn of the Infinite",
"enUS",
},
[61157] = {
"Sassy Seedling",
"Greenstone Village",
"enUS",
},
[168988] = {
"Overgrowth",
"Mists of Tirna Scithe",
"enUS",
},
[221103] = {
"Hulking Warshell",
"City of Threads",
"enUS",
},
[75193] = {
"Bloodmaul Overseer",
"Bloodmaul Slag Mines",
},
[213937] = {
"Rasha'nan",
"The Dawnbreaker",
"enUS",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[97259] = {
"Blazing Hydra Spawn",
"Eye of Azshara",
"enUS",
},
[105705] = {
"Energía vinculada",
"Corte de Estrellas",
},
[163089] = {
"Desechos asquerosos",
"Teatro del Dolor",
},
[114350] = {
"Shade of Medivh",
"Return to Karazhan",
},
[76260] = {
"Cackling Pyromaniac",
"Auchindoun",
},
[60576] = {
"Stone Quilen",
"Mogu'shan Vaults",
"enUS",
},
[213913] = {
"Kobold Flametender",
"Darkflame Cleft",
"enUS",
},
[43391] = {
"Millhouse Manastorm",
"The Stonecore",
"enUS",
},
[194487] = {
"Vil Maleputre",
"Hondonada Frondacuero",
"enUS",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[77889] = {
"Grom'tash the Destructor",
"Auchindoun",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
"enUS",
},
[205749] = {
"Restless Pebble",
"10.1 Zaralek Caverns - Chapter 1 Scenario",
"enUS",
},
[40320] = {
"Valiona",
"Grim Batol",
"enUS",
},
[97260] = {
"Arcane Hydra Spawn",
"Eye of Azshara",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[28546] = {
"Ionar",
"Halls of Lightning",
"enUS",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[229296] = {
"Orb of Ascendance",
"Mists of Tirna Scithe",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[28926] = {
"Spark of Ionar",
"Halls of Lightning",
"enUS",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[28734] = {
"Anub'ar Skirmisher",
"Azjol-Nerub",
"enUS",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[172991] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
"enUS",
},
[186125] = {
"Trucatótem",
"Hondonada Frondacuero",
},
[58876] = {
"Starving Hound",
"Pandaria",
"enUS",
},
[85232] = {
"Entidad desconocida",
"El Sempibrote",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[192919] = {
"Gigantic Thresher",
"10.0 Dragon Isles",
},
[97171] = {
"Hatecoil Arcanist",
"Eye of Azshara",
},
[17477] = {
"Hellfire Imp",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[29826] = {
"Drakkari Medicine Man",
"Gundrak",
"enUS",
},
[154016] = {
"Prisonbreak Soulmender",
"Torghast, Tower of the Damned",
},
[17669] = {
"Rabid Warhound",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[134417] = {
"Deepsea Ritualist",
"Shrine of the Storm",
},
[165111] = {
"Drust Spiteclaw",
"Mists of Tirna Scithe",
"enUS",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
},
[170850] = {
"Cuernosangre enfurecido",
"Teatro del Dolor",
},
[76057] = {
"Gusano carroñero",
"Cementerios de Sombraluna",
},
[40577] = {
"Centinela Naz'jar",
"Trono de las Mareas",
"enUS",
},
[18309] = {
"Ethereal Scavenger",
"Auchindoun: Mana-Tombs",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[61436] = {
"Sik'thik Bladedancer",
"Siege of Niuzao Temple",
"enUS",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
},
[211341] = {
"Manifested Shadow",
"The Dawnbreaker",
"enUS",
},
[217485] = {
"Nightfall Lookout",
"Skittering Breach",
"enUS",
},
[138187] = {
"Horror grotesco",
"Bardoma",
},
[220599] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[167876] = {
"Inquisidor Sigar",
"Salones de Expiación",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[206066] = {
"Parásito del flujo temporal",
"El Alba del Infinito",
"enUS",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[228030] = {
"Sir Finley Mrrgglton",
"Kriegval's Rest",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[77812] = {
"Sargerei Soulbinder",
"Auchindoun",
},
[213434] = {
"Sporbit",
"Fungal Folly",
"enUS",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[169925] = {
"Begrudging Waiter",
"Castle Nathria",
},
[171343] = {
"Matriarca picofiloso",
"El Otro Lado",
},
[195851] = {
"Portavoz de la muerte ukhel",
"El Ataque Nokhud",
},
[212411] = {
"Torchsnarl",
"Darkflame Cleft",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[61910] = {
"Resin Flake",
"Siege of Niuzao Temple",
"enUS",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[100248] = {
"Ritualist Lesha",
"Eye of Azshara",
"enUS",
},
[28419] = {
"Frenzied Geist",
"Utgarde Keep",
"enUS",
},
[178628] = {
"Mawsworn Darkcaster",
"Sanctum of Domination",
},
[28547] = {
"Storming Vortex",
"Halls of Lightning",
"enUS",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
"enUS",
},
[58898] = {
"Vigilant Watchman",
"Pandaria",
"enUS",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[39708] = {
"Twilight Flame Caller",
"Blackrock Caverns",
"enUS",
},
[169875] = {
"Shackled Soul",
"Theater of Pain",
},
[169927] = {
"Carnicero pútrido",
"Teatro del Dolor",
},
[223674] = {
"Caustic Skitterer",
"Nerub-ar Palace",
"enUS",
},
[62205] = {
"Wing Leader Ner'onok",
"Siege of Niuzao Temple",
"enUS",
},
[97172] = {
"Saltsea Droplet",
"Eye of Azshara",
},
[39994] = {
"Conflagration",
"Blackrock Caverns",
"enUS",
},
[60400] = {
"Jan-xi",
"Mogu'shan Vaults",
"enUS",
},
[177094] = {
"Signe",
"Sanctum of Domination",
},
[17727] = {
"Wrathfin Sentry",
"Coilfang: The Underbog",
"enUS",
},
[190403] = {
"Protodragón glacial",
"Salas de Infusión",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[101639] = {
"Doncella escudera Valarjar",
"Salones del Valor",
},
[185685] = {
"Reliquia Urh",
"Plaga Abrumadora",
},
[17414] = {
"Shadowmoon Technician",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[59518] = {
"Bloated Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[163520] = {
"Líder de escuadrón Rechazada",
"Torres de Ascensión",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[178631] = {
"Mawsworn Commander",
"Sanctum of Domination",
},
[180431] = {
"Ritualista concentrado",
"Tazavesh, el Mercado Velado",
},
[99728] = {
"Grimguard",
"Vault of the Wardens",
"enUS",
},
[196694] = {
"Hurgador arcano",
"Academia Algeth'ar",
},
[168394] = {
"Bocado limoso",
"Plaga Abrumadora",
},
[132051] = {
"Blood Tick",
"The Underrot",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
},
[190405] = {
"Infusora Sariya",
"Salas de Infusión",
},
[40579] = {
"Deep Murloc Hunter",
"Throne of the Tides",
"enUS",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
"enUS",
},
[196548] = {
"Rama antigua",
"Academia Algeth'ar",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168907] = {
"Tentáculo de baba",
"Plaga Abrumadora",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[100818] = {
"Bellowing Idol",
"Neltharion's Lair",
},
[45930] = {
"Ministro del Aire",
"La Cumbre del Vórtice",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[168949] = {
"Risen Bonesoldier",
"De Other Side",
},
[98954] = {
"Felsworn Myrmidon",
"Vault of the Wardens",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[99922] = {
"Ebonclaw Packmate",
"Halls of Valor",
},
[190407] = {
"Furibundo de agua",
"Salas de Infusión",
},
[79510] = {
"Cackling Pyromaniac",
"Auchindoun",
},
[114634] = {
"Sirviente inmortal",
"Regreso a Karazhan",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[77816] = {
"Borka the Brute",
"Grimrail Depot",
},
[45912] = {
"Vórtice salvaje",
"La Cumbre del Vórtice",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[169421] = {
"Felguard",
"Brackenhide Hollow",
},
[194273] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[227775] = {
"Captured Waxtail",
"Nerub-ar Palace",
"enUS",
},
[91790] = {
"Mak'rana Siltwalker",
"Eye of Azshara",
},
[172265] = {
"Remanente de furia",
"Profundidades Sanguíneas",
},
[24069] = {
"Dragonflayer Bonecrusher",
"Utgarde Keep",
"enUS",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
"enUS",
},
[222145] = {
"Voracious Stagshell",
"Nerub-ar Palace",
"enUS",
},
[97678] = {
"Aranasi Broodmother",
"Vault of the Wardens",
"enUS",
},
[150169] = {
"Acechador tóxico",
"Operación: Mecalópolis",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[61183] = {
"Belligerent Blossom",
"Greenstone Village",
"enUS",
},
[155090] = {
"Espiralero anodizado",
"Operación: Mecalópolis",
},
[216441] = {
"Pale Illusion",
"Tak-Rethan Abyss",
"enUS",
},
[61567] = {
"Vizier Jin'bak",
"Siege of Niuzao Temple",
"enUS",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
"enUS",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[129517] = {
"Raptor reanimado",
"Atal'Dazar",
"enUS",
},
[95887] = {
"Glazer",
"Vault of the Wardens",
"enUS",
},
[97269] = {
"Hatecoil Crestrider",
"Eye of Azshara",
},
[219588] = {
"Yes Man",
"Cinderbrew Meadery",
"enUS",
},
[134024] = {
"Cresa devoradora",
"Mansión Tarjasenda",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[98693] = {
"Shackled Servitor",
"Maw of Souls",
},
[217541] = {
"Nightfall Initiate",
"Skittering Breach",
"enUS",
},
[185363] = {
"Manifestor Krugan",
"Sepulcher of the First Ones",
},
[169425] = {
"Felhound",
"Brackenhide Hollow",
},
[17671] = {
"Shattered Hand Champion",
"Hellfire Citadel: The Shattered Halls",
"enUS",
},
[17735] = {
"Wrathfin Warrior",
"Coilfang: The Underbog",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"Earthcrawl Mines",
"enUS",
},
[196043] = {
"Infusora primalista",
"Salas de Infusión",
},
[195697] = {
"Thunderbeast Rider",
"The Nokhud Offensive",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[169426] = {
"Infernal",
"Brackenhide Hollow",
},
[61623] = {
"Sap Globule",
"Siege of Niuzao Temple",
"enUS",
},
[60701] = {
"Zian of the Endless Shadow",
"Mogu'shan Vaults",
"enUS",
},
[18311] = {
"Ethereal Crypt Raider",
"Auchindoun: Mana-Tombs",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
},
[208241] = {
"Ankle Biter",
"Earthcrawl Mines",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[61131] = {
"Mogu'shan Secret-Keeper",
"Mogu'shan Vaults",
"enUS",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
"enUS",
},
[45572] = {
"Howling Gale",
"The Vortex Pinnacle",
},
[171384] = {
"Escriba investigadora",
"Profundidades Sanguíneas",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[196045] = {
"Maligno de maná corrupto",
"Academia Algeth'ar",
},
[167892] = {
"Tormented Soul",
"Halls of Atonement",
},
[186739] = {
"Azureblade",
"The Azure Vault",
},
[76284] = {
"Spiteful Arbiter",
"Auchindoun",
},
[169428] = {
"Wrathguard",
"Brackenhide Hollow",
},
[61485] = {
"General Pa'valak",
"Siege of Niuzao Temple",
"enUS",
},
[59458] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[193558] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
},
[220616] = {
"Corridor Sleeper",
"Darkflame Cleft",
"enUS",
},
[175205] = {
"Baleful Shadow",
"Castle Nathria",
},
[59521] = {
"Bubbling Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[169429] = {
"Shivarra",
"Brackenhide Hollow",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
"enUS",
},
[60033] = {
"Frenzied Spirit",
"Scarlet Monastery",
"enUS",
},
[98246] = {
"Risen Warrior",
"Maw of Souls",
},
[102277] = {
"Deadeye Decoy",
"Darkheart Thicket",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[114626] = {
"Espíritu melancólico",
"Regreso a Karazhan",
},
[102781] = {
"Murciélago vil cachorro",
"Fuerte Torre Oscura",
"enUS",
},
[169430] = {
"Ur'zul",
"Brackenhide Hollow",
},
[223497] = {
"Worker Bee",
"Cinderbrew Meadery",
"enUS",
},
[91784] = {
"Warlord Parjesh",
"Eye of Azshara",
"enUS",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[220003] = {
"Ojo de la reina",
"Ciudad de los Hilos",
},
[24697] = {
"Sister of Torment",
"Magisters' Terrace",
"enUS",
},
[99675] = {
"Enormous Stone Quilen",
"Vault of the Wardens",
"enUS",
},
[77935] = {
"Sargerei Warden",
"Auchindoun",
},
[178133] = {
"Saltaolas salsombría",
"Tazavesh, el Mercado Velado",
},
[104215] = {
"Patrol Captain Gerdo",
"Court of Stars",
},
[213833] = {
"Candleclaw Knight",
"New Candle, New Hope",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
"enUS",
},
[67093] = {
"Sik'thik Battle-Mender",
"Siege of Niuzao Temple",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
},
[210267] = {
"I'pa",
"Cinderbrew Meadery",
"enUS",
},
[133870] = {
"Azotador enfermo",
"Bardoma",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[76220] = {
"Blazing Trickster",
"Auchindoun",
},
[29573] = {
"Drakkari Elemental",
"Gundrak",
"enUS",
},
[29637] = {
"Crafty Snake",
"Gundrak",
"enUS",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[59522] = {
"Sudsy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[29829] = {
"Drakkari Earthshaker",
"Gundrak",
"enUS",
},
[116574] = {
"Silver Forks",
"Return to Karazhan",
},
[134514] = {
"Abyssal Cultist",
"Shrine of the Storm",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[64947] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[118460] = {
"Engine of Souls",
"Tomb of Sargeras",
"enUS",
},
[205265] = {
"Time-Displaced Trooper",
"Dawn of the Infinite",
"enUS",
},
[222042] = {
"Shrillwing",
"Nerub-ar Palace",
"enUS",
},
[113398] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[105720] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[18312] = {
"Ethereal Spellbinder",
"Auchindoun: Mana-Tombs",
"enUS",
},
[74357] = {
"Captured Miner",
"Bloodmaul Slag Mines",
},
[217039] = {
"Nerubian Hauler",
"Ara-Kara, City of Echoes",
"enUS",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[223182] = {
"Web Marauder",
"City of Threads",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
},
[207456] = {
"Fungal Speartender",
"Fungal Folly",
"enUS",
},
[193373] = {
"Puñotrueno nokhud",
"El Ataque Nokhud",
},
[18105] = {
"Ghaz'an",
"Coilfang: The Underbog",
"enUS",
},
[19016] = {
"Hellfire Familiar",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[210148] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[208727] = {
"Guardian Ordan",
"10.2. Nighthold",
"enUS",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[63106] = {
"Sik'thik Swarmer",
"Siege of Niuzao Temple",
"enUS",
},
[81407] = {
"Bombardero Riel siniestro",
"Depósito Riel siniestro",
},
[220624] = {
"Suspicious Niffen",
"Tak-Rethan Abyss",
"enUS",
},
[219454] = {
"Crazed Abomination",
"The Underkeep",
"enUS",
},
[152033] = {
"Inconspicuous Plant",
"Operation: Mechagon",
},
[86526] = {
"Maestro de cadenas Grom'kar",
"Muelles de hierro",
},
[168932] = {
"Doomguard",
"Brackenhide Hollow",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[224240] = {
"Twilight Flamerender",
"Grim Batol",
"enUS",
},
[113537] = {
"Dominador Cascarascuas",
"Guarida de Neltharion",
},
[216320] = {
"The Coaglamation",
"City of Threads",
"enUS",
},
[24071] = {
"Dragonflayer Heartsplitter",
"Utgarde Keep",
"enUS",
},
[213835] = {
"Candleclaw Scrambler",
"New Candle, New Hope",
"enUS",
},
[128435] = {
"Sáurido tóxico",
"Atal'Dazar",
"enUS",
},
[219198] = {
"Ravenous Scarab",
"City of Threads",
"enUS",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[40584] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[97788] = {
"Draco de la tormenta",
"Salones del Valor",
},
[220626] = {
"Blood Parasite",
"Nerub-ar Palace",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[41096] = {
"Oráculo Naz'jar",
"Trono de las Mareas",
"enUS",
},
[177117] = {
"Orb of Torment",
"Sanctum of Domination",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
"enUS",
},
[178141] = {
"Vinculaescamas salsombría",
"Tazavesh, el Mercado Velado",
},
[184020] = {
"Rabioso descomunal",
"Uldaman: Legado de Tyr",
"enUS",
},
[29062] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[163623] = {
"Rotspew Leftovers",
"The Necrotic Wake",
"enUS",
},
[185683] = {
"Reliquia Wo",
"Plaga Abrumadora",
},
[220423] = {
"Retired Lord Vul'azak",
"City of Threads",
"enUS",
},
[216205] = {
"Ravenous Spawn",
"Nerub-ar Palace",
"enUS",
},
[58756] = {
"Scarlet Evoker",
"Scarlet Halls",
"enUS",
},
[178142] = {
"Pescamante salsombría",
"Tazavesh, el Mercado Velado",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[222459] = {
"Congealing Mass",
"Nerub-ar Palace",
"enUS",
},
[24689] = {
"Wretched Bruiser",
"Magisters' Terrace",
"enUS",
},
[213771] = {
"High Speaker Eirich",
"Hall of Awakening",
"enUS",
},
[18314] = {
"Nexus Stalker",
"Auchindoun: Mana-Tombs",
"enUS",
},
[29830] = {
"Living Mojo",
"Gundrak",
"enUS",
},
[220193] = {
"Sureki Venomblade",
"City of Threads",
"enUS",
},
[220206] = {
"Crazed Skardyn",
"The Dread Pit",
"enUS",
},
[74349] = {
"Bloodmaul Magma Binder",
"Bloodmaul Slag Mines",
},
[216363] = {
"Reinforced Drone",
"Ara-Kara, City of Echoes",
"enUS",
},
[183424] = {
"Caballero virtuoso",
"Regreso a Karazhan",
},
[18419] = {
"Bloodwarder Greenkeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[17993] = {
"Bloodwarder Protector",
"Tempest Keep: The Botanica",
"enUS",
},
[129526] = {
"Bilge Rat Swabby",
"Freehold",
"enUS",
},
[216221] = {
"Earthen-Ward Sentinel",
"Hall of Awakening",
"enUS",
},
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[224066] = {
"Sureki Vanguard",
"Nerub-ar Palace",
"enUS",
},
[18313] = {
"Ethereal Sorcerer",
"Auchindoun: Mana-Tombs",
"enUS",
},
[224970] = {
"Caustic Bomber",
"Nerub-ar Palace",
"enUS",
},
[228540] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[229918] = {
"Caustic Skyrazor",
"Nerub-ar Palace",
"enUS",
},
[219723] = {
"Royal Whisperer",
"Nerub-ar Palace",
"enUS",
},
[229691] = {
"Swarmbot",
"Awakening The Machine",
"enUS",
},
[128650] = {
"Chopper Redhook",
"Siege of Boralus",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
},
[220119] = {
"Speaker Xanventh",
"Skittering Breach",
"enUS",
},
[172803] = {
"Afterimage of Baroness Frieda",
"Castle Nathria",
},
[218103] = {
"Nerubian Lord",
"Skittering Breach",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[222167] = {
"Brood Infuser",
"Nerub-ar Palace",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[24722] = {
"Fel Crystal",
"Magisters' Terrace",
"enUS",
},
[24556] = {
"Zelfan",
"Magisters' Terrace",
"enUS",
},
[225568] = {
"Kobold Guardian",
"Kriegval's Rest",
"enUS",
},
[222455] = {
"Black Blood Harvester",
"Nerub-ar Palace",
"enUS",
},
[219739] = {
"Infested Spawn",
"Nerub-ar Palace",
"enUS",
},
[189471] = {
"Herrero qalashi",
"Neltharus",
"enUS",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
"enUS",
},
[18405] = {
"Tempest-Forge Peacekeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[229399] = {
"Blood Drainer",
"Nerub-ar Palace",
"enUS",
},
[222881] = {
"Royal Weaver",
"Nerub-ar Palace",
"enUS",
},
[24561] = {
"Yazzai",
"Magisters' Terrace",
"enUS",
},
[20465] = {
"Underbog Frenzy",
"Coilfang: The Underbog",
"enUS",
},
[28231] = {
"Crystalline Tender",
"The Nexus",
"enUS",
},
[24200] = {
"Skarvald the Constructor",
"Utgarde Keep",
"enUS",
},
[17770] = {
"Hungarfen",
"Coilfang: The Underbog",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[218884] = {
"Shattershell Scarab",
"Nerub-ar Palace",
"enUS",
},
[118523] = {
"Huntress Kasparian",
"Tomb of Sargeras",
"enUS",
},
[126969] = {
"Trothak",
"Freehold",
"enUS",
},
[18317] = {
"Ethereal Priest",
"Auchindoun: Mana-Tombs",
"enUS",
},
[205790] = {
"Time-Lost Smack-o-Tron",
"Dawn of the Infinite",
"enUS",
},
[95920] = {
"Animated Storm",
"Eye of Azshara",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
},
[17653] = {
"Shadowmoon Channeler",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[29063] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[18341] = {
"Pandemonius",
"Auchindoun: Mana-Tombs",
"enUS",
},
[221845] = {
"Xur'khun the Defiled",
"Nerub-ar Palace",
"enUS",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
},
[24553] = {
"Apoko",
"Magisters' Terrace",
"enUS",
},
[129371] = {
"Riptide Shredder",
"Siege of Boralus",
"enUS",
},
[190947] = {
"Altered Wymling",
"10.0 Dragon Isles",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
"enUS",
},
[216541] = {
"Threadmaestro Fothis",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[28586] = {
"General Bjarngrim",
"Halls of Lightning",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[24675] = {
"Phoenix Egg",
"Magisters' Terrace",
"enUS",
},
[17370] = {
"Laughing Skull Enforcer",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[36666] = {
"Spectral Warden",
"The Forge of Souls",
"enUS",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
},
[229537] = {
"Void Emissary",
"Mists of Tirna Scithe",
"enUS",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[36564] = {
"Soulguard Bonecaster",
"The Forge of Souls",
"enUS",
},
[17994] = {
"Bloodwarder Falconer",
"Tempest Keep: The Botanica",
"enUS",
},
[28578] = {
"Hardened Steel Reaver",
"Halls of Lightning",
"enUS",
},
[28582] = {
"Stormforged Mender",
"Halls of Lightning",
"enUS",
},
[179386] = {
"Oficial corsario",
"Tazavesh, el Mercado Velado",
},
[2630] = {
"Earthbind Totem",
"Magisters' Terrace",
"enUS",
},
[36620] = {
"Soulguard Adept",
"The Forge of Souls",
"enUS",
},
[28587] = {
"Volkhan",
"Halls of Lightning",
"enUS",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[28835] = {
"Stormforged Construct",
"Halls of Lightning",
"enUS",
},
[28837] = {
"Stormforged Sentinel",
"Halls of Lightning",
"enUS",
},
[24079] = {
"Dragonflayer Forge Master",
"Utgarde Keep",
"enUS",
},
[75272] = {
"Bloodmaul Ogre Mage",
"Bloodmaul Slag Mines",
},
[216544] = {
"Sureki String Leader",
"11.0 - Campaign Finale Scenario",
"enUS",
},
[220437] = {
"Overseer Kaskel",
"The Spiral Weave",
"enUS",
},
[23960] = {
"Dragonflayer Runecaster",
"Utgarde Keep",
"enUS",
},
[76296] = {
"Twisted Magus",
"Auchindoun",
},
[40021] = {
"Incendiary Spark",
"Blackrock Caverns",
"enUS",
},
[24085] = {
"Dragonflayer Overseer",
"Utgarde Keep",
"enUS",
},
[29680] = {
"Slad'ran Viper",
"Gundrak",
"enUS",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[171500] = {
"Shuffling Corpse",
"The Necrotic Wake",
"enUS",
},
[29836] = {
"Drakkari Battle Rider",
"Gundrak",
"enUS",
},
[229854] = {
"Inquisitor Speaker",
"Nightfall Sanctum",
"enUS",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[100364] = {
"Spirit of Vengeance",
"Vault of the Wardens",
"enUS",
},
[223200] = {
"Blood Collector",
"Nerub-ar Palace",
"enUS",
},
[219746] = {
"Silken Tomb",
"Nerub-ar Palace",
"enUS",
},
[223839] = {
"Queen's Guard Ge'zah",
"Nerub-ar Palace",
"enUS",
},
[218370] = {
"Queen Ansurek",
"Nerub-ar Palace",
"enUS",
},
[221344] = {
"Gloom Hatchling",
"Nerub-ar Palace",
"enUS",
},
[229855] = {
"Shadeguard Speaker",
"Nightfall Sanctum",
"enUS",
},
[24201] = {
"Dalronn the Controller",
"Utgarde Keep",
"enUS",
},
[129788] = {
"Sierraósea mareaférrea",
"Puerto Libre",
},
[39450] = {
"Trogg Dweller",
"Grim Batol",
"enUS",
},
[208450] = {
"Wandering Candle",
"Darkflame Cleft",
"enUS",
},
[220130] = {
"Speaker Xanventh",
"Skittering Breach",
"enUS",
},
[97084] = {
"Rey Tor",
"Salones del Valor",
},
},
["aura_grow_direction"] = 1,
["aggro_modifies"] = {
["health_bar_color"] = false,
},
["aura_stack_shadow_color"] = {
nil,
nil,
nil,
0,
},
["aura_width2"] = 28,
["aura_height2"] = 28,
["extra_icon_timer_outline"] = "OUTLINE",
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Fixate On You"] = 11,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Circular Swipe"] = 4,
["Cast - Special Ability [P]"] = 3,
["Cast - Tank Interrupt"] = 12,
["Cast - Shining Green [P]"] = 3,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - Very Important"] = 15,
["Add - Explode on Die [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Fixate by Unit Buff [P]"] = 2,
["Cast - On Going Cast [P]"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Countdown"] = 11,
["Cast - Stop Casting"] = 4,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Heroic Leap [P]"] = 3,
["Cast - Heal Cut [P]"] = 3,
["Unit - Important"] = 11,
["Auto Set Skull"] = 11,
["Spiteful Affix"] = 3,
["Add - Non Elite Trash [P]"] = 4,
["Add - Warning [P]"] = 5,
["Aura - Buff Alert"] = 15,
["Cast - Voidzone [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - Quick Flash"] = 2,
["Aura - Is Cast Bar [P]"] = 1,
["Cast - Glowing [P]"] = 10,
["Unit - Show Energy"] = 11,
},
["extra_icon_anchor"] = {
["x"] = -16,
},
["extra_icon_wide_icon"] = false,
["aura_frame2_anchor"] = {
["y"] = 14,
["side"] = 1,
},
["cast_statusbar_texture"] = "GennUI B",
["castbar_icon_x_offset"] = -4,
["debuff_show_cc"] = false,
["aura_consolidate"] = true,
["extra_icon_width"] = 32,
["health_statusbar_texture"] = "GennUI B",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Hide Neutral Units"] = 1,
["Cast Bar Icon Config"] = 2,
["Attacking Specific Unit"] = 2,
["Extra Border"] = 2,
["Execute Range"] = 1,
["Target Color"] = 3,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
},
["castbar_target_text_size"] = 8,
["aura_frame1_anchor"] = {
["y"] = 14,
["side"] = 7,
},
["aura_timer_text_font"] = "GennUI",
["cast_statusbar_color_finished"] = {
0.1372549019607843,
0.1372549019607843,
0.1294117647058823,
0.9600000008940697,
},
["extra_icon_stack_font"] = "GennUI",
["aura_height"] = 28,
["cast_statusbar_bgtexture"] = "GennUI B",
["aura2_x_offset"] = 0,
["target_indicator"] = "Arrow",
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "1",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateTargetRadialPosition"] = "1",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["clampTargetNameplateToScreen"] = "1",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "100",
["nameplateShowFriendlyMinions"] = "0",
["nameplateTargetBehindMaxDistance"] = "40",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateMotionSpeed"] = "0.025",
["nameplateShowEnemyMinions"] = "0",
["nameplateShowEnemyPets"] = "1",
["nameplateShowFriendlyNPCs"] = "1",
["nameplateSelectedScale"] = "1",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinScale"] = "1",
["nameplateOtherTopInset"] = "0.085",
["nameplateLargerScale"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateShowEnemyTotems"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateShowEnemyGuardians"] = "0",
["ShowClassColorInNameplate"] = "1",
["nameplateLargeTopInset"] = "0.1",
["NamePlateHorizontalScale"] = "1",
["nameplateOccludedAlphaMult"] = "0.4",
},
["login_counter"] = 1869,
["aura_cooldown_show_swipe"] = false,
["bossmod_aura_height"] = 36,
["aura_stack_font"] = "GennUI",
["blizzard_nameplate_font"] = "GennUI",
["auto_toggle_combat"] = {
["blizz_healthbar_ic"] = true,
["blizz_healthbar_ooc"] = true,
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["aura_timer_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["auras_per_row_amount"] = 4,
["blizzard_nameplate_large_font"] = "GennUI",
["aura_stack_anchor"] = {
["y"] = -8,
["x"] = 2,
["side"] = 11,
},
["plate_config"] = {
["global_health_height"] = 14,
["friendlyplayer"] = {
["castbar_offset"] = -4,
["spellpercent_text_font"] = "GennUI",
["level_text_size"] = 11,
["actorname_use_class_color"] = true,
["cast"] = {
200,
14,
},
["big_actortitle_text_size"] = 10,
["fixed_class_color"] = {
1,
0.4,
0.1,
},
["percent_text_show_decimals"] = false,
["spellname_text_outline"] = "OUTLINE",
["click_through"] = false,
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["level_text_font"] = "GennUI",
["actorname_text_font"] = "GennUI",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["mana_incombat"] = {
nil,
4,
},
["actorname_use_guild_color"] = false,
["all_names"] = true,
["big_actortitle_text_color"] = {
1,
0.8,
0,
},
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 11,
["only_damaged"] = false,
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["big_actortitle_text_font"] = "GennUI",
["percent_text_ooc"] = true,
["level_text_outline"] = "OUTLINE",
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["big_actorname_text_color"] = {
0.5,
1,
0.5,
},
["actorname_use_friends_color"] = false,
["level_text_anchor"] = {
["y"] = 0,
},
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["cast_incombat"] = {
200,
14,
},
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["big_actorname_text_size"] = 12,
["spellname_text_anchor"] = {
["side"] = 10,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["spellname_text_font"] = "GennUI",
["big_actorname_text_outline"] = "OUTLINE",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["actorname_text_size"] = 12,
["big_actorname_text_font"] = "GennUI",
["use_playerclass_color"] = true,
["spellpercent_text_enabled"] = true,
["percent_show_health"] = true,
["percent_text_size"] = 12,
["health_incombat"] = {
60,
4,
},
["percent_text_font"] = "GennUI",
["buff_frame_y_offset"] = 0,
["quest_enabled"] = true,
["level_text_alpha"] = 1,
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["quest_color_enabled"] = true,
["spellname_text_size"] = 11,
["health"] = {
60,
4,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["mana"] = {
nil,
4,
},
["actorname_text_anchor"] = {
["y"] = 1,
},
["percent_show_percent"] = false,
},
["global_health_width"] = 200,
["friendlynpc"] = {
["big_actorname_text_size"] = 12,
["spellpercent_text_font"] = "GennUI",
["show_guild_name"] = false,
["level_text_size"] = 11,
["actorname_use_class_color"] = true,
["cast"] = {
200,
14,
},
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["fixed_class_color"] = {
1,
0.4,
0.1,
1,
},
["percent_text_show_decimals"] = false,
["spellname_text_outline"] = "OUTLINE",
["click_through"] = false,
["level_text_font"] = "GennUI",
["actorname_text_font"] = "GennUI",
["actorname_use_guild_color"] = false,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["only_damaged"] = false,
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["only_thename"] = false,
["big_actortitle_text_font"] = "GennUI",
["percent_text_ooc"] = true,
["level_text_outline"] = "OUTLINE",
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_anchor"] = {
["y"] = 0,
},
["cast_incombat"] = {
200,
14,
},
["percent_text_enabled"] = true,
["big_actortitle_text_size"] = 12,
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["side"] = 10,
},
["spellname_text_font"] = "GennUI",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["big_actorname_text_font"] = "GennUI",
["use_playerclass_color"] = true,
["actorname_use_friends_color"] = false,
["actorname_friend_color"] = {
0.71,
1,
1,
1,
},
["level_text_alpha"] = 1,
["percent_text_size"] = 12,
["percent_text_font"] = "GennUI",
["actorname_guild_color"] = {
0.498039,
1,
0.2,
1,
},
["percent_show_percent"] = false,
["castbar_offset"] = -4,
["spellpercent_text_enabled"] = true,
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["health_incombat"] = {
200,
14,
},
["health"] = {
200,
14,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_size"] = 11,
["actorname_text_anchor"] = {
["side"] = 1,
},
["percent_show_health"] = true,
["level_text_enabled"] = true,
},
["enemyplayer"] = {
["big_actorname_text_size"] = 12,
["spellpercent_text_font"] = "GennUI",
["level_text_size"] = 11,
["actorname_use_class_color"] = true,
["cast"] = {
200,
14,
},
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["percent_text_show_decimals"] = false,
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "GennUI",
["actorname_text_font"] = "GennUI",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["big_actortitle_text_font"] = "GennUI",
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_anchor"] = {
["y"] = 0,
},
["cast_incombat"] = {
200,
14,
},
["health_incombat"] = {
200,
14,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["side"] = 10,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["actorname_text_size"] = 10,
["big_actorname_text_font"] = "GennUI",
["big_actortitle_text_size"] = 10,
["level_text_outline"] = "OUTLINE",
["level_text_alpha"] = 1,
["percent_text_size"] = 12,
["percent_text_font"] = "GennUI",
["percent_show_percent"] = false,
["actorname_text_anchor"] = {
["side"] = 1,
},
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_size"] = 11,
["health"] = {
200,
14,
},
["spellname_text_font"] = "GennUI",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
},
["enemynpc"] = {
["spellpercent_text_font"] = "GennUI",
["level_text_size"] = 11,
["cast"] = {
200,
14,
},
["big_actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_font"] = "GennUI",
["actorname_text_font"] = "GennUI",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 11,
["big_actortitle_text_font"] = "GennUI",
["spellpercent_text_size"] = 10,
["level_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["level_text_anchor"] = {
["y"] = 0,
},
["cast_incombat"] = {
200,
},
["actorname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellpercent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_anchor"] = {
["side"] = 10,
},
["big_actortitle_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["spellname_text_font"] = "GennUI",
["actorname_text_size"] = 12,
["percent_text_show_decimals"] = false,
["big_actorname_text_font"] = "GennUI",
["big_actorname_text_size"] = 12,
["level_text_outline"] = "OUTLINE",
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["actorname_text_anchor"] = {
["side"] = 1,
},
["percent_text_size"] = 12,
["percent_text_font"] = "GennUI",
["percent_show_percent"] = false,
["quest_color_enabled"] = false,
["spellname_text_size"] = 11,
["health"] = {
200,
14,
},
["level_text_alpha"] = 1,
["spellname_text_shadow_color"] = {
nil,
nil,
nil,
0,
},
["health_incombat"] = {
200,
14,
},
},
},
["aura_y_offset"] = 10,
["use_ui_parent"] = true,
["indicator_elite"] = false,
["bossmod_aura_width"] = 36,
["resources_settings"] = {
["chr"] = {
["Player-2073-06F50D44"] = "Chi",
["Player-1329-0A43CA4E"] = "SoulShards",
["Player-1329-09271213"] = "ComboPoints",
["Player-2073-09E87897"] = "Essence",
["Player-2073-06A170FA"] = "ComboPoints",
["Player-2073-0A4934C9"] = "ArcaneCharges",
["Player-2073-06EBF709"] = "HolyPower",
["Player-2073-0655867C"] = "Runes",
["Player-2073-0701C3AE"] = "SoulShards",
["Player-2073-0A489EE6"] = "ArcaneCharges",
["Player-1329-0A403CEE"] = "ComboPoints",
},
},
["spell_animation_list"] = {
[49998] = {
{
["fade_out"] = 0.01999999955296516,
["scaleX"] = 0.09999847412109375,
["amplitude"] = 1.029999971389771,
["fade_in"] = 0.009999999776482582,
},
},
},
["border_color"] = {
nil,
nil,
nil,
1,
},
["castbar_icon_size"] = "same as castbar plus healthbar",
["npc_colors"] = {
[99358] = {
true,
false,
"magenta",
},
[196798] = {
true,
false,
"cyan",
},
[186696] = {
true,
false,
"magenta",
},
[165597] = {
true,
false,
"darkorange",
},
[213806] = {
true,
false,
"cyan",
},
[190405] = {
true,
false,
"cyan",
},
[95842] = {
true,
false,
"cyan",
},
[180431] = {
true,
false,
"cyan",
},
[115407] = {
true,
false,
"blue",
},
[212400] = {
true,
false,
"indigo",
},
[150253] = {
true,
false,
"indigo",
},
[184140] = {
true,
false,
"magenta",
},
[99359] = {
true,
false,
"magenta",
},
[180432] = {
true,
false,
"magenta",
},
[184908] = {
true,
false,
"darkorange",
},
[150254] = {
true,
false,
"indigo",
},
[173016] = {
true,
false,
"cyan",
},
[201788] = {
true,
false,
"indigo",
},
[180433] = {
true,
false,
"magenta",
},
[200126] = {
true,
false,
"cyan",
},
[208438] = {
true,
false,
"indigo",
},
[131009] = {
true,
false,
"magenta",
},
[197697] = {
true,
false,
"indigo",
},
[131586] = {
true,
false,
"blue",
},
[96611] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"indigo",
},
[178133] = {
true,
false,
"darkorange",
},
[214066] = {
true,
false,
"cyan",
},
[69374] = {
true,
false,
"blue",
},
[131587] = {
true,
false,
"indigo",
},
[184911] = {
true,
false,
"magenta",
},
[164707] = {
true,
false,
"blue",
},
[196548] = {
true,
false,
"magenta",
},
[135552] = {
true,
false,
"magenta",
},
[212405] = {
true,
false,
"darkorange",
},
[84400] = {
true,
false,
"magenta",
},
[193352] = {
true,
false,
"magenta",
},
[135169] = {
true,
false,
"magenta",
},
[206140] = {
true,
false,
"blue",
},
[83761] = {
true,
false,
"blue",
},
[195399] = {
true,
false,
"darkorange",
},
[178392] = {
true,
false,
"blue",
},
[85232] = {
true,
false,
"blue",
},
[168418] = {
true,
false,
"blue",
},
[184019] = {
true,
false,
"blue",
},
[199748] = {
true,
false,
"cyan",
},
[165222] = {
true,
false,
"cyan",
},
[184020] = {
true,
false,
"blue",
},
[199749] = {
true,
false,
"indigo",
},
[185683] = {
true,
false,
"yellow",
},
[58569] = {
true,
false,
"cyan",
},
[192333] = {
true,
false,
"indigo",
},
[178139] = {
true,
false,
"blue",
},
[174175] = {
true,
false,
"blue",
},
[83763] = {
true,
false,
"magenta",
},
[184022] = {
true,
false,
"cyan",
},
[214840] = {
true,
false,
"darkorange",
},
[75899] = {
true,
false,
"magenta",
},
[210109] = {
true,
false,
"blue",
},
[185685] = {
true,
false,
"blue",
},
[196043] = {
true,
false,
"cyan",
},
[131850] = {
true,
false,
"cyan",
},
[189266] = {
true,
false,
"indigo",
},
[178141] = {
true,
false,
"magenta",
},
[211261] = {
true,
false,
"magenta",
},
[190034] = {
true,
false,
"blue",
},
[83892] = {
true,
false,
"cyan",
},
[188244] = {
true,
false,
"blue",
},
[178142] = {
true,
false,
"cyan",
},
[98406] = {
true,
false,
"blue",
},
[211262] = {
true,
false,
"magenta",
},
[196045] = {
true,
false,
"cyan",
},
[135049] = {
true,
false,
"cyan",
},
[139269] = {
true,
false,
"darkorange",
},
[211263] = {
true,
false,
"magenta",
},
[83893] = {
true,
false,
"cyan",
},
[128969] = {
true,
false,
"indigo",
},
[82039] = {
true,
false,
"darkorange",
},
[194896] = {
true,
false,
"blue",
},
[220599] = {
true,
false,
"magenta",
},
[177889] = {
true,
false,
"magenta",
},
[187224] = {
true,
false,
"magenta",
},
[136330] = {
true,
false,
"magenta",
},
[223541] = {
true,
false,
"indigo",
},
[217531] = {
true,
false,
"indigo",
},
[167532] = {
true,
false,
"blue",
},
[114584] = {
true,
false,
"blue",
},
[98280] = {
true,
false,
"cyan",
},
[185691] = {
true,
false,
"darkorange",
},
[167533] = {
true,
false,
"blue",
},
[212673] = {
true,
false,
"indigo",
},
[163058] = {
true,
false,
"blue",
},
[217533] = {
true,
false,
"indigo",
},
[167534] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"indigo",
},
[131858] = {
true,
false,
"blue",
},
[213954] = {
true,
false,
"blue",
},
[45912] = {
true,
false,
"cyan",
},
[207177] = {
true,
false,
"blue",
},
[127757] = {
true,
false,
"blue",
},
[40925] = {
true,
false,
"blue",
},
[190426] = {
true,
false,
"magenta",
},
[189531] = {
true,
false,
"cyan",
},
[162038] = {
true,
false,
"indigo",
},
[105699] = {
true,
false,
"darkorange",
},
[150146] = {
true,
false,
"magenta",
},
[137103] = {
true,
false,
"magenta",
},
[101991] = {
true,
false,
"cyan",
},
[162039] = {
true,
false,
"cyan",
},
[97068] = {
true,
false,
"indigo",
},
[167538] = {
true,
false,
"blue",
},
[75713] = {
true,
false,
"cyan",
},
[186208] = {
true,
false,
"magenta",
},
[138255] = {
true,
false,
"indigo",
},
[196694] = {
true,
false,
"darkorange",
},
[162040] = {
true,
false,
"magenta",
},
[195927] = {
true,
false,
"magenta",
},
[170480] = {
true,
false,
"blue",
},
[150276] = {
true,
false,
"blue",
},
[171887] = {
true,
false,
"magenta",
},
[83578] = {
true,
false,
"blue",
},
[195928] = {
true,
false,
"magenta",
},
[97197] = {
true,
false,
"cyan",
},
[126928] = {
true,
false,
"darkorange",
},
[203857] = {
true,
false,
"cyan",
},
[165111] = {
true,
false,
"darkorange",
},
[195929] = {
true,
false,
"magenta",
},
[212681] = {
true,
false,
"darkorange",
},
[75459] = {
true,
false,
"cyan",
},
[195930] = {
true,
false,
"magenta",
},
[39392] = {
true,
false,
"magenta",
},
[193373] = {
true,
false,
"magenta",
},
[157824] = {
true,
false,
"cyan",
},
[228539] = {
true,
false,
"cyan",
},
[168310] = {
true,
false,
"indigo",
},
[133912] = {
true,
false,
"cyan",
},
[75652] = {
true,
false,
"blue",
},
[134041] = {
true,
false,
"blue",
},
[84028] = {
true,
false,
"blue",
},
[203861] = {
true,
false,
"blue",
},
[179821] = {
true,
false,
"indigo",
},
[83389] = {
true,
false,
"indigo",
},
[81407] = {
true,
false,
"blue",
},
[129552] = {
true,
false,
"blue",
},
[154758] = {
true,
false,
"blue",
},
[162047] = {
true,
false,
"blue",
},
[115486] = {
true,
false,
"indigo",
},
[90998] = {
true,
false,
"cyan",
},
[224962] = {
true,
false,
"magenta",
},
[164861] = {
true,
false,
"cyan",
},
[168058] = {
true,
false,
"cyan",
},
[105704] = {
true,
false,
"cyan",
},
[166396] = {
true,
false,
"blue",
},
[127315] = {
true,
false,
"magenta",
},
[83390] = {
true,
false,
"magenta",
},
[132126] = {
true,
false,
"magenta",
},
[180335] = {
true,
false,
"cyan",
},
[171384] = {
true,
false,
"blue",
},
[130896] = {
true,
false,
"magenta",
},
[84989] = {
true,
false,
"cyan",
},
[81984] = {
true,
false,
"blue",
},
[180336] = {
true,
false,
"cyan",
},
[101549] = {
true,
false,
"cyan",
},
[105705] = {
true,
false,
"indigo",
},
[170490] = {
true,
false,
"cyan",
},
[168572] = {
true,
false,
"magenta",
},
[184301] = {
true,
false,
"cyan",
},
[225605] = {
true,
false,
"cyan",
},
[115488] = {
true,
false,
"cyan",
},
[163458] = {
true,
false,
"cyan",
},
[97202] = {
true,
false,
"blue",
},
[186220] = {
true,
false,
"cyan",
},
[81985] = {
true,
false,
"cyan",
},
[122969] = {
true,
false,
"cyan",
},
[100527] = {
true,
false,
"cyan",
},
[168318] = {
true,
false,
"blue",
},
[150160] = {
true,
false,
"indigo",
},
[83392] = {
true,
false,
"blue",
},
[178165] = {
true,
false,
"blue",
},
[114338] = {
true,
false,
"blue",
},
[104300] = {
true,
false,
"cyan",
},
[171772] = {
true,
false,
"blue",
},
[122970] = {
true,
false,
"darkorange",
},
[131492] = {
true,
false,
"cyan",
},
[76104] = {
true,
false,
"magenta",
},
[86526] = {
true,
false,
"magenta",
},
[135329] = {
true,
false,
"blue",
},
[81603] = {
true,
false,
"blue",
},
[166275] = {
true,
false,
"cyan",
},
[122971] = {
true,
false,
"indigo",
},
[166276] = {
true,
false,
"blue",
},
[168578] = {
true,
false,
"cyan",
},
[150292] = {
true,
false,
"indigo",
},
[218961] = {
true,
false,
"magenta",
},
[45917] = {
true,
false,
"blue",
},
[162057] = {
true,
false,
"blue",
},
[150165] = {
true,
false,
"indigo",
},
[150293] = {
true,
false,
"darkorange",
},
[186226] = {
true,
false,
"cyan",
},
[125977] = {
true,
false,
"magenta",
},
[122972] = {
true,
false,
"cyan",
},
[205152] = {
true,
false,
"blue",
},
[92538] = {
true,
false,
"magenta",
},
[170882] = {
true,
false,
"cyan",
},
[178171] = {
true,
false,
"blue",
},
[218324] = {
true,
false,
"indigo",
},
[70544] = {
true,
false,
"magenta",
},
[168837] = {
true,
false,
"indigo",
},
[164873] = {
true,
false,
"blue",
},
[122973] = {
true,
false,
"magenta",
},
[100531] = {
true,
false,
"indigo",
},
[186740] = {
true,
false,
"indigo",
},
[164362] = {
true,
false,
"magenta",
},
[98677] = {
true,
false,
"darkorange",
},
[180091] = {
true,
false,
"blue",
},
[186741] = {
true,
false,
"cyan",
},
[129879] = {
true,
false,
"indigo",
},
[150297] = {
true,
false,
"magenta",
},
[180348] = {
true,
false,
"blue",
},
[100532] = {
true,
false,
"cyan",
},
[165515] = {
true,
false,
"indigo",
},
[163086] = {
true,
false,
"indigo",
},
[91006] = {
true,
false,
"cyan",
},
[205158] = {
true,
false,
"blue",
},
[129369] = {
true,
false,
"blue",
},
[23487] = {
true,
false,
"darkorange",
},
[213343] = {
true,
false,
"indigo",
},
[97081] = {
true,
false,
"blue",
},
[138281] = {
true,
false,
"indigo",
},
[163089] = {
true,
false,
"darkorange",
},
[134701] = {
true,
false,
"magenta",
},
[179841] = {
true,
false,
"cyan",
},
[40357] = {
true,
false,
"magenta",
},
[81737] = {
true,
false,
"magenta",
},
[179842] = {
true,
false,
"blue",
},
[137516] = {
true,
false,
"darkorange",
},
[98681] = {
true,
false,
"blue",
},
[57109] = {
true,
false,
"blue",
},
[165010] = {
true,
false,
"blue",
},
[165138] = {
true,
false,
"darkorange",
},
[97083] = {
true,
false,
"blue",
},
[114794] = {
true,
false,
"magenta",
},
[105715] = {
true,
false,
"cyan",
},
[212453] = {
true,
false,
"magenta",
},
[40166] = {
true,
false,
"blue",
},
[98810] = {
true,
false,
"blue",
},
[205804] = {
true,
false,
"magenta",
},
[97084] = {
true,
false,
"blue",
},
[130012] = {
true,
false,
"magenta",
},
[163862] = {
true,
false,
"blue",
},
[214117] = {
true,
false,
"magenta",
},
[176394] = {
true,
false,
"blue",
},
[168594] = {
true,
false,
"blue",
},
[144298] = {
true,
false,
"magenta",
},
[176395] = {
true,
false,
"cyan",
},
[104246] = {
true,
false,
"indigo",
},
[213607] = {
true,
false,
"darkorange",
},
[190206] = {
true,
false,
"magenta",
},
[183173] = {
true,
false,
"cyan",
},
[224221] = {
true,
false,
"blue",
},
[114796] = {
true,
false,
"cyan",
},
[216293] = {
true,
false,
"cyan",
},
[96574] = {
true,
false,
"blue",
},
[129374] = {
true,
false,
"indigo",
},
[190207] = {
true,
false,
"cyan",
},
[115244] = {
true,
false,
"blue",
},
[104247] = {
true,
false,
"cyan",
},
[130909] = {
true,
false,
"purple",
},
[187139] = {
true,
false,
"blue",
},
[220003] = {
true,
false,
"indigo",
},
[165529] = {
true,
false,
"cyan",
},
[214761] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"darkorange",
},
[45922] = {
true,
false,
"darkorange",
},
[206066] = {
true,
false,
"cyan",
},
[173714] = {
true,
false,
"blue",
},
[118698] = {
true,
false,
"magenta",
},
[186246] = {
true,
false,
"cyan",
},
[224609] = {
true,
false,
"indigo",
},
[92612] = {
true,
false,
"indigo",
},
[206068] = {
true,
false,
"magenta",
},
[166299] = {
true,
false,
"magenta",
},
[177808] = {
true,
false,
"magenta",
},
[190340] = {
true,
false,
"indigo",
},
[167962] = {
true,
false,
"blue",
},
[194816] = {
true,
false,
"magenta",
},
[164510] = {
true,
false,
"darkorange",
},
[171799] = {
true,
false,
"magenta",
},
[189318] = {
true,
false,
"indigo",
},
[184331] = {
true,
false,
"magenta",
},
[206070] = {
true,
false,
"indigo",
},
[166301] = {
true,
false,
"darkorange",
},
[40936] = {
true,
false,
"blue",
},
[186122] = {
true,
false,
"blue",
},
[190342] = {
true,
false,
"cyan",
},
[98368] = {
true,
false,
"magenta",
},
[122984] = {
true,
false,
"blue",
},
[172312] = {
true,
false,
"blue",
},
[166302] = {
true,
false,
"cyan",
},
[167965] = {
true,
false,
"cyan",
},
[195842] = {
true,
false,
"cyan",
},
[104251] = {
true,
false,
"magenta",
},
[173720] = {
true,
false,
"blue",
},
[163618] = {
true,
false,
"magenta",
},
[166304] = {
true,
false,
"darkorange",
},
[102781] = {
true,
false,
"darkorange",
},
[186125] = {
true,
false,
"cyan",
},
[190345] = {
true,
false,
"blue",
},
[167967] = {
true,
false,
"cyan",
},
[45924] = {
true,
false,
"cyan",
},
[206074] = {
true,
false,
"cyan",
},
[224616] = {
true,
false,
"magenta",
},
[205435] = {
true,
false,
"blue",
},
[163620] = {
true,
false,
"indigo",
},
[205691] = {
true,
false,
"cyan",
},
[83025] = {
true,
false,
"blue",
},
[114802] = {
true,
false,
"indigo",
},
[193799] = {
true,
false,
"magenta",
},
[163621] = {
true,
false,
"blue",
},
[168992] = {
true,
false,
"cyan",
},
[204030] = {
true,
false,
"magenta",
},
[45477] = {
true,
false,
"indigo",
},
[196102] = {
true,
false,
"cyan",
},
[177816] = {
true,
false,
"cyan",
},
[98243] = {
true,
false,
"indigo",
},
[135234] = {
true,
false,
"darkorange",
},
[114803] = {
true,
false,
"cyan",
},
[76057] = {
true,
false,
"blue",
},
[81236] = {
true,
false,
"magenta",
},
[177817] = {
true,
false,
"cyan",
},
[82579] = {
true,
false,
"cyan",
},
[165414] = {
true,
false,
"cyan",
},
[193291] = {
true,
false,
"magenta",
},
[162729] = {
true,
false,
"darkorange",
},
[114804] = {
true,
false,
"indigo",
},
[220401] = {
true,
false,
"greenyellow",
},
[59544] = {
true,
false,
"magenta",
},
[23682] = {
true,
false,
"cyan",
},
[194315] = {
true,
false,
"blue",
},
[45919] = {
true,
false,
"indigo",
},
[128551] = {
true,
false,
"darkorange",
},
[135365] = {
true,
false,
"blue",
},
[214264] = {
true,
false,
"indigo",
},
[150251] = {
true,
false,
"cyan",
},
[141939] = {
true,
false,
"magenta",
},
[219984] = {
true,
false,
"cyan",
},
[193293] = {
true,
false,
"purple",
},
[114783] = {
true,
false,
"magenta",
},
[163882] = {
true,
false,
"indigo",
},
[168153] = {
true,
false,
"indigo",
},
[195851] = {
true,
false,
"cyan",
},
[101476] = {
true,
false,
"magenta",
},
[201222] = {
true,
false,
"blue",
},
[190403] = {
true,
false,
"indigo",
},
[194317] = {
true,
false,
"blue",
},
[169893] = {
true,
false,
"indigo",
},
[224240] = {
true,
false,
"indigo",
},
[45926] = {
true,
false,
"darkorange",
},
[197698] = {
true,
false,
"indigo",
},
[167536] = {
true,
false,
"blue",
},
[201223] = {
true,
false,
"cyan",
},
[208242] = {
true,
false,
"cyan",
},
[98370] = {
true,
false,
"cyan",
},
[40634] = {
true,
false,
"cyan",
},
[115765] = {
true,
false,
"blue",
},
[91001] = {
true,
false,
"indigo",
},
[197219] = {
true,
false,
"blue",
},
[59545] = {
true,
false,
"darkorange",
},
[167956] = {
true,
false,
"cyan",
},
[163501] = {
true,
false,
"magenta",
},
[194316] = {
true,
false,
"blue",
},
[129367] = {
true,
false,
"cyan",
},
[135241] = {
true,
false,
"cyan",
},
[135474] = {
true,
false,
"cyan",
},
[120651] = {
true,
false,
"white",
},
[191847] = {
true,
false,
"blue",
},
[192464] = {
true,
false,
"magenta",
},
[133835] = {
true,
false,
"cyan",
},
[187159] = {
true,
false,
"magenta",
},
[213885] = {
true,
false,
"magenta",
},
[173138] = {
true,
false,
"cyan",
},
[205384] = {
true,
false,
"magenta",
},
[185680] = {
true,
false,
"darkorange",
},
[183707] = {
true,
false,
"cyan",
},
[128455] = {
true,
false,
"indigo",
},
[163503] = {
true,
false,
"magenta",
},
[187160] = {
true,
false,
"indigo",
},
[81432] = {
true,
false,
"magenta",
},
[184303] = {
true,
false,
"darkorange",
},
[171805] = {
true,
false,
"blue",
},
[192787] = {
true,
false,
"blue",
},
[206214] = {
true,
false,
"blue",
},
[165137] = {
true,
false,
"magenta",
},
[187033] = {
true,
false,
"indigo",
},
[134024] = {
true,
false,
"cyan",
},
[102404] = {
true,
false,
"blue",
},
[220195] = {
true,
false,
"cyan",
},
[224732] = {
true,
false,
"cyan",
},
[163121] = {
true,
false,
"blue",
},
[101637] = {
true,
false,
"indigo",
},
[100526] = {
true,
false,
"darkorange",
},
[102788] = {
true,
false,
"magenta",
},
[133685] = {
true,
false,
"magenta",
},
[150154] = {
true,
false,
"darkorange",
},
[189464] = {
true,
false,
"indigo",
},
[76446] = {
true,
false,
"cyan",
},
[192789] = {
true,
false,
"indigo",
},
[186242] = {
true,
false,
"darkorange",
},
[184335] = {
true,
false,
"cyan",
},
[129547] = {
true,
false,
"blue",
},
[99891] = {
true,
false,
"indigo",
},
[138187] = {
true,
false,
"cyan",
},
[170850] = {
true,
false,
"blue",
},
[184910] = {
true,
false,
"yellow",
},
[87252] = {
true,
false,
"blue",
},
[114526] = {
true,
false,
"magenta",
},
[196115] = {
true,
false,
"blue",
},
[115020] = {
true,
false,
"blue",
},
[189466] = {
true,
false,
"blue",
},
[168878] = {
true,
false,
"darkorange",
},
[107073] = {
true,
false,
"cyan",
},
[45928] = {
true,
false,
"indigo",
},
[204536] = {
true,
false,
"darkorange",
},
[176551] = {
true,
false,
"cyan",
},
[196116] = {
true,
false,
"indigo",
},
[144071] = {
true,
false,
"cyan",
},
[150168] = {
true,
false,
"blue",
},
[190362] = {
true,
false,
"cyan",
},
[189467] = {
true,
false,
"darkorange",
},
[171181] = {
true,
false,
"blue",
},
[135240] = {
true,
false,
"cyan",
},
[101639] = {
true,
false,
"indigo",
},
[196117] = {
true,
false,
"blue",
},
[192481] = {
true,
false,
"cyan",
},
[223994] = {
true,
false,
"cyan",
},
[213892] = {
true,
false,
"cyan",
},
[184132] = {
true,
false,
"magenta",
},
[170927] = {
true,
false,
"magenta",
},
[163126] = {
true,
false,
"cyan",
},
[193944] = {
true,
false,
"cyan",
},
[131669] = {
true,
false,
"darkorange",
},
[81819] = {
true,
false,
"cyan",
},
[102232] = {
true,
false,
"cyan",
},
[213893] = {
true,
false,
"cyan",
},
[163894] = {
true,
false,
"indigo",
},
[160495] = {
true,
false,
"cyan",
},
[172265] = {
true,
false,
"cyan",
},
[174210] = {
true,
false,
"cyan",
},
[162744] = {
true,
false,
"blue",
},
[163128] = {
true,
false,
"cyan",
},
[212775] = {
true,
false,
"cyan",
},
[129517] = {
true,
false,
"magenta",
},
[189470] = {
true,
false,
"aqua",
},
[171184] = {
true,
false,
"blue",
},
[116410] = {
true,
false,
"darkorange",
},
[81820] = {
true,
false,
"magenta",
},
[165430] = {
true,
false,
"blue",
},
[168627] = {
true,
false,
"cyan",
},
[190366] = {
true,
false,
"darkorange",
},
[94224] = {
true,
false,
"magenta",
},
[189471] = {
true,
false,
"blue",
},
[192796] = {
true,
false,
"magenta",
},
[186658] = {
true,
false,
"cyan",
},
[214762] = {
true,
false,
"magenta",
},
[97219] = {
true,
false,
"blue",
},
[170147] = {
true,
false,
"darkorange",
},
[173655] = {
true,
false,
"blue",
},
[200387] = {
true,
false,
"indigo",
},
[189472] = {
true,
false,
"blue",
},
[186191] = {
true,
false,
"magenta",
},
[115388] = {
true,
false,
"magenta",
},
[168681] = {
true,
false,
"cyan",
},
[129788] = {
true,
false,
"cyan",
},
[115417] = {
true,
false,
"blue",
},
[164737] = {
true,
false,
"indigo",
},
[190368] = {
true,
false,
"cyan",
},
[164921] = {
true,
false,
"magenta",
},
[184580] = {
true,
false,
"cyan",
},
[192788] = {
true,
false,
"cyan",
},
[167607] = {
true,
false,
"blue",
},
[216583] = {
true,
false,
"magenta",
},
[188067] = {
true,
false,
"cyan",
},
[164705] = {
true,
false,
"cyan",
},
[168886] = {
true,
false,
"blue",
},
[173360] = {
true,
false,
"indigo",
},
[45930] = {
true,
false,
"blue",
},
[216328] = {
true,
false,
"blue",
},
[211341] = {
true,
false,
"blue",
},
[59555] = {
true,
false,
"cyan",
},
[40943] = {
true,
false,
"magenta",
},
[208698] = {
true,
false,
"cyan",
},
[172979] = {
true,
false,
"darkorange",
},
[194241] = {
true,
false,
"magenta",
},
[44404] = {
true,
false,
"cyan",
},
[192800] = {
true,
false,
"blue",
},
[59613] = {
true,
false,
"blue",
},
[114634] = {
true,
false,
"cyan",
},
[58590] = {
true,
false,
"magenta",
},
[196200] = {
true,
false,
"blue",
},
[190371] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"indigo",
},
[83613] = {
true,
false,
"magenta",
},
[154744] = {
true,
false,
"blue",
},
[152009] = {
true,
false,
"blue",
},
[131677] = {
true,
false,
"magenta",
},
[164702] = {
true,
false,
"magenta",
},
[133361] = {
true,
false,
"magenta",
},
[172981] = {
true,
false,
"blue",
},
[197406] = {
true,
false,
"darkorange",
},
[184107] = {
true,
false,
"blue",
},
[220423] = {
true,
false,
"blue",
},
[167612] = {
true,
false,
"blue",
},
[164414] = {
true,
false,
"cyan",
},
[167611] = {
true,
false,
"blue",
},
[128434] = {
true,
false,
"magenta",
},
[190373] = {
true,
false,
"cyan",
},
[164926] = {
true,
false,
"blue",
},
[114624] = {
true,
false,
"blue",
},
[192803] = {
true,
false,
"darkorange",
},
[206230] = {
true,
false,
"blue",
},
[197535] = {
true,
false,
"magenta",
},
[174773] = {
true,
false,
"indigo",
},
[84957] = {
true,
false,
"magenta",
},
[168891] = {
true,
false,
"darkorange",
},
[83894] = {
true,
false,
"blue",
},
[173044] = {
true,
false,
"indigo",
},
[214287] = {
true,
false,
"magenta",
},
[198047] = {
true,
false,
"magenta",
},
[40633] = {
true,
false,
"magenta",
},
[200137] = {
true,
false,
"cyan",
},
[128435] = {
true,
false,
"darkorange",
},
[129370] = {
true,
false,
"cyan",
},
[95779] = {
true,
false,
"blue",
},
[86684] = {
true,
false,
"cyan",
},
[205408] = {
true,
false,
"blue",
},
[176565] = {
true,
false,
"cyan",
},
[205337] = {
true,
false,
"cyan",
},
[177891] = {
true,
false,
"cyan",
},
[186284] = {
true,
false,
"blue",
},
[165824] = {
true,
false,
"magenta",
},
[167998] = {
true,
false,
"blue",
},
[163520] = {
true,
false,
"magenta",
},
[150169] = {
true,
false,
"cyan",
},
[40577] = {
true,
false,
"blue",
},
[197985] = {
true,
false,
"cyan",
},
[167615] = {
true,
false,
"indigo",
},
[43873] = {
true,
false,
"white",
},
[190377] = {
true,
false,
"cyan",
},
[135263] = {
true,
false,
"magenta",
},
[45932] = {
true,
false,
"magenta",
},
[102094] = {
true,
false,
"blue",
},
[84767] = {
true,
false,
"blue",
},
[135245] = {
true,
false,
"blue",
},
[59359] = {
true,
false,
"blue",
},
[114626] = {
true,
false,
"cyan",
},
[97788] = {
true,
false,
"indigo",
},
[210966] = {
true,
false,
"magenta",
},
[192680] = {
true,
false,
"blue",
},
[195877] = {
true,
false,
"cyan",
},
[205212] = {
true,
false,
"magenta",
},
[179893] = {
true,
false,
"darkorange",
},
[98706] = {
true,
false,
"indigo",
},
[101839] = {
true,
false,
"darkorange",
},
[164804] = {
true,
false,
"magenta",
},
[102095] = {
true,
false,
"darkorange",
},
[101008] = {
true,
false,
"magenta",
},
[216338] = {
true,
false,
"indigo",
},
[167964] = {
true,
false,
"indigo",
},
[131685] = {
true,
false,
"cyan",
},
[102287] = {
true,
false,
"blue",
},
[167566] = {
true,
false,
"blue",
},
[80937] = {
true,
false,
"indigo",
},
[114632] = {
true,
false,
"magenta",
},
[195696] = {
true,
false,
"blue",
},
[216339] = {
true,
false,
"cyan",
},
[207969] = {
true,
false,
"cyan",
},
[81212] = {
true,
false,
"indigo",
},
[190381] = {
true,
false,
"magenta",
},
[167116] = {
true,
false,
"darkorange",
},
[95766] = {
true,
false,
"indigo",
},
[224276] = {
true,
false,
"blue",
},
[216340] = {
true,
false,
"magenta",
},
[115395] = {
true,
false,
"blue",
},
[167876] = {
true,
false,
"blue",
},
[104270] = {
true,
false,
"blue",
},
[80805] = {
true,
false,
"indigo",
},
[114628] = {
true,
false,
"blue",
},
[205727] = {
true,
false,
"cyan",
},
[228361] = {
true,
false,
"darkorange",
},
[138465] = {
true,
false,
"magenta",
},
[186124] = {
true,
false,
"darkorange",
},
[59552] = {
true,
false,
"cyan",
},
[126919] = {
true,
false,
"cyan",
},
[170690] = {
true,
false,
"blue",
},
[107435] = {
true,
false,
"indigo",
},
[187897] = {
true,
false,
"indigo",
},
[164920] = {
true,
false,
"blue",
},
[179386] = {
true,
false,
"darkorange",
},
[101074] = {
true,
false,
"darkorange",
},
[155090] = {
true,
false,
"cyan",
},
[213338] = {
true,
false,
"magenta",
},
[190128] = {
true,
false,
"white",
},
[186420] = {
true,
false,
"cyan",
},
[195119] = {
true,
false,
"cyan",
},
[224271] = {
true,
false,
"cyan",
},
[167111] = {
true,
false,
"cyan",
},
[136549] = {
true,
false,
"magenta",
},
[164557] = {
true,
false,
"blue",
},
[116549] = {
true,
false,
"cyan",
},
[82597] = {
true,
false,
"blue",
},
[169159] = {
true,
false,
"darkorange",
},
[129527] = {
true,
false,
"blue",
},
[95832] = {
true,
false,
"indigo",
},
[179388] = {
true,
false,
"cyan",
},
[81638] = {
true,
false,
"magenta",
},
[77483] = {
true,
false,
"indigo",
},
[79720] = {
true,
false,
"magenta",
},
[131819] = {
true,
false,
"cyan",
},
[189235] = {
true,
false,
"cyan",
},
[189363] = {
true,
false,
"darkorange",
},
[169927] = {
true,
false,
"blue",
},
[167113] = {
true,
false,
"indigo",
},
[171333] = {
true,
false,
"magenta",
},
[59553] = {
true,
false,
"blue",
},
[137830] = {
true,
false,
"indigo",
},
[96664] = {
true,
false,
"cyan",
},
[212765] = {
true,
false,
"blue",
},
[95769] = {
true,
false,
"cyan",
},
[131436] = {
true,
false,
"indigo",
},
[185528] = {
true,
false,
"cyan",
},
[185656] = {
true,
false,
"cyan",
},
[80935] = {
true,
false,
"indigo",
},
[104273] = {
true,
false,
"indigo",
},
[59873] = {
true,
false,
"magenta",
},
[131821] = {
true,
false,
"magenta",
},
[80936] = {
true,
false,
"blue",
},
[213934] = {
true,
false,
"indigo",
},
[185529] = {
true,
false,
"blue",
},
[169905] = {
true,
false,
"blue",
},
[168394] = {
true,
false,
"magenta",
},
[164506] = {
true,
false,
"magenta",
},
[191243] = {
true,
false,
"darkorange",
},
[187192] = {
true,
false,
"indigo",
},
[203688] = {
true,
false,
"cyan",
},
[223253] = {
true,
false,
"cyan",
},
[45935] = {
true,
false,
"cyan",
},
[95834] = {
true,
false,
"magenta",
},
[189878] = {
true,
false,
"white",
},
[104274] = {
true,
false,
"cyan",
},
[215826] = {
true,
false,
"magenta",
},
[111563] = {
true,
false,
"indigo",
},
[168907] = {
true,
false,
"blue",
},
[195265] = {
true,
false,
"blue",
},
[127111] = {
true,
false,
"blue",
},
[82594] = {
true,
false,
"indigo",
},
[131812] = {
true,
false,
"magenta",
},
[86372] = {
true,
false,
"darkorange",
},
[133870] = {
true,
false,
"magenta",
},
[195876] = {
true,
false,
"indigo",
},
[95771] = {
true,
false,
"cyan",
},
[86809] = {
true,
false,
"indigo",
},
[163457] = {
true,
false,
"magenta",
},
[168942] = {
true,
false,
"indigo",
},
[164929] = {
true,
false,
"indigo",
},
[104275] = {
true,
false,
"blue",
},
[200131] = {
true,
false,
"blue",
},
[114633] = {
true,
false,
"blue",
},
[80938] = {
true,
false,
"blue",
},
[88163] = {
true,
false,
"magenta",
},
[197857] = {
true,
false,
"darkorange",
},
[98521] = {
true,
false,
"blue",
},
[168398] = {
true,
false,
"magenta",
},
[170572] = {
true,
false,
"cyan",
},
[164562] = {
true,
false,
"magenta",
},
[113537] = {
true,
false,
"blue",
},
[95772] = {
true,
false,
"darkorange",
},
[180015] = {
true,
false,
"blue",
},
[185534] = {
true,
false,
"magenta",
},
[115401] = {
true,
false,
"blue",
},
[83026] = {
true,
false,
"blue",
},
[184300] = {
true,
false,
"blue",
},
[164563] = {
true,
false,
"blue",
},
[221979] = {
true,
false,
"magenta",
},
[77700] = {
true,
false,
"magenta",
},
[179269] = {
true,
false,
"blue",
},
[84990] = {
true,
false,
"cyan",
},
[163459] = {
true,
false,
"cyan",
},
[212389] = {
true,
false,
"cyan",
},
[186229] = {
true,
false,
"blue",
},
[224249] = {
true,
false,
"indigo",
},
[174197] = {
true,
false,
"cyan",
},
[194487] = {
true,
false,
"magenta",
},
[95843] = {
true,
false,
"blue",
},
[165076] = {
true,
false,
"cyan",
},
[115402] = {
true,
false,
"blue",
},
[204206] = {
true,
false,
"magenta",
},
[104277] = {
true,
false,
"darkorange",
},
[96677] = {
true,
false,
"blue",
},
[194894] = {
true,
false,
"magenta",
},
[45915] = {
true,
false,
"blue",
},
[174071] = {
true,
false,
"blue",
},
[90997] = {
true,
false,
"indigo",
},
[171343] = {
true,
false,
"blue",
},
[167963] = {
true,
false,
"blue",
},
[115019] = {
true,
false,
"indigo",
},
[191164] = {
true,
false,
"blue",
},
[184131] = {
true,
false,
"blue",
},
[65310] = {
true,
false,
"greenyellow",
},
[98275] = {
true,
false,
"magenta",
},
[194745] = {
true,
false,
"darkorange",
},
[75506] = {
true,
false,
"magenta",
},
[130400] = {
true,
false,
"blue",
},
[104278] = {
true,
false,
"magenta",
},
[114542] = {
true,
false,
"magenta",
},
[114636] = {
true,
false,
"indigo",
},
[196671] = {
true,
false,
"indigo",
},
[220193] = {
true,
false,
"darkorange",
},
[206063] = {
true,
false,
"magenta",
},
[225479] = {
true,
false,
"magenta",
},
[129602] = {
true,
false,
"purple",
},
[204337] = {
true,
false,
"magenta",
},
[131666] = {
true,
false,
"cyan",
},
[91000] = {
true,
false,
"indigo",
},
[216364] = {
true,
false,
"indigo",
},
[129371] = {
true,
false,
"darkorange",
},
[135052] = {
true,
false,
"darkorange",
},
[40167] = {
true,
false,
"magenta",
},
[114544] = {
true,
false,
"indigo",
},
[165251] = {
true,
false,
"darkorange",
},
[190407] = {
true,
false,
"cyan",
},
[79739] = {
true,
false,
"magenta",
},
[150143] = {
true,
false,
"cyan",
},
[168022] = {
true,
false,
"blue",
},
[196576] = {
true,
false,
"magenta",
},
[224219] = {
true,
false,
"cyan",
},
[130404] = {
true,
false,
"magenta",
},
[113998] = {
true,
false,
"indigo",
},
[208440] = {
true,
false,
"indigo",
},
[165911] = {
true,
false,
"blue",
},
[228015] = {
true,
false,
"indigo",
},
[220196] = {
true,
false,
"blue",
},
[129553] = {
true,
false,
"cyan",
},
[41096] = {
true,
false,
"magenta",
},
[134284] = {
true,
false,
"magenta",
},
[165919] = {
true,
false,
"blue",
},
[188100] = {
true,
false,
"magenta",
},
[39960] = {
true,
false,
"darkorange",
},
[171376] = {
true,
false,
"indigo",
},
[220197] = {
true,
false,
"blue",
},
[127106] = {
true,
false,
"blue",
},
[183424] = {
true,
false,
"cyan",
},
[214443] = {
true,
false,
"magenta",
},
[96608] = {
true,
false,
"darkorange",
},
[168934] = {
true,
false,
"blue",
},
[170838] = {
true,
false,
"blue",
},
[213932] = {
true,
false,
"blue",
},
[129600] = {
true,
false,
"cyan",
},
[180429] = {
true,
false,
"indigo",
},
[115406] = {
true,
false,
"darkorange",
},
[196202] = {
true,
false,
"cyan",
},
[58822] = {
true,
false,
"blue",
},
[80816] = {
true,
false,
"magenta",
},
[92610] = {
true,
false,
"magenta",
},
},
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
["Author"] = "Kastfall-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["Name"] = "Color Automation [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Time"] = 1547392935,
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Hide Neutral Units [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Time"] = 1541606242,
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["version"] = -1,
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["Name"] = "Reorder Nameplate [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["Name"] = "Don't Have Aura [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Time"] = 1554138845,
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Name"] = "Players Targeting a Target [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Time"] = 1548278227,
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
["Author"] = "Tecno-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Name"] = "Extra Border [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Time"] = 1547409079,
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Name"] = "Current Target Color [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Time"] = 1552354619,
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1608663128,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 356,
["Options"] = {
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["version"] = -1,
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["Name"] = "Aura Reorder [Plater]",
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["version"] = -1,
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["Name"] = "Cast Bar Icon Settings [P]",
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
["Author"] = "Ahwa-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["Name"] = "Execute Range [Plater]",
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Time"] = 1547406548,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1675433748,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 364,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Attacking Specific Unit [Plater]",
["HooksTemp"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["version"] = -1,
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["Name"] = "Combo Points [Plater]",
},
{
["OptionsValues"] = {
["iconAnchorSide"] = 2,
["iconSize"] = 14,
["textSize"] = 8,
["iconAnchorX"] = 16,
["textFontFace"] = "GennUI",
["iconAnchorY"] = 2,
["textColor"] = {
1,
1,
1,
1,
},
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local strText = \"\"\n    \n    if unitFrame and unitFrame.namePlateIsQuestObjective then\n        unitFrame.healthBar:Show()\n        \n        --check for only in combat\n        if (not modTable.config['ShowInCombat'] and InCombatLockdown()) then\n            unitFrame.questProgressIconFrame:Hide();\n            unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n            return \n        end\n        \n        for i, questInfo in ipairs(unitFrame.QuestInfo) do\n            if questInfo.yourQuest and not questInfo.finished then\n                local qtext = questInfo.questText:lower()\n                local name, realm = UnitName(unitId)\n                \n                local name_segments = {}\n                for w in string.gmatch (name, \"%w+\") do\n                    name_segments[#name_segments + 1] = w\n                end\n                if name_segments[1] then name = string.lower(name_segments[1]) else name = \"err\" end\n                \n                \n                -- Percentage quest\n                if not questInfo.total then\n                    local curr = unitFrame.QuestAmountCurrent or 0\n                    if modTable.config['percentRemaining'] then\n                        strText = math.floor(100 - curr) .. \"%\"\n                    else\n                        strText = math.floor(curr) .. \"%\"\n                    end\n                    if unitFrame.PlayerCannotAttack then\n                        unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuest);\n                        break\n                    else\n                        unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                        break\n                    end\n                    \n                    -- Generic quest\n                elseif (\n                    string.find(qtext, \"mount\")\n                    or string.find(qtext, \"take\")\n                    or string.find(qtext, \"meet\")\n                    or string.find(qtext, \"rescue\")\n                    or string.find(qtext, \"find\")\n                    or string.find(qtext, \"return\")\n                    or string.find(qtext, \"consume\")\n                    or string.find(qtext, \"follow\")\n                    or string.find(qtext, \"have\")\n                    or string.find(qtext, \"complete\")\n                    or string.find(qtext, \"rouse\")\n                    or string.find(qtext, \"give\")\n                    or string.find(qtext, \"disperse\")\n                    or string.find(qtext, \"review\")\n                    or string.find(qtext, \"assess\")\n                    or string.find(qtext, \"help\")\n                ) then\n                    if (tonumber(questInfo.total) > 1) then\n                        strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    else\n                        strText = \"\"\n                    end\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuest);\n                    break                    \n                    \n                    -- Speak quest\n                elseif (\n                    string.find(qtext, \"speak\")\n                    or string.find(qtext, \"talk\")\n                    or string.find(qtext, \"lead\")\n                    or string.find(qtext, \"witness\")\n                    or string.find(qtext, \"listen\")\n                    or string.find(qtext, \"ask\")\n                    or string.find(qtext, \"investigate\")\n                    or string.find(qtext, \"reassure\")\n                    or string.find(qtext, \"heard\")\n                    or string.find(qtext, \"tell\")\n                    or string.find(qtext, \"check on\")\n                    or string.find(qtext, \"interrogat\")\n                    or string.find(qtext, \"question\")\n                    or string.find(qtext, \"interview\")\n                    or string.find(qtext, \"recruit\")\n                    or string.find(qtext, \"found\")\n                    or string.find(qtext, \"report\")\n                    or string.find(qtext, \"encourage\")\n                    or string.find(qtext, \"spoke\")\n                ) then\n                    if (tonumber(questInfo.total) > 1) then\n                        strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    else\n                        strText = \"\"\n                    end\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconSpeak);\n                    break                    \n                    \n                    -- Kill Quest\n                elseif (tonumber(questInfo.total)) and (\n                    string.find(qtext, \"slain\") \n                    or string.find(qtext, \"killed\") \n                    or string.find(qtext, \"kill\") \n                    or string.find(qtext, \"confront\") \n                    or string.find(qtext, \"subdued\")\n                    or string.find(qtext, \"protect\")\n                    or string.find(qtext, \"scuttled\")\n                    or string.find(qtext, \"spar\")\n                    --                    or string.find(qtext, name)\n                ) then\n                    strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                    break\n                    \n                    -- Loot Quest\n                elseif (tonumber(questInfo.total)) then\n                    strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconBag);\n                    break\n                    \n                    \n                    -- Use item quest\n                    --                elseif \n                    --                    strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    --                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuestParts);\n                    --                    break                    \n                    -- Generic quest\n                else\n                    if (tonumber(questInfo.total) > 1) then\n                        strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    else\n                        strText = \"\"\n                    end\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuest);\n                    break                    \n                end\n            end \n        end\n        \n        unitFrame.questProgressIconFrame:Show();\n        unitFrame.healthBar.questProgressTextFrame:SetText(strText)\n    else\n        unitFrame.questProgressIconFrame:Hide();\n        unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    --insert code here\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- positioning\n    local iconAnchor = {\n        side = modTable.config['iconAnchorSide'],\n        x = modTable.config['iconAnchorX'],\n        y = modTable.config['iconAnchorY'],\n    };\n    \n    -- icon options\n    envTable.iconSkull = [[Interface\\TargetingFrame\\UI-RaidTargetingIcon_8]];\n    envTable.iconBag = [[Interface\\GroupFrame\\UI-Group-MasterLooter]];\n    envTable.iconSpeak = [[Interface\\GossipFrame\\GossipGossipIcon]];\n    envTable.iconQuest = [[Interface\\GossipFrame\\AvailableQuestIcon]];\n    envTable.iconQuestParts = [[Interface\\QuestFrame\\AutoQuest-Parts]]\n    \n    ------------------------------------------------------------------------------------------------------------- \n    --frames:\n    \n    --create the icon frame that will show the quest need\n    envTable.questProgressIconFrame = unitFrame.questProgressIconFrame or unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n    envTable.questProgressIconFrame:SetTexture (modTable.config['iconQuest'])\n    envTable.questProgressIconFrame:SetSize (modTable.config['iconSize'], modTable.config['iconSize'])\n    \n    --Plater:SetFrameStrata (envTable.questProgressIconFrame, modTable.config['iconStrata']);\n    --envTable.questProgressIconFrame:SetFrameStrata (modTable.config['iconStrata'])\n    Plater.SetAnchor (envTable.questProgressIconFrame, iconAnchor)\n    unitFrame.questProgressIconFrame = envTable.questProgressIconFrame\n    \n    \n    --create the text frame that will show the quest progress\n    envTable.questProgressTextFrame = unitFrame.healthBar.questProgressTextFrame or Plater:CreateLabel (unitFrame.healthBar);\n    Plater:SetFontFace (envTable.questProgressTextFrame, modTable.config['textFontFace']);\n    Plater:SetFontSize (envTable.questProgressTextFrame, modTable.config['textSize']);\n    Plater:SetFontColor (envTable.questProgressTextFrame, modTable.config['textColor']);\n    Plater:SetFontOutline (envTable.questProgressTextFrame, modTable.config['textOutline']);\n    DetailsFramework:SetFontShadow (envTable.questProgressTextFrame, 0, 0, 0, modTable.config['textShadowAlpha']);\n    envTable.questProgressTextFrame:SetPoint (modTable.config['textAnchor'], unitFrame.questProgressIconFrame, modTable.config['textIconAnchor'], modTable.config['textX'], modTable.config['textY']);\n    unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n    envTable.questProgressTextFrame:SetText(\"\")\n    \nend",
},
["Time"] = 1725210713,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/PMdq2Rg_N/27",
["Icon"] = "INTERFACE\\ICONS\\Ability_Hunter_SniperShot",
["Enabled"] = true,
["Revision"] = 5217,
["semver"] = "1.0.26",
["Author"] = "Evolutious",
["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
["Prio"] = 99,
["Name"] = "QuestProgress",
["PlaterCore"] = 1,
["version"] = 27,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local strText = \"\"\n    \n    if unitFrame and unitFrame.namePlateIsQuestObjective then\n        unitFrame.healthBar:Show()\n        \n        --check for only in combat\n        if (not modTable.config['ShowInCombat'] and InCombatLockdown()) then\n            unitFrame.questProgressIconFrame:Hide();\n            unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n            return \n        end\n        \n        for i, questInfo in ipairs(unitFrame.QuestInfo) do\n            if questInfo.yourQuest and not questInfo.finished then\n                local qtext = questInfo.questText:lower()\n                local name, realm = UnitName(unitId)\n                \n                local name_segments = {}\n                for w in string.gmatch (name, \"%w+\") do\n                    name_segments[#name_segments + 1] = w\n                end\n                if name_segments[1] then name = string.lower(name_segments[1]) else name = \"err\" end\n                \n                \n                -- Percentage quest\n                if not questInfo.total then\n                    local curr = unitFrame.QuestAmountCurrent or 0\n                    if modTable.config['percentRemaining'] then\n                        strText = math.floor(100 - curr) .. \"%\"\n                    else\n                        strText = math.floor(curr) .. \"%\"\n                    end\n                    if unitFrame.PlayerCannotAttack then\n                        unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuest);\n                        break\n                    else\n                        unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                        break\n                    end\n                    \n                    -- Generic quest\n                elseif (\n                    string.find(qtext, \"mount\")\n                    or string.find(qtext, \"take\")\n                    or string.find(qtext, \"meet\")\n                    or string.find(qtext, \"rescue\")\n                    or string.find(qtext, \"find\")\n                    or string.find(qtext, \"return\")\n                    or string.find(qtext, \"consume\")\n                    or string.find(qtext, \"follow\")\n                    or string.find(qtext, \"have\")\n                    or string.find(qtext, \"complete\")\n                    or string.find(qtext, \"rouse\")\n                    or string.find(qtext, \"give\")\n                    or string.find(qtext, \"disperse\")\n                    or string.find(qtext, \"review\")\n                    or string.find(qtext, \"assess\")\n                    or string.find(qtext, \"help\")\n                ) then\n                    if (tonumber(questInfo.total) > 1) then\n                        strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    else\n                        strText = \"\"\n                    end\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuest);\n                    break                    \n                    \n                    -- Speak quest\n                elseif (\n                    string.find(qtext, \"speak\")\n                    or string.find(qtext, \"talk\")\n                    or string.find(qtext, \"lead\")\n                    or string.find(qtext, \"witness\")\n                    or string.find(qtext, \"listen\")\n                    or string.find(qtext, \"ask\")\n                    or string.find(qtext, \"investigate\")\n                    or string.find(qtext, \"reassure\")\n                    or string.find(qtext, \"heard\")\n                    or string.find(qtext, \"tell\")\n                    or string.find(qtext, \"check on\")\n                    or string.find(qtext, \"interrogat\")\n                    or string.find(qtext, \"question\")\n                    or string.find(qtext, \"interview\")\n                    or string.find(qtext, \"recruit\")\n                    or string.find(qtext, \"found\")\n                    or string.find(qtext, \"report\")\n                    or string.find(qtext, \"encourage\")\n                    or string.find(qtext, \"spoke\")\n                ) then\n                    if (tonumber(questInfo.total) > 1) then\n                        strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    else\n                        strText = \"\"\n                    end\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconSpeak);\n                    break                    \n                    \n                    -- Kill Quest\n                elseif (tonumber(questInfo.total)) and (\n                    string.find(qtext, \"slain\") \n                    or string.find(qtext, \"killed\") \n                    or string.find(qtext, \"kill\") \n                    or string.find(qtext, \"confront\") \n                    or string.find(qtext, \"subdued\")\n                    or string.find(qtext, \"protect\")\n                    or string.find(qtext, \"scuttled\")\n                    or string.find(qtext, \"spar\")\n                    --                    or string.find(qtext, name)\n                ) then\n                    strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                    break\n                    \n                    -- Loot Quest\n                elseif (tonumber(questInfo.total)) then\n                    strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconBag);\n                    break\n                    \n                    \n                    -- Use item quest\n                    --                elseif \n                    --                    strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    --                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuestParts);\n                    --                    break                    \n                    -- Generic quest\n                else\n                    if (tonumber(questInfo.total) > 1) then\n                        strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    else\n                        strText = \"\"\n                    end\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuest);\n                    break                    \n                end\n            end \n        end\n        \n        unitFrame.questProgressIconFrame:Show();\n        unitFrame.healthBar.questProgressTextFrame:SetText(strText)\n    else\n        unitFrame.questProgressIconFrame:Hide();\n        unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    --insert code here\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- positioning\n    local iconAnchor = {\n        side = modTable.config['iconAnchorSide'],\n        x = modTable.config['iconAnchorX'],\n        y = modTable.config['iconAnchorY'],\n    };\n    \n    -- icon options\n    envTable.iconSkull = [[Interface\\TargetingFrame\\UI-RaidTargetingIcon_8]];\n    envTable.iconBag = [[Interface\\GroupFrame\\UI-Group-MasterLooter]];\n    envTable.iconSpeak = [[Interface\\GossipFrame\\GossipGossipIcon]];\n    envTable.iconQuest = [[Interface\\GossipFrame\\AvailableQuestIcon]];\n    envTable.iconQuestParts = [[Interface\\QuestFrame\\AutoQuest-Parts]]\n    \n    ------------------------------------------------------------------------------------------------------------- \n    --frames:\n    \n    --create the icon frame that will show the quest need\n    envTable.questProgressIconFrame = unitFrame.questProgressIconFrame or unitFrame.healthBar:CreateTexture (nil, \"overlay\")\n    envTable.questProgressIconFrame:SetTexture (modTable.config['iconQuest'])\n    envTable.questProgressIconFrame:SetSize (modTable.config['iconSize'], modTable.config['iconSize'])\n    \n    --Plater:SetFrameStrata (envTable.questProgressIconFrame, modTable.config['iconStrata']);\n    --envTable.questProgressIconFrame:SetFrameStrata (modTable.config['iconStrata'])\n    Plater.SetAnchor (envTable.questProgressIconFrame, iconAnchor)\n    unitFrame.questProgressIconFrame = envTable.questProgressIconFrame\n    \n    \n    --create the text frame that will show the quest progress\n    envTable.questProgressTextFrame = unitFrame.healthBar.questProgressTextFrame or Plater:CreateLabel (unitFrame.healthBar);\n    Plater:SetFontFace (envTable.questProgressTextFrame, modTable.config['textFontFace']);\n    Plater:SetFontSize (envTable.questProgressTextFrame, modTable.config['textSize']);\n    Plater:SetFontColor (envTable.questProgressTextFrame, modTable.config['textColor']);\n    Plater:SetFontOutline (envTable.questProgressTextFrame, modTable.config['textOutline']);\n    DetailsFramework:SetFontShadow (envTable.questProgressTextFrame, 0, 0, 0, modTable.config['textShadowAlpha']);\n    envTable.questProgressTextFrame:SetPoint (modTable.config['textAnchor'], unitFrame.questProgressIconFrame, modTable.config['textIconAnchor'], modTable.config['textX'], modTable.config['textY']);\n    unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n    envTable.questProgressTextFrame:SetText(\"\")\n    \nend",
},
["Options"] = {
{
["Type"] = 4,
["Name"] = "Quest Percent Remaining",
["Value"] = false,
["Key"] = "percentRemaining",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set this if you want percent based quests to reflect the amount progressed or the amount remaining.",
},
{
["Type"] = 4,
["Name"] = "Show In Combat",
["Value"] = true,
["Key"] = "ShowInCombat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "This setting determins if quest NPC nameplates are always shown when in combat, even if not targeted or engaged",
},
{
["Type"] = 6,
["Name"] = "Option 17",
["Value"] = 0,
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 16",
["Value"] = "Changing the below settings require a /reload to take effect",
["Key"] = "option16",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
0.36862745098039,
0,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Sets the text color",
},
{
["Type"] = 3,
["Name"] = "Text Font",
["Value"] = "Friz Quadrata TT",
["Key"] = "textFontFace",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Set this to the font you wish to use over the quest icon. You will need to set this manually. Default is: Friz Quadrata TT",
},
{
["Type"] = 2,
["Max"] = 64,
["Desc"] = "Sets the text size",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textSize",
},
{
["Type"] = 3,
["Name"] = "Text Outline",
["Value"] = "OUTLINE",
["Key"] = "textOutline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Set the outline of the text. Options: NONE, OUTLINE, THICKOUTLINE. Default is: OUTLINE",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Sets the text shadow alpha. Options: 0 = Transparent, 1 = 100% Solid",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Text Shadow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textShadowAlpha",
},
{
["Type"] = 2,
["Max"] = 64,
["Desc"] = "Adjusts the text left and right",
["Min"] = -64,
["Fraction"] = false,
["Value"] = 2,
["Name"] = "Text X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textX",
},
{
["Type"] = 2,
["Max"] = 64,
["Desc"] = "Adjusts the text up and down",
["Min"] = -64,
["Fraction"] = false,
["Value"] = -4,
["Name"] = "Text Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textY",
},
{
["Type"] = 3,
["Name"] = "Text Anchor",
["Value"] = "CENTER",
["Key"] = "textAnchor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Sets the anchor point for the text. Options: CENTER, TOP BOTTOM, TOPLEFT, LEFT, BOTTOMLEFT, TOPRIGHT, RIGHT, BOTTOMRIGHT",
},
{
["Type"] = 3,
["Name"] = "Text Anchor to Icon",
["Value"] = "CENTER",
["Key"] = "textIconAnchor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Sets the anchor point for the text relative to the icon. Options: CENTER, TOP BOTTOM, TOPLEFT, LEFT, BOTTOMLEFT, TOPRIGHT, RIGHT, BOTTOMRIGHT",
},
{
["Type"] = 6,
["Name"] = "Option 22",
["Value"] = 0,
["Key"] = "option22",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 64,
["Desc"] = "Sets the icon size",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 12,
["Name"] = "Icon Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSize",
},
{
["Type"] = 2,
["Max"] = 8,
["Desc"] = "Sets the anchor point for the icon. Options: 1 = TOP LEFT, 2 = LEFT, 3 = BOTTOM LEFT, 4 = BOTTOM, 5 = BOTTOM RIGHT, 6 = RIGHT, 7 = TOP RIGHT, 8 = TOP",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 6,
["Name"] = "Icon Anchor Side",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconAnchorSide",
},
{
["Type"] = 2,
["Max"] = 64,
["Desc"] = "Adjusts the icon left and right",
["Min"] = -64,
["Fraction"] = false,
["Value"] = 4,
["Name"] = "Icon Anchor X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconAnchorX",
},
{
["Type"] = 2,
["Max"] = 64,
["Desc"] = "Adjusts the icon up and down",
["Min"] = -64,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "icon Anchor Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconAnchorY",
},
{
["Type"] = 3,
["Name"] = "Icon Strata",
["Value"] = "BACKGROUND",
["Key"] = "iconStrata",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Set the icon strata. Options: BACKGROUND, LOW, MEDIUM, HIGH, DIALOG, FULLSCREEN, FULLSCREEN_DIALOG, TOOLTIP",
},
{
["Type"] = 6,
["Name"] = "Option 16",
["Value"] = 0,
["Key"] = "option16",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
["ignore_color_changes"] = true,
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local unitFrameGUID = UnitGUID(self.unit)\n    \n    if modTable.shouldIgnoreNpcId(self) or\n    not Plater.IsInCombat() or \n    not self.InCombat or \n    UnitPlayerControlled(self.unit)\n    then\n        envTable.hideAggroOverlay(self);\n        return\n    end        \n    \n    local targetGUID = UnitGUID(self.targetUnitID or '')\n    \n    if (targetGUID and targetGUID ~= self._lastTargetUnitID) then\n        self._lastTargetUnitID = targetGUID\n        if (modTable.playerHasAggro(self)) then\n            envTable.showAggroOverlay(self);\n        else\n            envTable.hideAggroOverlay(self);\n        end\n    end\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local unitFrameGUID = UnitGUID(self.unit)\n    \n    if modTable.shouldIgnoreNpcId(self) or\n    not Plater.IsInCombat() or \n    not self.InCombat or \n    UnitPlayerControlled(self.unit)\n    then\n        envTable.hideAggroOverlay(self);\n        return\n    end        \n    \n    local targetGUID = UnitGUID(self.targetUnitID or '')\n    \n    if (targetGUID and targetGUID ~= self._lastTargetUnitID) then\n        self._lastTargetUnitID = targetGUID\n        if (modTable.playerHasAggro(self)) then\n            envTable.showAggroOverlay(self);\n        else\n            envTable.hideAggroOverlay(self);\n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    --[[\n        Checks if npcId should be ignored or not\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {bool}\n    --]]\n    function modTable.shouldIgnoreNpcId(unitFrame)\n        local unitId = unitFrame.unitId\n        \n        return unitFrame.isPerformanceUnit\n    end\n    \n    --[[\n        Checks if player has aggro\n\n        @return {Boolean}\n    --]]\n    function modTable.playerHasAggro(unitFrame)\n        if (modTable.config['testing'] == true) then\n            if (not modTable.config['ignore_color_changes']) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n            end\n            \n            return true;\n        end\n        \n        if (not Plater.IsInCombat()) then\n            return false;\n        end\n        \n        if (not unitFrame.InCombat) then\n            return false;\n        end\n        \n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return false;\n        end\n        \n        if (Plater.PlayerIsTank) then\n            if (not unitFrame.namePlateThreatIsTanking) then\n                if (not modTable.config['ignore_color_changes']) then\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        else\n            local tanks = Plater.GetTanks();\n            local targetOfTarget = UnitName(unitFrame.targetUnitID or '');\n            local targetOfTargetIsPlayer = targetOfTarget == UnitName('player');\n            local unitIsNotAttackingTank = false;\n            \n            if (Plater.db.profile.aggro_can_check_notank) then\n                unitIsNotAttackingTank = (\n                    targetOfTarget and \n                    not tanks[targetOfTarget]\n                );\n            end\n            \n            if (unitFrame.namePlateThreatIsTanking or unitIsNotAttackingTank) then\n                if (Plater.db.profile.aggro_can_check_notank and unitIsNotAttackingTank and not targetOfTargetIsPlayer) then\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.notontank);\n                    end\n                else\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro);\n                    end\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local textureHeight = self.healthBar:GetHeight() * 4;\n    local textureWidth = textureHeight * 2;\n    \n    unitFrame._currentColor = nil;\n    \n    --[[\n        @var {Table}\n    --]]\n    envTable.TEXTURE_CONFIG = {\n        ['height'] = textureHeight,\n        ['width'] = textureWidth\n    };\n    \n    --[[\n        @var {String}\n    --]]\n    envTable.TEXTURE_PATH = [[Interface\\Addons\\SharedMedia_MyMedia\\background\\Neon_AggroOverlayWhiteSingle.tga]];\n    \n    --[[ \n        Creates the overlay frame if it doesn't exist\n    \n        @param  {Plater.unitFrame}  unitFrame\n    \n        @return {void}\n    --]]\n    function envTable.createFrameIfNotExists(unitFrame)\n        local healthBar = unitFrame.healthBar;\n        \n        if (not healthBar.aggroOverlayLeft) then\n            healthBar.aggroOverlayLeft = envTable.createOverlayFrame(\n                healthBar, \n                'left', \n                -10 - math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayLeft.overlayTexture:SetTexCoord(0, 1, 1, 0);\n        end\n        \n        if (not healthBar.aggroOverlayRight) then\n            healthBar.aggroOverlayRight = envTable.createOverlayFrame(\n                healthBar, \n                'right', \n                10 + math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayRight.overlayTexture:SetTexCoord(1, 0, 0, 1);\n        end\n        \n        if (not healthBar.targetOfTargetText) then\n            unitFrame._currentTargetName = '';\n            healthBar.targetOfTargetText = envTable.createTargetOfTargetFrame(\n                healthBar\n            );\n        end\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame.healthBar}  healthBar\n\n        @return {Frame}\n    --]]\n    function envTable.createTargetOfTargetFrame(healthBar)\n        local textFrame = Plater:CreateLabel(healthBar);        \n        textFrame:SetPoint('topleft', healthBar, 'topleft', 0, 5);\n        textFrame.textcolor = 'white';\n        textFrame.textsize = 7;\n        textFrame.outline = 'OUTLINE';\n        textFrame:Show();\n        \n        return textFrame;\n    end\n    \n    --[[ \n        Creates the overlay frame\n    \n        @param  {Plater.unitFrame.healthbar}  healthBar\n        @param  {String}  originPoint\n        @param  {Number}  posX\n        @param  {Number}  posY\n    \n        @return {Frame}\n    --]]\n    function envTable.createOverlayFrame(healthBar, originPoint, posX, posY)\n        local overlayFrame = CreateFrame('frame', nil, healthBar);\n        overlayFrame:SetFrameLevel(healthBar:GetFrameLevel());\n        overlayFrame:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        \n        local overlayColorR, overlayColorG, overlayColorB = DetailsFramework:ParseColors (Plater.db.profile.tank.colors.noaggro);\n        local overlayTexture = Plater:CreateImage(overlayFrame, envTable.TEXTURE_PATH);\n        overlayTexture:SetVertexColor(overlayColorR, overlayColorG, overlayColorB);\n        overlayTexture:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        overlayTexture:SetSize(envTable.TEXTURE_CONFIG['width'], envTable.TEXTURE_CONFIG['height']);\n        \n        overlayFrame.overlayTexture = overlayTexture;\n        overlayFrame:Show();\n        \n        return overlayFrame;\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame}  unitFrame\n        @param  {String}  targetUnitID\n\n        @return {Frame}\n    --]]\n    function envTable.updateTargetOfTarget(unitFrame, targetUnitID)\n        local targetText = unitFrame.healthBar.targetOfTargetText;\n        local targetUnitName = UnitName(targetUnitID or '') or '';\n        \n        if modTable.config['disableTargetOfTarget'] then\n            targetUnitName = ' '\n        end\n        \n        if (targetUnitName == UnitName('player')) then\n            targetUnitName = '';\n        end\n        \n        if (unitFrame._currentTargetName == targetUnitName) then\n            return;\n        end\n        \n        unitFrame._currentTargetName = targetUnitName;\n        targetText.text = targetUnitName;\n        \n        local _, class = UnitClass(targetUnitID or '');\n        \n        if (class and UnitIsPlayer(targetUnitID or '')) then\n            targetText.textcolor = DetailsFramework:ParseColors(class);\n        else\n            targetText.textcolor = Plater.db.profile.castbar_target_color;\n        end\n    end\n    \n    --[[\n        Updates the aggro overlay texture color\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.updateAggroOverlayColor(unitFrame)\n        local colorR, colorG, colorB, colorA = DetailsFramework:ParseColors(unitFrame.healthBar:GetColor());\n        local qualifiedColor = envTable.qualifyColor(colorR, colorG, colorB, colorA);\n        \n        if (unitFrame._currentColor == qualifiedColor) then\n            return;\n        end\n        \n        unitFrame._currentColor = qualifiedColor;\n        \n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n    end\n    \n    --[[\n        Qualifies a color to a cacheable string\n\n        @param  {Number}  r\n        @param  {Number}  g\n        @param  {Number}  b\n        @param  {Number}  a\n\n        @return {String}\n    --]]\n    function envTable.qualifyColor(r, g, b, a)\n        return tostring(r) .. tostring(g) .. tostring(b) .. tostring(a);\n    end\n    \n    --[[ \n        Shows the overlay frames\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.showAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, unitFrame.targetUnitID);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Show();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Show();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\n    \n    --[[ \n        Hides the overlay frames\n\n        @return {void}\n    --]]\n    function envTable.hideAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, nil);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Hide();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Hide();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\nend",
},
["Time"] = 1728636588,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/AUO8fWcea/8",
["Icon"] = 237529,
["Enabled"] = true,
["Revision"] = 454,
["semver"] = "2.1.3",
["Author"] = "Allessiel-Azralon",
["Desc"] = "Smart aggro overlay to nameplates",
["Prio"] = 99,
["Name"] = "Allessiel Smart Aggro Overlay for Tanks",
["PlaterCore"] = 1,
["version"] = 8,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local unitFrameGUID = UnitGUID(self.unit)\n    \n    if modTable.shouldIgnoreNpcId(self) or\n    not Plater.IsInCombat() or \n    not self.InCombat or \n    UnitPlayerControlled(self.unit)\n    then\n        envTable.hideAggroOverlay(self);\n        return\n    end        \n    \n    local targetGUID = UnitGUID(self.targetUnitID or '')\n    \n    if (targetGUID and targetGUID ~= self._lastTargetUnitID) then\n        self._lastTargetUnitID = targetGUID\n        if (modTable.playerHasAggro(self)) then\n            envTable.showAggroOverlay(self);\n        else\n            envTable.hideAggroOverlay(self);\n        end\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local unitFrameGUID = UnitGUID(self.unit)\n    \n    if modTable.shouldIgnoreNpcId(self) or\n    not Plater.IsInCombat() or \n    not self.InCombat or \n    UnitPlayerControlled(self.unit)\n    then\n        envTable.hideAggroOverlay(self);\n        return\n    end        \n    \n    local targetGUID = UnitGUID(self.targetUnitID or '')\n    \n    if (targetGUID and targetGUID ~= self._lastTargetUnitID) then\n        self._lastTargetUnitID = targetGUID\n        if (modTable.playerHasAggro(self)) then\n            envTable.showAggroOverlay(self);\n        else\n            envTable.hideAggroOverlay(self);\n        end\n    end\nend",
["Initialization"] = "function (modTable)\n    --[[\n        Checks if npcId should be ignored or not\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {bool}\n    --]]\n    function modTable.shouldIgnoreNpcId(unitFrame)\n        local unitId = unitFrame.unitId\n        \n        return unitFrame.isPerformanceUnit\n    end\n    \n    --[[\n        Checks if player has aggro\n\n        @return {Boolean}\n    --]]\n    function modTable.playerHasAggro(unitFrame)\n        if (modTable.config['testing'] == true) then\n            if (not modTable.config['ignore_color_changes']) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n            end\n            \n            return true;\n        end\n        \n        if (not Plater.IsInCombat()) then\n            return false;\n        end\n        \n        if (not unitFrame.InCombat) then\n            return false;\n        end\n        \n        if (UnitPlayerControlled(unitFrame.unit)) then\n            return false;\n        end\n        \n        if (Plater.PlayerIsTank) then\n            if (not unitFrame.namePlateThreatIsTanking) then\n                if (not modTable.config['ignore_color_changes']) then\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro);\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        else\n            local tanks = Plater.GetTanks();\n            local targetOfTarget = UnitName(unitFrame.targetUnitID or '');\n            local targetOfTargetIsPlayer = targetOfTarget == UnitName('player');\n            local unitIsNotAttackingTank = false;\n            \n            if (Plater.db.profile.aggro_can_check_notank) then\n                unitIsNotAttackingTank = (\n                    targetOfTarget and \n                    not tanks[targetOfTarget]\n                );\n            end\n            \n            if (unitFrame.namePlateThreatIsTanking or unitIsNotAttackingTank) then\n                if (Plater.db.profile.aggro_can_check_notank and unitIsNotAttackingTank and not targetOfTargetIsPlayer) then\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.notontank);\n                    end\n                else\n                    if (not modTable.config['ignore_color_changes']) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro);\n                    end\n                end\n                \n                return true;\n            else\n                return false;\n            end\n        end\n    end\nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local textureHeight = self.healthBar:GetHeight() * 4;\n    local textureWidth = textureHeight * 2;\n    \n    unitFrame._currentColor = nil;\n    \n    --[[\n        @var {Table}\n    --]]\n    envTable.TEXTURE_CONFIG = {\n        ['height'] = textureHeight,\n        ['width'] = textureWidth\n    };\n    \n    --[[\n        @var {String}\n    --]]\n    envTable.TEXTURE_PATH = [[Interface\\Addons\\SharedMedia_MyMedia\\background\\Neon_AggroOverlayWhiteSingle.tga]];\n    \n    --[[ \n        Creates the overlay frame if it doesn't exist\n    \n        @param  {Plater.unitFrame}  unitFrame\n    \n        @return {void}\n    --]]\n    function envTable.createFrameIfNotExists(unitFrame)\n        local healthBar = unitFrame.healthBar;\n        \n        if (not healthBar.aggroOverlayLeft) then\n            healthBar.aggroOverlayLeft = envTable.createOverlayFrame(\n                healthBar, \n                'left', \n                -10 - math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayLeft.overlayTexture:SetTexCoord(0, 1, 1, 0);\n        end\n        \n        if (not healthBar.aggroOverlayRight) then\n            healthBar.aggroOverlayRight = envTable.createOverlayFrame(\n                healthBar, \n                'right', \n                10 + math.floor(envTable.TEXTURE_CONFIG['width'] / 2), \n                0\n            );\n            \n            healthBar.aggroOverlayRight.overlayTexture:SetTexCoord(1, 0, 0, 1);\n        end\n        \n        if (not healthBar.targetOfTargetText) then\n            unitFrame._currentTargetName = '';\n            healthBar.targetOfTargetText = envTable.createTargetOfTargetFrame(\n                healthBar\n            );\n        end\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame.healthBar}  healthBar\n\n        @return {Frame}\n    --]]\n    function envTable.createTargetOfTargetFrame(healthBar)\n        local textFrame = Plater:CreateLabel(healthBar);        \n        textFrame:SetPoint('topleft', healthBar, 'topleft', 0, 5);\n        textFrame.textcolor = 'white';\n        textFrame.textsize = 7;\n        textFrame.outline = 'OUTLINE';\n        textFrame:Show();\n        \n        return textFrame;\n    end\n    \n    --[[ \n        Creates the overlay frame\n    \n        @param  {Plater.unitFrame.healthbar}  healthBar\n        @param  {String}  originPoint\n        @param  {Number}  posX\n        @param  {Number}  posY\n    \n        @return {Frame}\n    --]]\n    function envTable.createOverlayFrame(healthBar, originPoint, posX, posY)\n        local overlayFrame = CreateFrame('frame', nil, healthBar);\n        overlayFrame:SetFrameLevel(healthBar:GetFrameLevel());\n        overlayFrame:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        \n        local overlayColorR, overlayColorG, overlayColorB = DetailsFramework:ParseColors (Plater.db.profile.tank.colors.noaggro);\n        local overlayTexture = Plater:CreateImage(overlayFrame, envTable.TEXTURE_PATH);\n        overlayTexture:SetVertexColor(overlayColorR, overlayColorG, overlayColorB);\n        overlayTexture:SetPoint(originPoint, healthBar, originPoint, posX, posY);\n        overlayTexture:SetSize(envTable.TEXTURE_CONFIG['width'], envTable.TEXTURE_CONFIG['height']);\n        \n        overlayFrame.overlayTexture = overlayTexture;\n        overlayFrame:Show();\n        \n        return overlayFrame;\n    end\n    \n    --[[\n        Creates the target of target text frame\n\n        @param  {Plater.unitFrame}  unitFrame\n        @param  {String}  targetUnitID\n\n        @return {Frame}\n    --]]\n    function envTable.updateTargetOfTarget(unitFrame, targetUnitID)\n        local targetText = unitFrame.healthBar.targetOfTargetText;\n        local targetUnitName = UnitName(targetUnitID or '') or '';\n        \n        if modTable.config['disableTargetOfTarget'] then\n            targetUnitName = ' '\n        end\n        \n        if (targetUnitName == UnitName('player')) then\n            targetUnitName = '';\n        end\n        \n        if (unitFrame._currentTargetName == targetUnitName) then\n            return;\n        end\n        \n        unitFrame._currentTargetName = targetUnitName;\n        targetText.text = targetUnitName;\n        \n        local _, class = UnitClass(targetUnitID or '');\n        \n        if (class and UnitIsPlayer(targetUnitID or '')) then\n            targetText.textcolor = DetailsFramework:ParseColors(class);\n        else\n            targetText.textcolor = Plater.db.profile.castbar_target_color;\n        end\n    end\n    \n    --[[\n        Updates the aggro overlay texture color\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.updateAggroOverlayColor(unitFrame)\n        local colorR, colorG, colorB, colorA = DetailsFramework:ParseColors(unitFrame.healthBar:GetColor());\n        local qualifiedColor = envTable.qualifyColor(colorR, colorG, colorB, colorA);\n        \n        if (unitFrame._currentColor == qualifiedColor) then\n            return;\n        end\n        \n        unitFrame._currentColor = qualifiedColor;\n        \n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:SetVertexColor(colorR, colorG, colorB);\n    end\n    \n    --[[\n        Qualifies a color to a cacheable string\n\n        @param  {Number}  r\n        @param  {Number}  g\n        @param  {Number}  b\n        @param  {Number}  a\n\n        @return {String}\n    --]]\n    function envTable.qualifyColor(r, g, b, a)\n        return tostring(r) .. tostring(g) .. tostring(b) .. tostring(a);\n    end\n    \n    --[[ \n        Shows the overlay frames\n\n        @param  {Plater.unitFrame}  unitFrame\n\n        @return {void}\n    --]]\n    function envTable.showAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, unitFrame.targetUnitID);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Show();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Show();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\n    \n    --[[ \n        Hides the overlay frames\n\n        @return {void}\n    --]]\n    function envTable.hideAggroOverlay(unitFrame)\n        envTable.createFrameIfNotExists(unitFrame);\n        envTable.updateTargetOfTarget(unitFrame, nil);\n        unitFrame.healthBar.aggroOverlayLeft.overlayTexture:Hide();\n        unitFrame.healthBar.aggroOverlayRight.overlayTexture:Hide();\n        envTable.updateAggroOverlayColor(unitFrame);\n    end\nend",
},
["Options"] = {
{
["Type"] = 4,
["Name"] = "Test Mode",
["Value"] = false,
["Key"] = "testing",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Don't override Nameplate color",
["Value"] = false,
["Key"] = "ignore_color_changes",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Check this to prevent this mod to forcefully change the nameplate color.",
},
{
["Type"] = 4,
["Name"] = "Disable Target of Target",
["Value"] = false,
["Key"] = "disableTargetOfTarget",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1728636601,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/OgPOi4-vX/1",
["Icon"] = 133004,
["Enabled"] = true,
["Revision"] = 68,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Adds a pixels perfect border around the cast bar.",
["Prio"] = 99,
["Name"] = "Cast Bar Border",
["PlaterCore"] = 1,
["version"] = 1,
["HooksTemp"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["UID"] = "0x64123ca337069ce",
["Hooks"] = {
["Initialization"] = "function(modTable)\n    modTable.castingUnits = {}        -- Table to store casting units with their cast order\n    modTable.castCounter = 0          -- Counter to track the order of casting units\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.originalLevel then\n        envTable.originalLevel = unitFrame:GetFrameLevel()\n        envTable.originalAlpha = unitFrame:GetEffectiveAlpha()\n    end\n    \n    -- Check if the unitFrame is already in castingUnits\n    if not modTable.castingUnits[unitFrame] then\n        modTable.castCounter = modTable.castCounter + 1 -- Increment the counter\n        envTable.castOrder = modTable.castCounter      -- Save the cast order\n        \n        -- Add unitFrame to castingUnits with its castOrder\n        modTable.castingUnits[unitFrame] = envTable.castOrder\n    else\n        -- Retrieve the existing castOrder\n        envTable.castOrder = modTable.castingUnits[unitFrame]\n    end\n    \n    -- Set the frame level of the casting unit based on castOrder\n    local frameLevel = 10000 - envTable.castOrder\n    \n    if unitFrame.castBar.isSpecialCast then\n        frameLevel = frameLevel + 1000\n    end\n    \n    unitFrame:SetFrameLevel(frameLevel)\n    \n    if modTable.config and modTable.config[\"fullOpacityOnCast\"] then\n        unitFrame:SetAlpha(1.0)\n    end\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if envTable.originalLevel then\n        -- Remove unitFrame from castingUnits\n        modTable.castingUnits[unitFrame] = nil\n        \n        -- Restore original frame level and alpha\n        unitFrame:SetFrameLevel(envTable.originalLevel)\n        unitFrame:SetAlpha(envTable.originalAlpha)\n        envTable.originalLevel = nil\n        envTable.originalAlpha = nil\n        envTable.castOrder = nil\n    end\nend",
},
["Time"] = 1728636606,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/L7KPSDPMK/8",
["Icon"] = 4640492,
["Enabled"] = true,
["Revision"] = 423,
["semver"] = "1.0.7",
["Author"] = "Ryowarsu-Sanguino",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "Casting on top",
["PlaterCore"] = 1,
["version"] = 8,
["HooksTemp"] = {
["Initialization"] = "function(modTable)\n    modTable.castingUnits = {}        -- Table to store casting units with their cast order\n    modTable.castCounter = 0          -- Counter to track the order of casting units\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.originalLevel then\n        envTable.originalLevel = unitFrame:GetFrameLevel()\n        envTable.originalAlpha = unitFrame:GetEffectiveAlpha()\n    end\n    \n    -- Check if the unitFrame is already in castingUnits\n    if not modTable.castingUnits[unitFrame] then\n        modTable.castCounter = modTable.castCounter + 1 -- Increment the counter\n        envTable.castOrder = modTable.castCounter      -- Save the cast order\n        \n        -- Add unitFrame to castingUnits with its castOrder\n        modTable.castingUnits[unitFrame] = envTable.castOrder\n    else\n        -- Retrieve the existing castOrder\n        envTable.castOrder = modTable.castingUnits[unitFrame]\n    end\n    \n    -- Set the frame level of the casting unit based on castOrder\n    local frameLevel = 10000 - envTable.castOrder\n    \n    if unitFrame.castBar.isSpecialCast then\n        frameLevel = frameLevel + 1000\n    end\n    \n    unitFrame:SetFrameLevel(frameLevel)\n    \n    if modTable.config and modTable.config[\"fullOpacityOnCast\"] then\n        unitFrame:SetAlpha(1.0)\n    end\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if envTable.originalLevel then\n        -- Remove unitFrame from castingUnits\n        modTable.castingUnits[unitFrame] = nil\n        \n        -- Restore original frame level and alpha\n        unitFrame:SetFrameLevel(envTable.originalLevel)\n        unitFrame:SetAlpha(envTable.originalAlpha)\n        envTable.originalLevel = nil\n        envTable.originalAlpha = nil\n        envTable.castOrder = nil\n    end\nend",
},
["Options"] = {
{
["Type"] = 4,
["Name"] = "Force full opacity when casting",
["Value"] = true,
["Key"] = "fullOpacityOnCast",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --target name length limit\n    local targetNameMaxLength = 8\n    \n    --spell name length limit\n    local spellNameMaxLength = 16\n    \n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return table.concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            \n            --does the target name exists?\n            if (targetName) then\n                \n                if strlenutf8(targetName) > targetNameMaxLength then\n                    targetName = strtrim(utf8sub(targetName, 0, targetNameMaxLength))\n                end\n                \n                \n                --get the current spell name\n                local spellName = castBar.SpellName\n                \n                if spellName and strlenutf8(spellName) > spellNameMaxLength then\n                    spellName = strtrim(utf8sub(spellName, 0, spellNameMaxLength))\n                end\n                \n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText() or \"\"\n                castBar.Text:SetText(currentText .. \" [\" .. targetNameByColor .. \"]\")\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth)                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1728636602,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/jsGuJ8TUI/2",
["Icon"] = 2126355,
["Enabled"] = true,
["Revision"] = 116,
["semver"] = "1.0.1",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show the cast target name with the spell name",
["Prio"] = 99,
["Name"] = "Cast Target on Spell Name",
["PlaterCore"] = 1,
["version"] = 2,
["HooksTemp"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.UpdateCastBarName(unitId, unitFrame.castBar)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --percent of total cast bar size, default: 60% spell name\n    local spellNameSize = 0.60\n    \n    --target name length limit\n    local targetNameMaxLength = 8\n    \n    --spell name length limit\n    local spellNameMaxLength = 16\n    \n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return table.concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    --update function\n    function envTable.UpdateCastBarName(unitId, castBar)\n        --do nothing if interrupted\n        if castBar.IsInterrupted then\n            return\n            \n        end\n        \n        --get the target's unitId \n        local targetUnitId = unitId .. \"target\"\n        \n        --does the unit exists?\n        if (UnitExists(targetUnitId)) then\n            \n            --get the target name\n            local targetName = UnitName(targetUnitId)\n            \n            \n            --does the target name exists?\n            if (targetName) then\n                \n                if strlenutf8(targetName) > targetNameMaxLength then\n                    targetName = strtrim(utf8sub(targetName, 0, targetNameMaxLength))\n                end\n                \n                \n                --get the current spell name\n                local spellName = castBar.SpellName\n                \n                if spellName and strlenutf8(spellName) > spellNameMaxLength then\n                    spellName = strtrim(utf8sub(spellName, 0, spellNameMaxLength))\n                end\n                \n                --reset the text in the cast bar\n                castBar.Text:SetText(spellName)\n                \n                --paint the target name with the player's class color\n                local targetNameByColor = Plater.SetTextColorByClass (targetUnitId, targetName)\n                \n                --castbar width\n                local castBarWidth = castBar:GetWidth()\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth * spellNameSize)\n                \n                --set the new text in the castbar spell name fontstring\n                local currentText = castBar.Text:GetText() or \"\"\n                castBar.Text:SetText(currentText .. \" [\" .. targetNameByColor .. \"]\")\n                DetailsFramework:TruncateText (castBar.Text, castBarWidth)                \n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Options"] = {
},
},
{
["OptionsValues"] = {
["manualNameOverwrites"] = {
{
"Mordretha, the Endless Empress",
"Mordretha",
},
},
["nameLength"] = 18,
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenNameplateName(unitId, unitFrame, modTable.config, envTable)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenNameplateName(unitId, unitFrame, modTable.config, envTable)\nend",
["Initialization"] = "function (modTable)\n    local cache = {}\n    local concat = table.concat\n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    \n    local utf8len = function(str)\n        if utf8Enabled then\n            return str:utf8len()\n        end\n        \n        local count = 0\n        for _ in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n        end\n        \n        return count\n    end\n    \n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    -- Left to right works in the following steps for \"The Best Warrior Linaori\":\n    -- T. Best Warrior Linaori\n    -- T.B. Warrior Linaori\n    -- T.B.W. Linaori\n    local reduceLeftToRight\n    reduceLeftToRight = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not rightPart or utf8len(rightPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return leftPart .. \" \" .. rightPart, \"\"\n        end\n        \n        local firstWord, remainingRightPart = rightPart:match(\"^([^ ]*)[ ](.*)$\")\n        if not firstWord then\n            firstWord = rightPart\n            remainingRightPart = \"\"\n        end\n        leftPart = leftPart .. utf8sub(firstWord, 1, 1) .. \".\"\n        \n        return reduceLeftToRight(leftPart, remainingRightPart, lastPartLength, nameLength)\n    end\n    \n    -- Right to left works in the following steps for \"The Best Warrior Linaori\":\n    -- The Best W. Linaori\n    -- The B.W. Linaori\n    -- T.B.W. Linaori\n    local reduceRightToLeft\n    reduceRightToLeft = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not leftPart or utf8len(leftPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return \"\", leftPart .. \" \" .. rightPart\n        end\n        \n        local remainingLeftPart, lastWord = leftPart:match(\"^(.*)[ ]([^ ]*)$\")\n        \n        if not remainingLeftPart then\n            remainingLeftPart = \"\"\n            lastWord = leftPart\n        end\n        \n        rightPart = utf8sub(lastWord, 1, 1) .. \".\" .. rightPart\n        \n        return reduceRightToLeft(remainingLeftPart, rightPart, lastPartLength, nameLength)\n    end\n    \n    local cutOffName = function (wholeName, config)\n        if config.noSplitCutoff then\n            return utf8sub(wholeName, 1, config.nameLength)\n        end\n        \n        return wholeName\n    end\n    \n    local shorten = function (unitId, nameplateUnitName, config, nameLength)\n        -- let the player overwrite the name regardless of length based on the NPC name\n        local manualNameOverwrite = config.manualNameOverwrites[nameplateUnitName]\n        if manualNameOverwrite then\n            return manualNameOverwrite\n        end\n        \n        -- let the player overwrite the name regardless of length based on the NPC ID\n        local npcId = select(6, strsplit(\"-\", UnitGUID(unitId)))\n        local manualNpcIdOverwrite = config.manualNameOverwrites[npcId]\n        if manualNpcIdOverwrite then\n            return manualNpcIdOverwrite\n        end\n        \n        -- the original name is short enough already\n        if utf8len(nameplateUnitName) <= nameLength then\n            return nameplateUnitName\n        end\n        \n        -- Naming often implies \"<name>, <title>\" or \"<title> <name>\"\n        if nameplateUnitName:find(\",\") then\n            -- assumed that \",\" implies a title, and try to strip them of their title\n            local possibleName = nameplateUnitName:match(\"^(.*)[,][^,]*$\")\n            \n            if possibleName then\n                if utf8len(possibleName) <= nameLength then\n                    return possibleName\n                end\n                \n                -- in case of longer names: \"Linaori the best fury warrior ever, of the deeps\n                nameplateUnitName = possibleName\n            end\n        end\n        \n        -- Forsworn Squad-Leader -> Forsworn Squad Leader\n        -- Squad-Leader of the Forsworn -> Squad Leader of the Forsworn\n        if config.hyphenAsSpace then\n            local lastPart\n            \n            -- keep \"Forsworn Squad-Leader\" as is, while still replacing \"Squad-Leader of the Forsworn\"\n            if config.keepHyphenInLastName then\n                local _, spaces = nameplateUnitName:gsub(\" \", \"\")\n                if spaces > 0 then\n                    nameplateUnitName, lastPart = nameplateUnitName:match(\"^(.*)[ ]([^ ]*)$\")\n                end\n            end\n            \n            nameplateUnitName = nameplateUnitName:gsub(\"-\", \" \")\n            if lastPart then\n                nameplateUnitName = nameplateUnitName .. \" \" .. lastPart\n            end\n        end\n        \n        -- amount of times we can check if the name needs replacing\n        local _, occurrences = nameplateUnitName:gsub(\" \", \"\")\n        \n        -- no spaces left to split on, just return whatever can be made of it\n        if occurrences == 0 then\n            return cutOffName(nameplateUnitName, config)\n        end\n        \n        local nameToShorten, nameToKeep, nameToKeepLength\n        if config.keepRightSide then\n            -- we always want the last name if possible\n            -- example: Cleave Training Dummy -> Dummy\n            nameToShorten, nameToKeep = nameplateUnitName:match(\"^(.*)[ ]([^ ]*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        else\n            -- we always want the first name if possible\n            -- example: Cleave Training Dummy -> Cleave\n            nameToKeep, nameToShorten = nameplateUnitName:match(\"^([^ ]*)[ ](.*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        end\n        \n        -- in case the name to keep is too long, just use that\n        if nameToKeepLength > nameLength or not config.abbreviate then\n            return cutOffName(nameToKeep, config)\n        end\n        \n        local shortenedName\n        if config.abbreviateLeftToRight then\n            shortenedName, _ = reduceLeftToRight(\"\", nameToShorten, nameToKeepLength, nameLength)\n        else\n            _, shortenedName = reduceRightToLeft(nameToShorten, \"\", nameToKeepLength, nameLength)\n        end\n        \n        if config.keepRightSide then\n            return shortenedName .. \" \" .. nameToKeep\n        else\n            return nameToKeep .. \" \" .. shortenedName\n        end\n    end\n    \n    local tryCache = function (unitId, nameplateUnitName, config, nameLength)\n        if cache[nameLength] == nil then\n            cache[nameLength] = {}\n        end\n        \n        if cache[nameLength][nameplateUnitName] == nil then\n            cache[nameLength][nameplateUnitName] = shorten(unitId, nameplateUnitName, config, nameLength)\n        end\n        \n        return cache[nameLength][nameplateUnitName]\n    end\n    \n    modTable.shortenNameplateName = function (unitId, unitFrame, config)\n        if not unitId or not unitFrame.namePlateUnitName then return end\n        \n        if config.ignorePlayers and unitFrame.isPlayer then return end\n        if config.ignoreFriendlyNpcNameplate and unitFrame.actorType == \"friendlynpc\" then return end\n        if config.ignoreObjectNameplate and unitFrame.isObject then return end\n        \n        local name = tryCache(unitId, unitFrame.namePlateUnitName, config, config.nameLength)\n        \n        if name == unitFrame.namePlateUnitName then return end\n        \n        unitFrame.namePlateUnitName = name\n        unitFrame.PlateFrame.namePlateUnitName = name\n        unitFrame.healthBar.unitName:SetText(name)\n        unitFrame.ActorNameSpecial:SetText(name)\n    end\n    \n    modTable.shortenCastBarName = function (unitId, unitFrame, config)\n        if not unitId then return end\n        \n        local castBar = unitFrame.castBar\n        if not castBar.unit then return end\n        local targetUnitId = castBar.unit .. \"target\"\n        \n        if not UnitExists(targetUnitId) then return end\n        \n        local isPlayer = UnitIsPlayer(targetUnitId)\n        if config.ignorePlayers and isPlayer then return end\n        if config.ignoreFriendlyNpcCastBar and not isPlayer and UnitIsFriend(\"player\", targetUnitId) then return end\n        \n        local targetName = castBar.FrameOverlay.TargetName\n        local oldName = targetName:GetText()\n        if not oldName then return end\n        \n        local newName = tryCache(unitId, oldName, config, config.castBarNameLength)\n        if oldName == newName then return end\n        \n        targetName:SetText(newName)\n    end\nend",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenCastBarName(unitId, unitFrame, modTable.config, envTable)\nend\n\n\n",
},
["Time"] = 1702034695,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/name-shortener-for-plater/18",
["Icon"] = 134331,
["Enabled"] = true,
["Revision"] = 990,
["semver"] = "1.1.4",
["Author"] = "Linalori-Ragnaros",
["Desc"] = "Tries to make sense of long names",
["Prio"] = 99,
["Name"] = "Smart Name Shortener",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 99,
["Desc"] = "The length of the name can be on nameplates before cutoff is applied",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 18,
["Key"] = "nameLength",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate name length",
},
{
["Type"] = 2,
["Max"] = 99,
["Desc"] = "The length of the name can be on the cast bar before cutoff is applied",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 15,
["Key"] = "castBarNameLength",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast bar name length",
},
{
["Type"] = 4,
["Name"] = "Treat hyphens (-) as space",
["Value"] = true,
["Key"] = "hyphenAsSpace",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Also split names on hyphens instead of just the whole word",
},
{
["Type"] = 4,
["Name"] = "Keep hyphen in the last name",
["Value"] = true,
["Key"] = "keepHyphenInLastName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When hyphens are treated as spaces, keep the last part of the name intact",
},
{
["Type"] = 4,
["Name"] = "Cutoff when no split can be done",
["Value"] = true,
["Key"] = "noSplitCutoff",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When the smallest word is still longer than \"Name length\", cut it off to the name length. If unchecked, will return the full name",
},
{
["Type"] = 4,
["Name"] = "Abbreviate names (W.O. Warcraft)",
["Value"] = true,
["Key"] = "abbreviate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If unchecked, nothing is shown instead",
},
{
["Type"] = 4,
["Name"] = "Abbreviate left to right",
["Value"] = false,
["Key"] = "abbreviateLeftToRight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Where to start abbreviation. (ltr) \"T. Best Linaori\" vs (rtl) \"The B. Linaori\"",
},
{
["Type"] = 4,
["Name"] = "Keep right side",
["Value"] = true,
["Key"] = "keepRightSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Keep the right side instead of left side of the name. Right side: \"T.B. Warrior\". Left side: \"The B.L.\"",
},
{
["Type"] = 4,
["Name"] = "Ignore Players",
["Value"] = false,
["Key"] = "ignorePlayers",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Ignore player characters",
},
{
["Type"] = 4,
["Name"] = "Ignore Friendly NPC nameplate",
["Value"] = false,
["Key"] = "ignoreFriendlyNpcNameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Ignore friendly NPC on the nameplate",
},
{
["Type"] = 4,
["Name"] = "Ignore Object Nameplate",
["Value"] = true,
["Key"] = "ignoreObjectNameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Ignore nameplates from objects",
},
{
["Type"] = 4,
["Name"] = "Ignore Friendly NPC cast bar",
["Value"] = false,
["Key"] = "ignoreFriendlyNpcCastBar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Ignore friendly NPC on the cast bar",
},
{
["Type"] = 7,
["Name"] = "Manual name overwrites",
["Value"] = {
{
"Mordretha, the Endless Empress",
"Mordretha",
},
},
["Key"] = "manualNameOverwrites",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If a name matches the key, overwrite it with value and don't guess anything after",
},
},
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenNameplateName(unitId, unitFrame, modTable.config, envTable)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenNameplateName(unitId, unitFrame, modTable.config, envTable)\nend",
["Initialization"] = "function (modTable)\n    local cache = {}\n    local concat = table.concat\n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    \n    local utf8len = function(str)\n        if utf8Enabled then\n            return str:utf8len()\n        end\n        \n        local count = 0\n        for _ in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n        end\n        \n        return count\n    end\n    \n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    -- Left to right works in the following steps for \"The Best Warrior Linaori\":\n    -- T. Best Warrior Linaori\n    -- T.B. Warrior Linaori\n    -- T.B.W. Linaori\n    local reduceLeftToRight\n    reduceLeftToRight = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not rightPart or utf8len(rightPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return leftPart .. \" \" .. rightPart, \"\"\n        end\n        \n        local firstWord, remainingRightPart = rightPart:match(\"^([^ ]*)[ ](.*)$\")\n        if not firstWord then\n            firstWord = rightPart\n            remainingRightPart = \"\"\n        end\n        leftPart = leftPart .. utf8sub(firstWord, 1, 1) .. \".\"\n        \n        return reduceLeftToRight(leftPart, remainingRightPart, lastPartLength, nameLength)\n    end\n    \n    -- Right to left works in the following steps for \"The Best Warrior Linaori\":\n    -- The Best W. Linaori\n    -- The B.W. Linaori\n    -- T.B.W. Linaori\n    local reduceRightToLeft\n    reduceRightToLeft = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not leftPart or utf8len(leftPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return \"\", leftPart .. \" \" .. rightPart\n        end\n        \n        local remainingLeftPart, lastWord = leftPart:match(\"^(.*)[ ]([^ ]*)$\")\n        \n        if not remainingLeftPart then\n            remainingLeftPart = \"\"\n            lastWord = leftPart\n        end\n        \n        rightPart = utf8sub(lastWord, 1, 1) .. \".\" .. rightPart\n        \n        return reduceRightToLeft(remainingLeftPart, rightPart, lastPartLength, nameLength)\n    end\n    \n    local cutOffName = function (wholeName, config)\n        if config.noSplitCutoff then\n            return utf8sub(wholeName, 1, config.nameLength)\n        end\n        \n        return wholeName\n    end\n    \n    local shorten = function (unitId, nameplateUnitName, config, nameLength)\n        -- let the player overwrite the name regardless of length based on the NPC name\n        local manualNameOverwrite = config.manualNameOverwrites[nameplateUnitName]\n        if manualNameOverwrite then\n            return manualNameOverwrite\n        end\n        \n        -- let the player overwrite the name regardless of length based on the NPC ID\n        local npcId = select(6, strsplit(\"-\", UnitGUID(unitId)))\n        local manualNpcIdOverwrite = config.manualNameOverwrites[npcId]\n        if manualNpcIdOverwrite then\n            return manualNpcIdOverwrite\n        end\n        \n        -- the original name is short enough already\n        if utf8len(nameplateUnitName) <= nameLength then\n            return nameplateUnitName\n        end\n        \n        -- Naming often implies \"<name>, <title>\" or \"<title> <name>\"\n        if nameplateUnitName:find(\",\") then\n            -- assumed that \",\" implies a title, and try to strip them of their title\n            local possibleName = nameplateUnitName:match(\"^(.*)[,][^,]*$\")\n            \n            if possibleName then\n                if utf8len(possibleName) <= nameLength then\n                    return possibleName\n                end\n                \n                -- in case of longer names: \"Linaori the best fury warrior ever, of the deeps\n                nameplateUnitName = possibleName\n            end\n        end\n        \n        -- Forsworn Squad-Leader -> Forsworn Squad Leader\n        -- Squad-Leader of the Forsworn -> Squad Leader of the Forsworn\n        if config.hyphenAsSpace then\n            local lastPart\n            \n            -- keep \"Forsworn Squad-Leader\" as is, while still replacing \"Squad-Leader of the Forsworn\"\n            if config.keepHyphenInLastName then\n                local _, spaces = nameplateUnitName:gsub(\" \", \"\")\n                if spaces > 0 then\n                    nameplateUnitName, lastPart = nameplateUnitName:match(\"^(.*)[ ]([^ ]*)$\")\n                end\n            end\n            \n            nameplateUnitName = nameplateUnitName:gsub(\"-\", \" \")\n            if lastPart then\n                nameplateUnitName = nameplateUnitName .. \" \" .. lastPart\n            end\n        end\n        \n        -- amount of times we can check if the name needs replacing\n        local _, occurrences = nameplateUnitName:gsub(\" \", \"\")\n        \n        -- no spaces left to split on, just return whatever can be made of it\n        if occurrences == 0 then\n            return cutOffName(nameplateUnitName, config)\n        end\n        \n        local nameToShorten, nameToKeep, nameToKeepLength\n        if config.keepRightSide then\n            -- we always want the last name if possible\n            -- example: Cleave Training Dummy -> Dummy\n            nameToShorten, nameToKeep = nameplateUnitName:match(\"^(.*)[ ]([^ ]*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        else\n            -- we always want the first name if possible\n            -- example: Cleave Training Dummy -> Cleave\n            nameToKeep, nameToShorten = nameplateUnitName:match(\"^([^ ]*)[ ](.*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        end\n        \n        -- in case the name to keep is too long, just use that\n        if nameToKeepLength > nameLength or not config.abbreviate then\n            return cutOffName(nameToKeep, config)\n        end\n        \n        local shortenedName\n        if config.abbreviateLeftToRight then\n            shortenedName, _ = reduceLeftToRight(\"\", nameToShorten, nameToKeepLength, nameLength)\n        else\n            _, shortenedName = reduceRightToLeft(nameToShorten, \"\", nameToKeepLength, nameLength)\n        end\n        \n        if config.keepRightSide then\n            return shortenedName .. \" \" .. nameToKeep\n        else\n            return nameToKeep .. \" \" .. shortenedName\n        end\n    end\n    \n    local tryCache = function (unitId, nameplateUnitName, config, nameLength)\n        if cache[nameLength] == nil then\n            cache[nameLength] = {}\n        end\n        \n        if cache[nameLength][nameplateUnitName] == nil then\n            cache[nameLength][nameplateUnitName] = shorten(unitId, nameplateUnitName, config, nameLength)\n        end\n        \n        return cache[nameLength][nameplateUnitName]\n    end\n    \n    modTable.shortenNameplateName = function (unitId, unitFrame, config)\n        if not unitId or not unitFrame.namePlateUnitName then return end\n        \n        if config.ignorePlayers and unitFrame.isPlayer then return end\n        if config.ignoreFriendlyNpcNameplate and unitFrame.actorType == \"friendlynpc\" then return end\n        if config.ignoreObjectNameplate and unitFrame.isObject then return end\n        \n        local name = tryCache(unitId, unitFrame.namePlateUnitName, config, config.nameLength)\n        \n        if name == unitFrame.namePlateUnitName then return end\n        \n        unitFrame.namePlateUnitName = name\n        unitFrame.PlateFrame.namePlateUnitName = name\n        unitFrame.healthBar.unitName:SetText(name)\n        unitFrame.ActorNameSpecial:SetText(name)\n    end\n    \n    modTable.shortenCastBarName = function (unitId, unitFrame, config)\n        if not unitId then return end\n        \n        local castBar = unitFrame.castBar\n        if not castBar.unit then return end\n        local targetUnitId = castBar.unit .. \"target\"\n        \n        if not UnitExists(targetUnitId) then return end\n        \n        local isPlayer = UnitIsPlayer(targetUnitId)\n        if config.ignorePlayers and isPlayer then return end\n        if config.ignoreFriendlyNpcCastBar and not isPlayer and UnitIsFriend(\"player\", targetUnitId) then return end\n        \n        local targetName = castBar.FrameOverlay.TargetName\n        local oldName = targetName:GetText()\n        if not oldName then return end\n        \n        local newName = tryCache(unitId, oldName, config, config.castBarNameLength)\n        if oldName == newName then return end\n        \n        targetName:SetText(newName)\n    end\nend",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenCastBarName(unitId, unitFrame, modTable.config, envTable)\nend\n\n\n",
},
["version"] = 18,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if unitFrame.ActorType == \"friendlyplayer\" then\n        unitFrame.BuffFrame:Hide()\n        unitFrame.BuffFrame2:Hide()\n    end\n    \nend",
},
["Time"] = 1728636615,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/IWutmzRkI/1",
["Icon"] = 135940,
["Enabled"] = true,
["Revision"] = 4,
["semver"] = "1.0.0",
["Author"] = "Faslo-Silvermoon",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "Hide Buff Friendly",
["PlaterCore"] = 1,
["version"] = 1,
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if unitFrame.ActorType == \"friendlyplayer\" then\n        unitFrame.BuffFrame:Hide()\n        unitFrame.BuffFrame2:Hide()\n    end\n    \nend",
},
["Options"] = {
},
},
},
["auras_per_row_auto"] = false,
["extra_icon_caster_outline"] = "OUTLINE",
["auras_per_row_amount2"] = 2,
["disable_omnicc_on_auras"] = true,
["aura_width"] = 28,
["health_statusbar_bgcolor"] = {
0.1137254901960784,
0.1137254901960784,
0.1137254901960784,
1,
},
["castbar_target_shadow_color"] = {
nil,
nil,
nil,
0,
},
["blizzard_nameplate_large_font_size"] = 14,
["pet_width_scale"] = 0.9999999403953552,
["cast_statusbar_color_interrupted"] = {
0.0196078431372549,
0.1843137254901961,
0.3176470588235294,
},
["target_highlight_color"] = {
0.9803922176361084,
1,
0.9529412388801575,
},
["extra_icon_height"] = 32,
["extra_icon_stack_outline"] = "OUTLINE",
["click_space"] = {
150,
},
["aura2_grow_direction"] = 3,
["range_check_in_range_or_target_alpha_friendlies"] = 1,
["bossmod_cooldown_text_size"] = 14,
["aura_cooldown_reverse"] = false,
["indicator_spec"] = false,
["cast_statusbar_bgcolor"] = {
0.1137254901960784,
0.1137254901960784,
0.1137254901960784,
0.8900000005960464,
},
["health_cutoff_upper"] = false,
["aura_show_only_short_dispellable_on_players"] = true,
["pet_height_scale"] = 0.9999999403953552,
["aura_x_offset"] = 0,
["first_run3"] = true,
["extra_icon_use_blizzard_border_color"] = false,
["ui_parent_scale_tune"] = 1,
["health_statusbar_bgtexture"] = "GennUI B",
["aura_tracker"] = {
["buff_tracked"] = {
[227931] = true,
[233210] = true,
[209859] = true,
[163689] = true,
[297133] = true,
},
},
["extra_icon_caster_font"] = "GennUI",
["cast_statusbar_color"] = {
0.05098039656877518,
0.4627451300621033,
0.9333333969116211,
0.9600000008940697,
},
["update_throttle"] = 0.5,
["extra_icon_timer_font"] = "GennUI",
["click_space_friendly"] = {
150,
},
["use_health_animation"] = true,
["target_highlight_alpha"] = 1,
["extra_icon_show_swipe"] = false,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["__TrashAt"] = 1728636457,
["Time"] = 1675433496,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["url"] = "",
["NpcNames"] = {
"174773",
},
["Desc"] = "Time to die Spiteful affix",
["Enabled"] = true,
["Revision"] = 190,
["semver"] = "",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Name"] = "M+ Spiteful",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["Icon"] = 135945,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Show()\nend\n\n\n",
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["ScriptType"] = 2,
["__TrashAt"] = 1728636466,
["Time"] = 1701163879,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Icon"] = 644389,
["url"] = "https://wago.io/03uVqaHJI/1",
["NpcNames"] = {
},
["semver"] = "1.0.0",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Show()\nend\n\n\n",
["Revision"] = 106,
["Options"] = {
},
["version"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Author"] = "Briarbreed-Area 52",
["Initialization"] = "function (scriptTable)\nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame:Hide()\nend",
["Name"] = "Hide Morchie",
["Prio"] = 99,
["SpellIds"] = {
404365,
},
["PlaterCore"] = 1,
["Desc"] = "Hide Morchie nameplate during intermission.",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\nend",
["Temp_Initialization"] = "function (scriptTable)\nend",
},
},
["blizzard_nameplate_font_size"] = 12,
["patch_version"] = 37,
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 14,
["number_region_first_run"] = true,
["cast_statusbar_fadeout_time"] = 0.2000000029802322,
["ghost_auras"] = {
["auras"] = {
["MAGE"] = {
[5] = {
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
},
},
["castbar_target_anchor"] = {
["y"] = -1,
["side"] = 4,
},
["hook_data_trash"] = {
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Cast Start",
["UID"] = "0x64123ca337069ce",
["Hooks"] = {
["Initialization"] = "function(modTable)\n    modTable.globalCastCounter = 0\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.originalLevel then\n        envTable.originalLevel = unitFrame:GetFrameLevel()\n        envTable.originalAlpha = unitFrame:GetEffectiveAlpha()\n    end\n    modTable.globalCastCounter = modTable.globalCastCounter + 1\n    unitFrame:SetFrameLevel(100 + modTable.globalCastCounter)\n    if modTable.config and modTable.config[\"fullOpacityOnCast\"] then\n        unitFrame:SetAlpha(1.0)\n    end\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if envTable.originalLevel then\n        unitFrame:SetFrameLevel(envTable.originalLevel)\n        unitFrame:SetAlpha(envTable.originalAlpha)\n        envTable.originalLevel = nil\n        envTable.originalAlpha = nil\n    end\nend",
},
["__TrashAt"] = 1726252668,
["Time"] = 1722896032,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/L7KPSDPMK/6",
["Icon"] = 4640492,
["Enabled"] = true,
["Revision"] = 342,
["semver"] = "1.0.5",
["Author"] = "Ryowarsu-Sanguino",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "Casting on top",
["PlaterCore"] = 1,
["version"] = 6,
["HooksTemp"] = {
["Initialization"] = "function(modTable)\n    modTable.globalCastCounter = 0\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.originalLevel then\n        envTable.originalLevel = unitFrame:GetFrameLevel()\n        envTable.originalAlpha = unitFrame:GetEffectiveAlpha()\n    end\n    modTable.globalCastCounter = modTable.globalCastCounter + 1\n    unitFrame:SetFrameLevel(100 + modTable.globalCastCounter)\n    if modTable.config and modTable.config[\"fullOpacityOnCast\"] then\n        unitFrame:SetAlpha(1.0)\n    end\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if envTable.originalLevel then\n        unitFrame:SetFrameLevel(envTable.originalLevel)\n        unitFrame:SetAlpha(envTable.originalAlpha)\n        envTable.originalLevel = nil\n        envTable.originalAlpha = nil\n    end\nend",
},
["Options"] = {
{
["Type"] = 4,
["Name"] = "Force full opacity when casting",
["Value"] = true,
["Key"] = "fullOpacityOnCast",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Cast Start",
["UID"] = "0x64123ca337069ce",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.originalLevel then\n        envTable.originalLevel = unitFrame:GetFrameLevel()\n        envTable.originalAlpha = unitFrame:GetEffectiveAlpha()\n    end\n    \n    -- Check if the unitFrame is already in castingUnits\n    if not modTable.castingUnits[unitFrame] then\n        modTable.castCounter = modTable.castCounter + 1 -- Increment the counter\n        envTable.castOrder = modTable.castCounter      -- Save the cast order\n        \n        -- Add unitFrame to castingUnits with its castOrder\n        modTable.castingUnits[unitFrame] = envTable.castOrder\n    else\n        -- Retrieve the existing castOrder\n        envTable.castOrder = modTable.castingUnits[unitFrame]\n    end\n    \n    -- Set the frame level of the casting unit based on castOrder\n    local frameLevel = 10000 - envTable.castOrder\n    unitFrame:SetFrameLevel(frameLevel)\n    \n    if modTable.config and modTable.config[\"fullOpacityOnCast\"] then\n        unitFrame:SetAlpha(1.0)\n    end\nend",
["Initialization"] = "function(modTable)\n    modTable.castingUnits = {}        -- Table to store casting units with their cast order\n    modTable.castCounter = 0          -- Counter to track the order of casting units\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if envTable.originalLevel then\n        -- Remove unitFrame from castingUnits\n        modTable.castingUnits[unitFrame] = nil\n        \n        -- Restore original frame level and alpha\n        unitFrame:SetFrameLevel(envTable.originalLevel)\n        unitFrame:SetAlpha(envTable.originalAlpha)\n        envTable.originalLevel = nil\n        envTable.originalAlpha = nil\n        envTable.castOrder = nil\n    end\nend",
},
["__TrashAt"] = 1728387721,
["Time"] = 1726256355,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/L7KPSDPMK/7",
["Icon"] = 4640492,
["Enabled"] = true,
["Revision"] = 413,
["semver"] = "1.0.6",
["Author"] = "Ryowarsu-Sanguino",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "Casting on top",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Force full opacity when casting",
["Value"] = true,
["Key"] = "fullOpacityOnCast",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["HooksTemp"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not envTable.originalLevel then\n        envTable.originalLevel = unitFrame:GetFrameLevel()\n        envTable.originalAlpha = unitFrame:GetEffectiveAlpha()\n    end\n    \n    -- Check if the unitFrame is already in castingUnits\n    if not modTable.castingUnits[unitFrame] then\n        modTable.castCounter = modTable.castCounter + 1 -- Increment the counter\n        envTable.castOrder = modTable.castCounter      -- Save the cast order\n        \n        -- Add unitFrame to castingUnits with its castOrder\n        modTable.castingUnits[unitFrame] = envTable.castOrder\n    else\n        -- Retrieve the existing castOrder\n        envTable.castOrder = modTable.castingUnits[unitFrame]\n    end\n    \n    -- Set the frame level of the casting unit based on castOrder\n    local frameLevel = 10000 - envTable.castOrder\n    unitFrame:SetFrameLevel(frameLevel)\n    \n    if modTable.config and modTable.config[\"fullOpacityOnCast\"] then\n        unitFrame:SetAlpha(1.0)\n    end\nend",
["Initialization"] = "function(modTable)\n    modTable.castingUnits = {}        -- Table to store casting units with their cast order\n    modTable.castCounter = 0          -- Counter to track the order of casting units\nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if envTable.originalLevel then\n        -- Remove unitFrame from castingUnits\n        modTable.castingUnits[unitFrame] = nil\n        \n        -- Restore original frame level and alpha\n        unitFrame:SetFrameLevel(envTable.originalLevel)\n        unitFrame:SetAlpha(envTable.originalAlpha)\n        envTable.originalLevel = nil\n        envTable.originalAlpha = nil\n        envTable.castOrder = nil\n    end\nend",
},
["version"] = 7,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border thickness\n    local size = 1 \n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()\n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end\n    \n    for index, auraIcon in ipairs (unitFrame.BuffFrame2.PlaterBuffList) do\n        if (auraIcon:IsShown()) then\n            \n            if (not auraIcon.PixelPerfectBorder) then\n                auraIcon.PixelPerfectBorder = CreateFrame (\"frame\", nil, auraIcon, \"NamePlateFullBorderTemplate\")\n            end\n            \n            local r, g, b = auraIcon:GetBackdropBorderColor()\n            auraIcon:SetBackdropBorderColor (0, 0, 0, 0)\n            \n            auraIcon.PixelPerfectBorder:SetVertexColor (r, g, b)\n            auraIcon.PixelPerfectBorder:SetBorderSizes (size, size, size, size)\n            auraIcon.PixelPerfectBorder:UpdateSizes()            \n            \n            auraIcon.Icon:ClearAllPoints()\n            auraIcon.Icon:SetAllPoints()\n            \n            auraIcon.Border:Hide() --hide plater default border\n        end\n    end    \nend",
},
["__TrashAt"] = 1728636576,
["Time"] = 1680360347,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/N9tiB9mO2/1",
["Icon"] = 133006,
["Enabled"] = true,
["Revision"] = 118,
["Options"] = {
},
["Author"] = "????????-Illidan",
["Desc"] = "Config aura borders",
["Prio"] = 99,
["Name"] = "Advanced Debuff Border",
["PlaterCore"] = 1,
["version"] = 1,
["LastHookEdited"] = "Nameplate Updated",
["semver"] = "1.0.0",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["UID"] = "0x64392e34f6060a",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.checkToHide(unitFrame)\nend",
["Initialization"] = "function (modTable)\n    \n    local badCasts = {\n        [123] = true,\n        [\"Uber Strike\"] = true,\n    }\n    \n    \n    local castingUnits = {}\n    \n    modTable.checkToHide = function(unitFrame)\n        -- maybe this: UnitTokenFromGUID\n        local needsHide = false\n        for t, i in pairs(castingUnits) do\n            if UnitExists(t) then\n                if unitFrame.namePlateUnitToken ~= t then\n                    if not modTable.updateCastState(unitFrame) then\n                        needsHide = true\n                        break\n                    end\n                end\n            else\n                castingUnits[t] = nil\n            end\n        end\n        \n        if needsHide then\n            unitFrame:Hide()\n        elseif not unitFrame:IsShown() then\n            unitFrame:Show()\n        end\n    end\n    \n    modTable.updateCastState = function(unitFrame)\n        if not unitFrame.namePlateUnitToken then return false end\n        local castBar = unitFrame.castBar\n        if castBar.casting or castBar.channeling then\n            local badCast = badCasts[castBar.spellName or \"N/A\"] or badCasts[castBar.spellID or -1] \n            if badCast then\n                castingUnits[unitFrame.namePlateUnitToken] = badCast\n                return true\n            end\n        end\n        castingUnits[unitFrame.namePlateUnitToken] = nil\n        return false\n    end\n    \nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
},
["__TrashAt"] = 1728636628,
["Time"] = 1682204902,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/x2Gf7E4E2/2",
["Icon"] = 1723989,
["Enabled"] = true,
["Revision"] = 20,
["semver"] = "1.0.1",
["Author"] = "Viashi-Argent Dawn",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "Hide others units for Casts",
["PlaterCore"] = 1,
["version"] = 2,
["HooksTemp"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.checkToHide(unitFrame)\nend",
["Initialization"] = "function (modTable)\n    \n    local badCasts = {\n        [123] = true,\n        [\"Uber Strike\"] = true,\n    }\n    \n    \n    local castingUnits = {}\n    \n    modTable.checkToHide = function(unitFrame)\n        -- maybe this: UnitTokenFromGUID\n        local needsHide = false\n        for t, i in pairs(castingUnits) do\n            if UnitExists(t) then\n                if unitFrame.namePlateUnitToken ~= t then\n                    if not modTable.updateCastState(unitFrame) then\n                        needsHide = true\n                        break\n                    end\n                end\n            else\n                castingUnits[t] = nil\n            end\n        end\n        \n        if needsHide then\n            unitFrame:Hide()\n        elseif not unitFrame:IsShown() then\n            unitFrame:Show()\n        end\n    end\n    \n    modTable.updateCastState = function(unitFrame)\n        if not unitFrame.namePlateUnitToken then return false end\n        local castBar = unitFrame.castBar\n        if castBar.casting or castBar.channeling then\n            local badCast = badCasts[castBar.spellName or \"N/A\"] or badCasts[castBar.spellID or -1] \n            if badCast then\n                castingUnits[unitFrame.namePlateUnitToken] = badCast\n                return true\n            end\n        end\n        castingUnits[unitFrame.namePlateUnitToken] = nil\n        return false\n    end\n    \nend",
["Cast Stop"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.updateCastState(unitFrame)\nend",
},
["Options"] = {
},
},
},
["cast_statusbar_color_channeling"] = {
0.05098039656877518,
0.4627451300621033,
0.9333333969116211,
0.9600000008940697,
},
["castbar_target_font"] = "GennUI",
["aura_alpha"] = 1,
["indicator_faction"] = false,
["range_check_alpha_friendlies"] = 0.6499999761581421,
["health_cutoff"] = false,
},
},
["InterruptableSpells"] = {
[278444] = true,
[434122] = true,
[19647] = true,
[443430] = true,
[252923] = true,
[168040] = true,
[187707] = true,
[255824] = true,
[260701] = true,
[15615] = true,
[31935] = true,
[443433] = true,
[426731] = true,
[253562] = true,
[426541] = true,
[59734] = true,
[428263] = true,
[320462] = true,
[164887] = true,
[436679] = true,
[199663] = true,
[46036] = true,
[415770] = true,
[96231] = true,
[37470] = true,
[220543] = true,
[256849] = true,
[334748] = true,
[413607] = true,
[432031] = true,
[264050] = true,
[93985] = true,
[428526] = true,
[418200] = true,
[431333] = true,
[322767] = true,
[386071] = true,
[418202] = true,
[321240] = true,
[428086] = true,
[201837] = true,
[404754] = true,
[411958] = true,
[165213] = true,
[400165] = true,
[47528] = true,
[266036] = true,
[426240] = true,
[413427] = true,
[201839] = true,
[335143] = true,
[429812] = true,
[267824] = true,
[201298] = true,
[429176] = true,
[351338] = true,
[1766] = true,
[412922] = true,
[200630] = true,
[169839] = true,
[255041] = true,
[200248] = true,
[427459] = true,
[169840] = true,
[420320] = true,
[253544] = true,
[347008] = true,
[436322] = true,
[322274] = true,
[268278] = true,
[320171] = true,
[264390] = true,
[451114] = true,
[164965] = true,
[91807] = true,
[6552] = true,
[252781] = true,
[256957] = true,
[2139] = true,
[428103] = true,
[417011] = true,
[30451] = true,
[259572] = true,
[225562] = true,
[412233] = true,
[333602] = true,
[253517] = true,
[59180] = true,
[324293] = true,
[434802] = true,
[451113] = true,
[260699] = true,
[407124] = true,
[320336] = true,
[433841] = true,
[326046] = true,
[327130] = true,
[434793] = true,
[417018] = true,
[434786] = true,
[328406] = true,
[97547] = true,
[448248] = true,
[426768] = true,
[253583] = true,
[272581] = true,
[57994] = true,
[266225] = true,
[338353] = true,
[454440] = true,
[416256] = true,
[340544] = true,
[76813] = true,
[450756] = true,
[168092] = true,
[324776] = true,
[116705] = true,
[263959] = true,
[431303] = true,
[433662] = true,
[461904] = true,
[323057] = true,
[264024] = true,
[196883] = true,
[164973] = true,
[415437] = true,
[420090] = true,
[449734] = true,
[257732] = true,
[260696] = true,
[265876] = true,
[200642] = true,
[427609] = true,
[265368] = true,
[36033] = true,
[32747] = true,
[442210] = true,
[408805] = true,
[391528] = true,
[415435] = true,
[272571] = true,
[432520] = true,
[431309] = true,
[426783] = true,
[227913] = true,
[204243] = true,
[417030] = true,
[411994] = true,
[147362] = true,
[257063] = true,
[328667] = true,
[260697] = true,
[260700] = true,
[412378] = true,
[452099] = true,
[275826] = true,
[168082] = true,
[324914] = true,
[322938] = true,
[260698] = true,
[426596] = true,
[183752] = true,
[271174] = true,
[201411] = true,
[443427] = true,
[417481] = true,
[169841] = true,
[326319] = true,
[321828] = true,
[452162] = true,
[442536] = true,
[451097] = true,
},
["performance_units"] = {
[176920] = true,
[214441] = true,
[211306] = true,
[196642] = true,
[167999] = true,
[189707] = true,
[216205] = true,
[219746] = true,
},
["captured_casts"] = {
[278444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Maggot",
["npcID"] = 134024,
},
[420746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Sentinel",
["npcID"] = 207117,
},
[376725] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[453507] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Quartermaster Ze'erik",
["npcID"] = 215988,
},
[405391] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[188907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfiend Dreadbringer",
["npcID"] = 92789,
},
[376727] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[423820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Chardryn",
["npcID"] = 210912,
},
[453509] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Royal Quartermaster Ze'erik",
["npcID"] = 215988,
},
[438153] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nether Phantom",
["npcID"] = 218429,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[444296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Knight",
["npcID"] = 206696,
},
[396180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Burster",
["npcID"] = 186836,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[408466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Crystal-collector",
["npcID"] = 204407,
},
[196587] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[392087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stubborn Hornswog",
["npcID"] = 186834,
},
[323496] = {
["source"] = "Flesh Crafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 165872,
},
[56969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[118529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 61131,
},
[409492] = {
["source"] = "Afflicted Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 204773,
},
[410516] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[440205] = {
["source"] = "Anguishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 214415,
},
[425873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lingering Torment",
["npcID"] = 209564,
},
[433040] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Trickster",
["npcID"] = 214343,
},
[270264] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[440207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
},
[367521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[413590] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[196078] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[59529] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["npcID"] = 28587,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1985,
},
[448399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[371618] = {
["source"] = "Zaqali Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201117,
},
[442257] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Blood Parasite",
["npcID"] = 220626,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[326574] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[429973] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[76813] = {
["source"] = "Naz'jar Spiritmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[199663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Councilor",
["npcID"] = 98370,
},
[375716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Primalist Mage",
["npcID"] = 191206,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[451474] = {
["source"] = "Purgle-lurgle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214544,
},
[382883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 194241,
},
[194545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Technician",
["npcID"] = 211884,
},
[377765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Tempest",
["npcID"] = 190946,
},
[197105] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[375719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalbound Water Spirit",
["npcID"] = 190739,
},
[198641] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Kur'talos Ravencrest",
["npcID"] = 98965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[59146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari God Hunter",
["npcID"] = 29820,
},
[450454] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[422813] = {
["source"] = "Guardian Ordan",
["event"] = "SPELL_CAST_START",
["npcID"] = 208727,
},
[322486] = {
["source"] = "Tirnenn Villager",
["event"] = "SPELL_CAST_START",
["npcID"] = 164929,
},
[385959] = {
["source"] = "Titan Defense Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 193244,
},
[440218] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[441242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taste Tester",
["npcID"] = 220060,
},
[401316] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[422815] = {
["source"] = "Guardian Ordan",
["event"] = "SPELL_CAST_START",
["npcID"] = 208727,
},
[374699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[388008] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[76815] = {
["source"] = "Naz'jar Spiritmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[114182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[401318] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[443292] = {
["source"] = "Devouring Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[432031] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Black Blood",
["encounterID"] = 2901,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215968,
},
[401319] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[439198] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venommaster Nezarox",
["npcID"] = 219006,
},
[440222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark-Crazed Harvester",
["npcID"] = 206067,
},
[405415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[214001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Lancer",
["npcID"] = 102095,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[373680] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2609,
},
[268234] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Bile Oozeling",
["npcID"] = 136541,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[428963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207796,
},
[413607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[226287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Chunk",
["npcID"] = 101438,
},
[439202] = {
["encounterName"] = "I'pa",
["source"] = "I'pa",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[386991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Proto-Drake",
["npcID"] = 184869,
},
[214003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Swordsman",
["npcID"] = 102094,
},
[401325] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[256489] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[207861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Genn Greymane",
["npcID"] = 214073,
},
[441252] = {
["source"] = "Horrid Effusia",
["event"] = "SPELL_CAST_START",
["npcID"] = 211866,
},
[61579] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Construct",
["npcID"] = 28835,
},
[395184] = {
["source"] = "Blazing Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 185883,
},
[265168] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[458657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Colossus",
["npcID"] = 225898,
},
[449444] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[274383] = {
["source"] = "Vermin Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 130404,
},
[193018] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[440231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark-Crazed Harvester",
["npcID"] = 206067,
},
[434089] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[59020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitting Cobra",
["npcID"] = 29774,
},
[114185] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[200185] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[317383] = {
["source"] = "Quilboar Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 150237,
},
[420782] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zaqali Lavatongue",
["npcID"] = 208661,
},
[236529] = {
["encounterName"] = "Sisters of the Moon",
["source"] = "Huntress Kasparian",
["encounterID"] = 2050,
["event"] = "SPELL_CAST_START",
["npcID"] = 118523,
},
[404403] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[88080] = {
["source"] = "Whipping Wind",
["event"] = "SPELL_CAST_START",
["npcID"] = 47238,
},
[264150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thornguard",
["npcID"] = 131858,
},
[185854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightmare Rider",
["npcID"] = 92792,
},
[373692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[207865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Genn Greymane",
["npcID"] = 214073,
},
[373693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[456617] = {
["source"] = "Zillix",
["event"] = "SPELL_CAST_START",
["npcID"] = 221976,
},
[449451] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[256494] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[264153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devouring Maggot",
["npcID"] = 134024,
},
[413621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Infiltrator",
["npcID"] = 206214,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["npcID"] = 81522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[374719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonejaw Basilisk",
["npcID"] = 188128,
},
[449453] = {
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[413622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Infiltrator",
["npcID"] = 206214,
},
[427955] = {
["source"] = "Rank Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[102158] = {
["encounterName"] = "Echo of Baine",
["source"] = "Time-Twisted Seer",
["npcID"] = 54553,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1881,
},
[401338] = {
["source"] = "Sawscale Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 208691,
},
[422837] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[395196] = {
["source"] = "Blazing Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 185883,
},
[185857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Scout",
["npcID"] = 210973,
},
[458669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Colossus",
["npcID"] = 225898,
},
[428981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auctioned Pages Past",
["npcID"] = 214069,
},
[320464] = {
["source"] = "Zolramus Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 163128,
},
[378818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[389056] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[374724] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[428983] = {
["isChanneled"] = true,
["source"] = "Urctos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210518,
},
[401342] = {
["source"] = "Sawscale Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 208691,
},
[61581] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Runeshaper",
["npcID"] = 28836,
},
[408509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portalkeeper Cimbra",
["npcID"] = 202613,
},
[450483] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[440246] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[266209] = {
["source"] = "Fallen Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 134284,
},
[424891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Speartender",
["npcID"] = 207456,
},
[438200] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[192003] = {
["encounterName"] = "Serpentrix",
["source"] = "Blazing Hydra Spawn",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 97259,
},
[451510] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[432059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Hexthrower",
["npcID"] = 213685,
},
[398276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[268260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Cannoneer",
["npcID"] = 138465,
},
[75543] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[372683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Whelp",
["npcID"] = 187894,
},
[448441] = {
["source"] = "Gorloc Springcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 218650,
},
[259572] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["npcID"] = 122965,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2085,
},
[426943] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[378827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Plunderer",
["npcID"] = 192786,
},
[61326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[376780] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[448443] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[111631] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[443325] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[448444] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[450492] = {
["source"] = "Zekvir",
["event"] = "SPELL_CAST_START",
["npcID"] = 217208,
},
[209410] = {
["source"] = "Duskwatch Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 104247,
},
[374735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[328667] = {
["source"] = "Brittlebone Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 163126,
},
[407496] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[457660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Enormos",
["npcID"] = 225274,
},
[435138] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[378832] = {
["source"] = "Rebel Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 195058,
},
[388046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
[458685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moth'ethk",
["npcID"] = 206203,
},
[391118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalebane Lieutenant",
["npcID"] = 191739,
},
[461757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[400333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffkeeper Bouldani",
["npcID"] = 202612,
},
[417737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whispering Behemoth",
["npcID"] = 207171,
},
[378835] = {
["source"] = "Blightpaw the Depraved",
["event"] = "SPELL_CAST_START",
["npcID"] = 193128,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[209413] = {
["source"] = "Guardian Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 104270,
},
[400335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[252923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[266225] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[441287] = {
["isChanneled"] = true,
["source"] = "Kaheti Sentry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218315,
},
[401361] = {
["source"] = "Elusive Deepstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 204833,
},
[407504] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[434122] = {
["source"] = "Ascended Neophyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 216326,
},
[406481] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[419790] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[441289] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[438218] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[440266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roaming Mongrel",
["npcID"] = 218330,
},
[446409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enormous Kelp-Snaggler",
["npcID"] = 221061,
},
[201226] = {
["source"] = "Bloodtainted Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 100531,
},
[395222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kain Firebrand",
["npcID"] = 193675,
},
[449481] = {
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[450505] = {
["source"] = "Zekvir",
["event"] = "SPELL_CAST_START",
["npcID"] = 217208,
},
[211464] = {
["source"] = "Felbound Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 104278,
},
[268278] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[420817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of the Moon",
["npcID"] = 211076,
},
[372701] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[456649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathbound Husk",
["npcID"] = 220272,
},
[398296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[386012] = {
["source"] = "Stormcaller Boroo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[388060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
[450509] = {
["source"] = "Nerubian Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 228954,
},
[387037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Revenant",
["npcID"] = 195917,
},
[200205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[426964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[419798] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[404442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[446416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honey-fused Droplet",
["npcID"] = 213697,
},
[386015] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[387039] = {
["source"] = "Nokhud Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 195761,
},
[196111] = {
["encounterName"] = "Serpentrix",
["source"] = "Seaspray Crab",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91793,
},
[430037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Spearfisher",
["npcID"] = 214338,
},
[378850] = {
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 190780,
},
[169494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[328687] = {
["source"] = "Brittlebone Crossbowman",
["event"] = "SPELL_CAST_START",
["npcID"] = 166079,
},
[391136] = {
["source"] = "Drakonid Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187240,
},
[270334] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[373733] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[427992] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[172567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostwall Grunt",
["npcID"] = 81368,
},
[453588] = {
["source"] = "Coalesced Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 220266,
},
[421852] = {
["source"] = "Irate Gladehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 207785,
},
[211470] = {
["source"] = "Shadow Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 104300,
},
[59154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Giant",
["npcID"] = 28920,
},
[35096] = {
["source"] = "Bloodwarder Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 19633,
},
[322550] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[450519] = {
["source"] = "Zekvir",
["event"] = "SPELL_CAST_START",
["npcID"] = 217208,
},
[451543] = {
["source"] = "Hollows Resident",
["event"] = "SPELL_CAST_START",
["npcID"] = 219983,
},
[444377] = {
["source"] = "Recalled Grizzly",
["event"] = "SPELL_CAST_START",
["npcID"] = 226195,
},
[429021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[426974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[376811] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[435165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Braunpyke",
["npcID"] = 217658,
},
[427999] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200927,
},
[401382] = {
["source"] = "Past Self",
["event"] = "SPELL_CAST_START",
["npcID"] = 185800,
},
[386026] = {
["source"] = "Unstable Squall",
["event"] = "SPELL_CAST_START",
["npcID"] = 194895,
},
[374765] = {
["source"] = "Ravine Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 190943,
},
[401383] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[461785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargassum Guardian",
["npcID"] = 212582,
},
[372719] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[197141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[404456] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[385005] = {
["source"] = "General Rajaxx",
["event"] = "SPELL_CAST_START",
["npcID"] = 195628,
},
[81439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[322557] = {
["source"] = "Drust Soulcleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 172991,
},
[430051] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Screaming Soul",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 214608,
},
[428004] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Keeper of the Dream",
["npcID"] = 210423,
},
[418791] = {
["source"] = "Bill",
["event"] = "SPELL_CAST_START",
["npcID"] = 211062,
},
[443363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandres the Relicbearer",
["npcID"] = 217534,
},
[423912] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Stonewarmer",
["npcID"] = 210235,
},
[441316] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzied Leaper",
["npcID"] = 222214,
},
[438245] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[377844] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[445412] = {
["source"] = "Colossal Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 224589,
},
[409581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whisper in the Dark",
["npcID"] = 203806,
},
[211477] = {
["source"] = "Legion Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 104277,
},
[418796] = {
["source"] = "Bill",
["event"] = "SPELL_CAST_START",
["npcID"] = 211062,
},
[407535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Destroyer",
["npcID"] = 203861,
},
[199193] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[268306] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[118552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 61131,
},
[272402] = {
["source"] = "Cutwater Knife Juggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 129599,
},
[420846] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[372730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[398324] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Winter's Aegis",
["npcID"] = 200399,
},
[436203] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[429037] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[241680] = {
["encounterName"] = "Harjatan",
["source"] = "Mistress Sassz'ine",
["encounterID"] = 2036,
["event"] = "SPELL_CAST_START",
["npcID"] = 121184,
},
[189469] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[405492] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[406516] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[118297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Fire Elemental",
["npcID"] = 61029,
},
[172578] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Melded Berserker",
["npcID"] = 86372,
},
[259597] = {
["source"] = "Child of Gonk",
["event"] = "SPELL_CAST_START",
["npcID"] = 127254,
},
[376829] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[387067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Construct",
["npcID"] = 186740,
},
[425970] = {
["source"] = "Verdant Boughwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 213576,
},
[432113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord",
["npcID"] = 228575,
},
[404472] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[266266] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[407544] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[196127] = {
["encounterName"] = "Serpentrix",
["source"] = "Mak'rana Siltwalker",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91790,
},
[385024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salty Salamander",
["npcID"] = 188027,
},
[121114] = {
["source"] = "Sik'thik Amber-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 61929,
},
[76325] = {
["source"] = "Twilight Flame Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 39708,
},
[420856] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[428023] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[449522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drone Abductor",
["npcID"] = 219655,
},
[106526] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[411644] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Tidehunter",
["npcID"] = 205365,
},
[427001] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[432120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord",
["npcID"] = 228575,
},
[372743] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[385029] = {
["encounterName"] = "Gutshot",
["source"] = "Fleshripper Vulture",
["npcID"] = 186246,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[6358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Betlissa",
["npcID"] = 1863,
},
[407552] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[429051] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[398339] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Seismodor, Earth's Wrath",
["npcID"] = 199664,
},
[390150] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[424958] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[259092] = {
["source"] = "Irontide Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 126919,
},
[369677] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["npcID"] = 184580,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[456696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Brute",
["npcID"] = 224152,
},
[374797] = {
["source"] = "Divebeak Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 189373,
},
[195109] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Stormweaver",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[387083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Briarback",
["npcID"] = 187264,
},
[385036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[125212] = {
["source"] = "Initiate Oman",
["event"] = "SPELL_CAST_START",
["npcID"] = 205818,
},
[444414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blight Swarmer",
["npcID"] = 221669,
},
[76584] = {
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 39990,
},
[38556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magnataur Patriarch",
["npcID"] = 26295,
},
[191527] = {
["source"] = "Blade Dancer Illianna",
["event"] = "SPELL_CAST_START",
["npcID"] = 96657,
},
[384014] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[9739] = {
["source"] = "Moonalli",
["event"] = "SPELL_CAST_START",
["npcID"] = 82015,
},
[386063] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[456702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Blight",
["npcID"] = 220273,
},
[396302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[401421] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[409612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whisper in the Dark",
["npcID"] = 203806,
},
[432135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Pebblemaker",
["npcID"] = 218658,
},
[421898] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[443397] = {
["source"] = "Sureki Venomblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 220193,
},
[387091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Sunseeker",
["npcID"] = 187239,
},
[456707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bor'zal the Lurking",
["npcID"] = 222611,
},
[441351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
[425995] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[59160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Mender",
["npcID"] = 28582,
},
[385046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutstabber",
["npcID"] = 197857,
},
[34974] = {
["encounterName"] = "Swamplord Musel'ek",
["source"] = "Swamplord Musel'ek",
["encounterID"] = 1947,
["event"] = "SPELL_CAST_START",
["npcID"] = 17826,
},
[395284] = {
["source"] = "Rugren",
["event"] = "SPELL_CAST_START",
["npcID"] = 201563,
},
[59800] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["npcID"] = 28546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1984,
},
[375834] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[456711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[446474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxy Blob",
["npcID"] = 229818,
},
[118049] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[428047] = {
["source"] = "Verlann Timbercrush",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[420881] = {
["source"] = "Zaqali Ashwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 208659,
},
[193069] = {
["source"] = "Felsworn Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 96587,
},
[456713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[462856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nullbot",
["npcID"] = 229729,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[412693] = {
["source"] = "Zaqali Dreamcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 211057,
},
[430097] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[76588] = {
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 39990,
},
[396315] = {
["source"] = "Nokhud Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185147,
},
[462859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[396316] = {
["source"] = "Nokhud Huntmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 185353,
},
[376865] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[448528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Fusetender",
["npcID"] = 211777,
},
[200238] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99192,
},
[451600] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Chamber Expeller",
["npcID"] = 224368,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[428054] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[442387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian War-Weaver",
["npcID"] = 222731,
},
[415770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[196144] = {
["source"] = "Mak'rana Siltwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 91790,
},
[446483] = {
["source"] = "Deepwater Sludger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216515,
},
[193585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockbound Trapper",
["npcID"] = 102232,
},
[412700] = {
["source"] = "Zaqali Dreamcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 211057,
},
[369703] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[192050] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91808,
},
[415773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Interval",
["npcID"] = 206065,
},
[76590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[451605] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[328756] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[226347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneclaw Hunter",
["npcID"] = 91332,
},
[111398] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[385063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[432156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Outrider",
["npcID"] = 213095,
},
[420895] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[75823] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Corla, Herald of Twilight",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[373803] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["npcID"] = 189893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[385065] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[188470] = {
["source"] = "Noxious Seedling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211410,
},
[377900] = {
["source"] = "Qalashi Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 191833,
},
[456729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hairless the Menace",
["npcID"] = 213550,
},
[408614] = {
["source"] = "Sundered Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198869,
},
[451612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Destroyer",
["npcID"] = 224609,
},
[428066] = {
["source"] = "Rank Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[396330] = {
["source"] = "Nokhud Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 185357,
},
[256551] = {
["encounterName"] = "Ring of Booty",
["source"] = "Sawtooth Shark",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 129359,
},
[272457] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[429091] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[204852] = {
["isChanneled"] = true,
["source"] = "Nightmare Dweller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101991,
},
[424997] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[398380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismodor, Earth's Wrath",
["npcID"] = 199664,
},
[444449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[449568] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[274507] = {
["source"] = "Bilge Rat Swabby",
["event"] = "SPELL_CAST_START",
["npcID"] = 129526,
},
[386096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Witherer",
["npcID"] = 183954,
},
[456735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquellion",
["npcID"] = 220274,
},
[392239] = {
["source"] = "Sunhide Stomphoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 190953,
},
[56860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Hunter Initiate",
["npcID"] = 26728,
},
[443427] = {
["source"] = "Elder Shadeweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 221102,
},
[407596] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[408620] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[387122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Construct",
["npcID"] = 186740,
},
[14443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Marksman",
["npcID"] = 8338,
},
[385075] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[390194] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[200248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Arcanist",
["npcID"] = 98280,
},
[443430] = {
["source"] = "Sureki Silkbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 220195,
},
[374839] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[387125] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[204344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Assassin",
["npcID"] = 191955,
},
[372793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Avalanche",
["npcID"] = 188244,
},
[441385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hollow Frostweaver",
["npcID"] = 222193,
},
[372794] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[443433] = {
["source"] = "Herald of Ansurek",
["event"] = "SPELL_CAST_START",
["npcID"] = 220196,
},
[428077] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[124967] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1500,
},
[198715] = {
["source"] = "Val'kyr Battlemaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 100876,
},
[272469] = {
["source"] = "Abyssal Reach",
["event"] = "SPELL_CAST_START",
["npcID"] = 138538,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[422961] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200926,
},
[411700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Tidehunter",
["npcID"] = 205365,
},
[417843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Listless Nae'dra",
["npcID"] = 211164,
},
[386107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Screechflight Hexclaw",
["npcID"] = 183995,
},
[456746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Workmaster Earwax",
["npcID"] = 213195,
},
[375870] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[50335] = {
["source"] = "Recalled Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 221436,
},
[428082] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[375871] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[372800] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187125,
},
[422964] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[81459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[106797] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[432179] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[429108] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Cycle Warden",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 209800,
},
[462892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Pylon",
["npcID"] = 229739,
},
[422966] = {
["source"] = "Nolaki",
["event"] = "SPELL_CAST_START",
["npcID"] = 208706,
},
[387135] = {
["source"] = "Primalist Arcblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 194898,
},
[429109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[442418] = {
["source"] = "Umbral Citizen",
["event"] = "SPELL_CAST_START",
["npcID"] = 221245,
},
[428086] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[396350] = {
["source"] = "Bloodbeak the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 201535,
},
[377923] = {
["source"] = "Bound Spark",
["event"] = "SPELL_CAST_START",
["npcID"] = 186624,
},
[440372] = {
["source"] = "Understalker Tunneler",
["event"] = "SPELL_CAST_START",
["npcID"] = 216249,
},
[422969] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[197696] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1833,
},
[270431] = {
["source"] = "Worldcarver Sage",
["event"] = "SPELL_CAST_START",
["npcID"] = 221962,
},
[398400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismodor, Earth's Wrath",
["npcID"] = 199664,
},
[428089] = {
["source"] = "Lowly Moleherd",
["event"] = "SPELL_CAST_START",
["npcID"] = 210818,
},
[200256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Minion",
["npcID"] = 101549,
},
[200768] = {
["source"] = "Crazed Razorbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 95766,
},
[320596] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 162691,
},
[372808] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[422972] = {
["source"] = "Valunei",
["event"] = "SPELL_CAST_START",
["npcID"] = 208709,
},
[440376] = {
["source"] = "Xesh Amputator",
["event"] = "SPELL_CAST_START",
["npcID"] = 218015,
},
[396355] = {
["source"] = "Tarasek Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184461,
},
[446519] = {
["source"] = "Grazing Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 218187,
},
[398403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Earth",
["npcID"] = 200431,
},
[440377] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[429116] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inquisitor Fairbell",
["npcID"] = 211930,
},
[212031] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Bound Energy",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 105705,
},
[412737] = {
["source"] = "Remembered Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 221885,
},
[370764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 187160,
},
[198723] = {
["source"] = "Rotheart Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 99358,
},
[387145] = {
["source"] = "Stormcaller Boroo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[429119] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[397383] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[193093] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[370766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Thrasher",
["npcID"] = 187139,
},
[396360] = {
["source"] = "Tarasek Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184461,
},
[78903] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["npcID"] = 42188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1058,
},
[435263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Ravager",
["npcID"] = 217557,
},
[456762] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[417860] = {
["source"] = "Feral Umbraclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 211401,
},
[425027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[9613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfiend Defiler",
["npcID"] = 93111,
},
[420933] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[401482] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[374865] = {
["source"] = "Ravenous Rockfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 185903,
},
[461884] = {
["source"] = "Spring Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 215810,
},
[387151] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[425030] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[275563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowstarved Bullfrog",
["npcID"] = 214406,
},
[396366] = {
["source"] = "Rimetalon Spellflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 195756,
},
[275564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowstarved Bullfrog",
["npcID"] = 214406,
},
[428103] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Frost Witch",
["npcID"] = 44404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[106546] = {
["source"] = "Bloated Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59518,
},
[369750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187602,
},
[369751] = {
["source"] = "Qalashi Djaradin",
["event"] = "SPELL_CAST_START",
["npcID"] = 195032,
},
[417868] = {
["source"] = "Feral Umbraclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 211401,
},
[129325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodthirsty Prowler",
["npcID"] = 62945,
},
[425035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Core Hound",
["npcID"] = 210288,
},
[260666] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Gilded Priestess",
["npcID"] = 132126,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2084,
},
[383062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayed Elder",
["npcID"] = 189531,
},
[10733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Mechano-Tank",
["npcID"] = 213785,
},
[369754] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[425037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Core Hound",
["npcID"] = 210288,
},
[431180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[11021] = {
["source"] = "Searing Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 4324,
},
[44196] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24674,
},
[372828] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[249919] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[317547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grunk",
["npcID"] = 153581,
},
[115506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Flamethrower",
["npcID"] = 59705,
},
[111667] = {
["encounterName"] = "Armsmaster Harlan",
["source"] = "Scarlet Evoker",
["npcID"] = 58756,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1421,
},
[420947] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[421971] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[377950] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[450637] = {
["source"] = "Deepwalker Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 219035,
},
[456780] = {
["source"] = "King Splash",
["event"] = "SPELL_CAST_START",
["npcID"] = 220275,
},
[453709] = {
["source"] = "Kelpmire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[456782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[412761] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[401500] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[411738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rashok",
["npcID"] = 201320,
},
[371812] = {
["source"] = "Tarasek Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184461,
},
[425048] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[413787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Hatred",
["npcID"] = 203809,
},
[209485] = {
["source"] = "Arcane Manifestation",
["event"] = "SPELL_CAST_START",
["npcID"] = 105704,
},
[119347] = {
["source"] = "Sik'thik Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 61434,
},
[445524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrillwing Hunter En'kilah",
["npcID"] = 222038,
},
[227913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[200784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[456788] = {
["isChanneled"] = true,
["source"] = "King Splash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220275,
},
[430171] = {
["source"] = "Wandering Candle",
["event"] = "SPELL_CAST_START",
["npcID"] = 208450,
},
[106807] = {
["encounterName"] = "Ook-Ook",
["source"] = "Ook-Ook",
["encounterID"] = 1412,
["event"] = "SPELL_CAST_START",
["npcID"] = 56637,
},
[317559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeak",
["npcID"] = 153964,
},
[111670] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "Scarlet Zealot",
["npcID"] = 58590,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[463956] = {
["source"] = "Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[425054] = {
["source"] = "Zaqali Portalkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 211756,
},
[201298] = {
["source"] = "Bloodtainted Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 100532,
},
[26262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vanquished Tentacle",
["npcID"] = 223702,
},
[374892] = {
["source"] = "Tamed Magmammoth Calf",
["event"] = "SPELL_CAST_START",
["npcID"] = 197224,
},
[30741] = {
["source"] = "Grand Warlock Nethekurse",
["event"] = "SPELL_CAST_START",
["npcID"] = 16807,
},
[61730] = {
["source"] = "Snowplain Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 26705,
},
[408677] = {
["source"] = "Sundered Scaleguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198871,
},
[462936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Medbot",
["npcID"] = 229769,
},
[423010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zealous Dryad",
["npcID"] = 210813,
},
[383084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Springfeeder",
["npcID"] = 192456,
},
[428130] = {
["source"] = "Verlann Timbercrush",
["event"] = "SPELL_CAST_START",
["npcID"] = 207554,
},
[375919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Scythid",
["npcID"] = 191104,
},
[443487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worker Bee",
["npcID"] = 210265,
},
[270474] = {
["source"] = "Remembered Thornweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 221745,
},
[410728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabellian",
["npcID"] = 201411,
},
[436322] = {
["source"] = "Atik",
["event"] = "SPELL_CAST_START",
["npcID"] = 217533,
},
[374898] = {
["source"] = "Meadowhoof Musken",
["event"] = "SPELL_CAST_START",
["npcID"] = 190905,
},
[425062] = {
["source"] = "Zaqali Steelshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 210173,
},
[204885] = {
["source"] = "Twinkle",
["event"] = "SPELL_CAST_START",
["npcID"] = 204964,
},
[423015] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[411754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[377971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spawning Thresher",
["npcID"] = 200038,
},
[411755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[375924] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[398447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismodor, Earth's Wrath",
["npcID"] = 199664,
},
[387186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Ravager",
["npcID"] = 217557,
},
[388211] = {
["source"] = "Shale Giant",
["event"] = "SPELL_CAST_START",
["npcID"] = 188122,
},
[272528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Sniper",
["npcID"] = 128967,
},
[385141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[428139] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[453733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[209495] = {
["source"] = "Guardian Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 104270,
},
[375929] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[372858] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2606,
},
[448616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hevo'myk",
["npcID"] = 211591,
},
[253517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[369788] = {
["source"] = "Qalashi Djaradin",
["event"] = "SPELL_CAST_START",
["npcID"] = 188296,
},
[387192] = {
["source"] = "Djaradin Hammer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209831,
},
[385145] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Raptor",
["npcID"] = 187256,
},
[256589] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126847,
},
[411763] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[241233] = {
["source"] = "Rez the Tombwatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 121003,
},
[443500] = {
["source"] = "Royal Swarmguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 220197,
},
[448619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Careless Hopgoblin",
["npcID"] = 223423,
},
[265368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bewitched Captain",
["npcID"] = 131587,
},
[372862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Splash",
["npcID"] = 185645,
},
[369791] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["npcID"] = 184582,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[268440] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 126918,
},
[372863] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[394362] = {
["source"] = "Rasnar the War Ender",
["event"] = "SPELL_CAST_START",
["npcID"] = 193232,
},
[164965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Naturalist",
["npcID"] = 81819,
},
[255567] = {
["event"] = "SPELL_CAST_START",
["source"] = "T'lonja",
["npcID"] = 128455,
},
[265371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enthralled Guard",
["npcID"] = 131585,
},
[59685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
},
[375937] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[409721] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 202610,
},
[51879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jormungar Tunneler",
["npcID"] = 26467,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[428150] = {
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[394367] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morchok",
["npcID"] = 187306,
},
[409724] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[193633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[429176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Aquamage",
["npcID"] = 40943,
},
[414844] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[265377] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[389251] = {
["source"] = "Overgrown Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208626,
},
[443510] = {
["source"] = "Nightfall Executor",
["event"] = "SPELL_CAST_START",
["npcID"] = 217516,
},
[450677] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[387205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyrhold Gryphon",
["npcID"] = 198417,
},
[384134] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[204896] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodscent Felhound",
["npcID"] = 98813,
},
[451702] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[272546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Buccaneer",
["npcID"] = 129366,
},
[429180] = {
["source"] = "Cycle Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 210518,
},
[465012] = {
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 216338,
},
[84037] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 40792,
},
[44202] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24674,
},
[195172] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[448634] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[200291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Scout",
["npcID"] = 98691,
},
[369806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Berserker",
["npcID"] = 184020,
},
[452730] = {
["source"] = "Verdant Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 215813,
},
[389258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piskato",
["npcID"] = 195973,
},
[375950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[458874] = {
["source"] = "Speaker Xanventh",
["event"] = "SPELL_CAST_START",
["npcID"] = 220130,
},
[164973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Naturalist",
["npcID"] = 81819,
},
[412806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Dragon",
["npcID"] = 205804,
},
[379023] = {
["source"] = "Hillside Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 191240,
},
[410760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[119358] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[457853] = {
["source"] = "The Taskmaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 218444,
},
[369811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Berserker",
["npcID"] = 184020,
},
[87622] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[457854] = {
["source"] = "The Taskmaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 218444,
},
[422023] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209333,
},
[444546] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[396430] = {
["source"] = "Custodial Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 192694,
},
[458879] = {
["encounterName"] = "Speaker Xanventh",
["source"] = "Speaker Xanventh",
["encounterID"] = 2947,
["event"] = "SPELL_CAST_START",
["npcID"] = 220119,
},
[260696] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[396432] = {
["source"] = "Ancient Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189798,
},
[422026] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[390290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[448644] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["encounterID"] = 2989,
["event"] = "SPELL_CAST_START",
["npcID"] = 220158,
},
[457858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepfiend Azellix",
["npcID"] = 218458,
},
[422027] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Spirit of the Kaldorei",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 207800,
},
[382101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Artificer Zeerak",
["npcID"] = 201553,
},
[436360] = {
["source"] = "Glooming Darkweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 216868,
},
[255579] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2084,
},
[430218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Fairbell",
["npcID"] = 211930,
},
[260698] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[191595] = {
["source"] = "Felsworn Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 96587,
},
[389269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guarantor",
["npcID"] = 187062,
},
[398483] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[389270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guarantor",
["npcID"] = 187062,
},
[260699] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[379033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Edai",
["npcID"] = 192952,
},
[445577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrillwing Hunter En'kilah",
["npcID"] = 222038,
},
[204905] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99676,
},
[455815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Cabbage Smacker",
["npcID"] = 206514,
},
[450697] = {
["source"] = "Cinderbee Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215023,
},
[260700] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[389273] = {
["source"] = "Wyrmeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 186612,
},
[378012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lavacaller Primalist",
["npcID"] = 186823,
},
[407701] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pendule",
["npcID"] = 204030,
},
[389274] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[260701] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[325802] = {
["source"] = "Keeneye Bowman",
["event"] = "SPELL_CAST_START",
["npcID"] = 166936,
},
[411798] = {
["source"] = "Oozing Sludge",
["event"] = "SPELL_CAST_START",
["npcID"] = 205644,
},
[385181] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[42669] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[207979] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Jazshariu",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104273,
},
[421013] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[59433] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 29120,
},
[410776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Protector",
["npcID"] = 204658,
},
[201837] = {
["source"] = "Taintheart Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 99366,
},
[7992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfang Creeper",
["npcID"] = 4412,
},
[260703] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["npcID"] = 131823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[207980] = {
["source"] = "Baalgar the Watchful",
["event"] = "SPELL_CAST_START",
["npcID"] = 104274,
},
[371875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[422039] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[369828] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Vicious Basilisk",
["npcID"] = 184023,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[424087] = {
["source"] = "Zaqali Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207089,
},
[384161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[398494] = {
["source"] = "Zaqali Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 207090,
},
[440468] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[265407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Banquet Steward",
["npcID"] = 131586,
},
[201839] = {
["source"] = "Taintheart Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 99366,
},
[37551] = {
["source"] = "Shattered Hand Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 16704,
},
[448660] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[398497] = {
["source"] = "Karokta",
["event"] = "SPELL_CAST_START",
["npcID"] = 203625,
},
[125506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander Lindon",
["npcID"] = 59191,
},
[421020] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[459923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Exalted Priest",
["npcID"] = 222368,
},
[395427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lahar",
["npcID"] = 189235,
},
[446615] = {
["source"] = "Nightfall Dark Architect",
["event"] = "SPELL_CAST_START",
["npcID"] = 213885,
},
[451734] = {
["source"] = "Persistent Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222843,
},
[383143] = {
["source"] = "Blightpaw the Depraved",
["event"] = "SPELL_CAST_START",
["npcID"] = 193128,
},
[449687] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[459925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Palace Guardian",
["npcID"] = 222305,
},
[398501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Rock Viper",
["npcID"] = 203783,
},
[264390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Disciple",
["npcID"] = 131685,
},
[421024] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[417953] = {
["source"] = "Galok Wingslicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 206460,
},
[373932] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 190187,
},
[411811] = {
["source"] = "Bubbling Slime",
["event"] = "SPELL_CAST_START",
["npcID"] = 205651,
},
[457880] = {
["source"] = "Nerubian Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208243,
},
[9232] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 3977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[119365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sorcerer Mogu",
["npcID"] = 61250,
},
[457881] = {
["source"] = "Zekvir",
["event"] = "SPELL_CAST_START",
["npcID"] = 227471,
},
[426145] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[378029] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[371887] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Enraged Shards",
["npcID"] = 188067,
},
[442526] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["npcID"] = 214506,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[255591] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2084,
},
[426147] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[403625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[421029] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[422053] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Lasher",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 210231,
},
[456861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore-infused Shalewing",
["npcID"] = 221217,
},
[386223] = {
["source"] = "Primal Stormshield",
["event"] = "SPELL_CAST_START",
["npcID"] = 194896,
},
[449696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen's Guard Ge'zah",
["npcID"] = 223839,
},
[442530] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[373939] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Rotburst Totem",
["npcID"] = 190381,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[272588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Cutthroat",
["npcID"] = 137511,
},
[236142] = {
["encounterName"] = "The Desolate Host",
["source"] = "Engine of Souls",
["encounterID"] = 2054,
["event"] = "SPELL_CAST_START",
["npcID"] = 118460,
},
[257641] = {
["encounterName"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Powdershot",
["npcID"] = 129928,
},
[430247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hallowed Monstrosity",
["npcID"] = 211933,
},
[435366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratus, the Unwoven Paradox",
["npcID"] = 217190,
},
[256106] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126832,
},
[373942] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[456866] = {
["source"] = "Sureki Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[459938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[272592] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[322756] = {
["source"] = "Zolramus Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 165137,
},
[194682] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 98963,
},
[456868] = {
["source"] = "Sureki Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[241263] = {
["encounterName"] = "Harjatan",
["source"] = "Tidescale Witch",
["encounterID"] = 2036,
["event"] = "SPELL_CAST_START",
["npcID"] = 121011,
},
[442536] = {
["source"] = "Covert Webmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 224732,
},
[374969] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[413872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meredy Huntswell",
["npcID"] = 209059,
},
[461989] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[450728] = {
["source"] = "Siegelord Xerosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[373947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skaara",
["npcID"] = 192949,
},
[117833] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["npcID"] = 60708,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[394423] = {
["source"] = "Rohzor Forgesmash",
["event"] = "SPELL_CAST_START",
["npcID"] = 187598,
},
[264407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Maiden",
["npcID"] = 131821,
},
[407733] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[15503] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Warlord Salaris",
["npcID"] = 24559,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[265433] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[455851] = {
["source"] = "Finclaw Bloodtide",
["event"] = "SPELL_CAST_START",
["npcID"] = 220492,
},
[383165] = {
["source"] = "Blightpaw the Depraved",
["event"] = "SPELL_CAST_START",
["npcID"] = 193128,
},
[206459] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Avatar of Shadow",
["encounterID"] = 1818,
["event"] = "SPELL_CAST_START",
["npcID"] = 104293,
},
[68950] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2006,
},
[387261] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[451758] = {
["source"] = "Kobyss Shadeshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 215653,
},
[55982] = {
["source"] = "Recalled Enormos",
["event"] = "SPELL_CAST_START",
["npcID"] = 225274,
},
[457902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beledar's Spawn",
["npcID"] = 207802,
},
[454831] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Skyrazor",
["npcID"] = 225817,
},
[193152] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[388288] = {
["isChanneled"] = true,
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190780,
},
[235638] = {
["source"] = "Treant Grovetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 207616,
},
[306389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmaul Centurion",
["npcID"] = 156825,
},
[459952] = {
["source"] = "Palace Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 233401,
},
[448691] = {
["encounterName"] = "Anub'ikkaj",
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Deepflayer",
["npcID"] = 218657,
},
[258162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lago the Drowned",
["npcID"] = 193025,
},
[456883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gramwharl",
["npcID"] = 220308,
},
[405696] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[373960] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[272609] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[259187] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[425149] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[422078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Wingguard",
["npcID"] = 210278,
},
[95826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Starfall Sentinel",
["npcID"] = 82506,
},
[201858] = {
["source"] = "Taintheart Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 100539,
},
[278755] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[394440] = {
["source"] = "Huntmaster Yrgena",
["event"] = "SPELL_CAST_START",
["npcID"] = 201538,
},
[456889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gramwharl",
["npcID"] = 220308,
},
[412868] = {
["source"] = "Karokta",
["event"] = "SPELL_CAST_START",
["npcID"] = 203625,
},
[421059] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[456891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
[392395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[397514] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[113999] = {
["encounterName"] = "Rattlegore",
["source"] = "Rattlegore",
["npcID"] = 59153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1428,
},
[387277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Revenant",
["npcID"] = 195917,
},
[192135] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Shellbreaker",
["npcID"] = 97264,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[209027] = {
["source"] = "Duskwatch Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 111563,
},
[423109] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[444608] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[169613] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[451775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cogwalker",
["npcID"] = 224527,
},
[444609] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[392398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Thundercloud",
["npcID"] = 197509,
},
[373972] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flamedancer",
["npcID"] = 190206,
},
[253562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Augur",
["npcID"] = 122972,
},
[340189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Matriarch",
["npcID"] = 173655,
},
[451778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Machine Speaker",
["npcID"] = 212878,
},
[218755] = {
["isChanneled"] = true,
["source"] = "Festerhide Grizzly",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95779,
},
[422090] = {
["source"] = "Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 54983,
},
[431304] = {
["source"] = "Manifested Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[75610] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[450756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Commander",
["npcID"] = 214762,
},
[308455] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["npcID"] = 157300,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2325,
},
[157331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
},
[450757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[435401] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[424140] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[449734] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[438473] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["npcID"] = 213179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2926,
},
[423117] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[452806] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[388310] = {
["source"] = "Custodial Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 192694,
},
[435403] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[456902] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[392406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storm Warrior",
["npcID"] = 197982,
},
[393430] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge-Keep Overseer",
["npcID"] = 192703,
},
[431309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadowmage",
["npcID"] = 213892,
},
[438476] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["event"] = "SPELL_CAST_START",
["npcID"] = 213179,
},
[435405] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[188046] = {
["source"] = "Denizen of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 198489,
},
[209033] = {
["source"] = "Duskwatch Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 104246,
},
[390361] = {
["source"] = "Primalist Stormslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 203746,
},
[391385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
[15472] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[430288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Fragment",
["npcID"] = 207202,
},
[15536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Mage",
["npcID"] = 214167,
},
[403671] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[388316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Artificer Zeerak",
["npcID"] = 201553,
},
[31516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Priest",
["npcID"] = 214152,
},
[256639] = {
["source"] = "Blacktar Bomber",
["event"] = "SPELL_CAST_START",
["npcID"] = 129372,
},
[424148] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[55218] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["npcID"] = 29306,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1981,
},
[450766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Living Honey",
["npcID"] = 217833,
},
[384223] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[430292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Fairbell",
["npcID"] = 211930,
},
[439506] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[11985] = {
["source"] = "Searing Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 4323,
},
[375011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seismic Force",
["npcID"] = 192745,
},
[418009] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[427223] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[387297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Srivantor",
["npcID"] = 201555,
},
[270590] = {
["encounterName"] = "Viq'Goth",
["source"] = "Demolishing Terror",
["npcID"] = 137625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[382179] = {
["source"] = "Senior Researcher Alydrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 208734,
},
[395489] = {
["source"] = "Karantun",
["event"] = "SPELL_CAST_START",
["npcID"] = 193647,
},
[457938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beledar's Spawn",
["npcID"] = 207802,
},
[79965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Paladin",
["npcID"] = 214148,
},
[459986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Palace Guardian",
["npcID"] = 222305,
},
[193682] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[340208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Matriarch",
["npcID"] = 173655,
},
[34616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nethervine Inciter",
["npcID"] = 19511,
},
[410848] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[414944] = {
["source"] = "Fungal Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 207454,
},
[372971] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Qalashi Blacksmith",
["npcID"] = 189471,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[414945] = {
["source"] = "Fungal Rotcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 207459,
},
[446682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warped Sapling",
["npcID"] = 220655,
},
[369901] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 186965,
},
[385258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coastal Eel",
["npcID"] = 198782,
},
[115030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muck Brawler",
["npcID"] = 192630,
},
[408805] = {
["source"] = "Incorporeal Being",
["event"] = "SPELL_CAST_START",
["npcID"] = 204560,
},
[450779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Living Honey",
["npcID"] = 217833,
},
[120149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 194853,
},
[416996] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[168092] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[452828] = {
["source"] = "Hunting Skyrazor",
["event"] = "SPELL_CAST_START",
["npcID"] = 226150,
},
[450781] = {
["source"] = "Flickerflame Sticker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212629,
},
[110168] = {
["encounterName"] = "Echo of Baine",
["source"] = "The Black Brewmaiden",
["npcID"] = 54336,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1881,
},
[404713] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[401642] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[455901] = {
["source"] = "Sharpscale the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 215252,
},
[416999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Paladin of the Silver Hand",
["npcID"] = 208193,
},
[393453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalesmith Mita",
["npcID"] = 191010,
},
[60211] = {
["source"] = "Dragonflayer Forge Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 24079,
},
[393454] = {
["source"] = "Battlehorn Pyrhus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190986,
},
[431333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Darkcaster",
["npcID"] = 213893,
},
[40248] = {
["source"] = "Shattered Hand Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 17670,
},
[408811] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[439524] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Benk Buzzbee",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[428263] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[265487] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[450786] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[440549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Executioner",
["npcID"] = 213408,
},
[256138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Honor Guard",
["npcID"] = 127799,
},
[320771] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[407790] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[419052] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Future Self",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 208959,
},
[440551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Executioner",
["npcID"] = 213408,
},
[449765] = {
["source"] = "Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 215770,
},
[387317] = {
["source"] = "Ruby Culler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190093,
},
[200345] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[414959] = {
["source"] = "Molten Runebear",
["event"] = "SPELL_CAST_START",
["npcID"] = 207101,
},
[115289] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["npcID"] = 59789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1423,
},
[157348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
},
[427245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hapless Assistant",
["npcID"] = 212981,
},
[428269] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Void Chunk",
["npcID"] = 213684,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2836,
},
[457959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[454888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khak'ik",
["npcID"] = 216032,
},
[394487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death's Shadow",
["npcID"] = 190985,
},
[407796] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[272662] = {
["source"] = "Irontide Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 129369,
},
[417011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Paladin of the Silver Hand",
["npcID"] = 208193,
},
[446700] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Voracious Worm",
["npcID"] = 219046,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[424178] = {
["source"] = "Sickened Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207926,
},
[253583] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dazar'ai Augur",
["npcID"] = 122972,
},
[463081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Phalanx",
["npcID"] = 229782,
},
[410870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[379134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthshaker Theurgist",
["npcID"] = 189230,
},
[369921] = {
["source"] = "Blazing Firesquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 195448,
},
[388349] = {
["source"] = "Deepwater Eel",
["event"] = "SPELL_CAST_START",
["npcID"] = 215680,
},
[427252] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[383231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[410873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gust Soldier",
["npcID"] = 45477,
},
[321807] = {
["source"] = "Zolramus Bonecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 163619,
},
[352520] = {
["npcID"] = 178601,
},
[76133] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 40792,
},
[453591] = {
["source"] = "Congealed Slime",
["event"] = "SPELL_CAST_START",
["npcID"] = 225494,
},
[412922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[209477] = {
["source"] = "Mana Wyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 105703,
},
[374020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Containment Apparatus",
["npcID"] = 190342,
},
[257169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Demolisher",
["npcID"] = 135245,
},
[417018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Conjuror",
["npcID"] = 206351,
},
[456751] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[133111] = {
["isChanneled"] = true,
["source"] = "Baxel Brassbombs",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67504,
},
[452651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oath-Eater",
["npcID"] = 206844,
},
[456900] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[59430] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29120,
},
[449693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen's Guard Re'zah",
["npcID"] = 223822,
},
[383236] = {
["source"] = "Pearlfin Sea-Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 214435,
},
[453875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[90950] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[320788] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[383237] = {
["source"] = "Primal Lava Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 187321,
},
[400641] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[420907] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[414974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Rootguard",
["npcID"] = 210592,
},
[454817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goblin Cannon",
["npcID"] = 215778,
},
[400642] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[418046] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[378120] = {
["source"] = "Unstable Rock",
["event"] = "SPELL_CAST_START",
["npcID"] = 192799,
},
[432037] = {
["source"] = "Sparklit Buttonmasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212596,
},
[376073] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[418047] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[160772] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mereldar Citizen",
["npcID"] = 225601,
},
[427176] = {
["encounterName"] = "The Darkness",
["source"] = "Wriggling Darkspawn",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 213008,
},
[453879] = {
["source"] = "Grand Overspinner Antourix",
["event"] = "SPELL_CAST_START",
["npcID"] = 225263,
},
[442618] = {
["source"] = "Bazaar Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 220974,
},
[53520] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 1973,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29120,
},
[458746] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[259732] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[445311] = {
["source"] = "Colossal Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 224589,
},
[447456] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[387337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthrazer",
["npcID"] = 203739,
},
[241305] = {
["source"] = "Razorjaw Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 117154,
},
[426883] = {
["source"] = "Kobold Taskworker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212383,
},
[465051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xal'atath",
["npcID"] = 230937,
},
[76369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Beguiler",
["npcID"] = 40167,
},
[432036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hairless the Menace",
["npcID"] = 213550,
},
[198820] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[451820] = {
["source"] = "Gargantuan Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222960,
},
[372623] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[241306] = {
["encounterName"] = "Harjatan",
["source"] = "Razorjaw Acolyte",
["encounterID"] = 2036,
["event"] = "SPELL_CAST_START",
["npcID"] = 117154,
},
[446717] = {
["source"] = "Elder Shadeweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 221102,
},
[14034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hellfire Familiar",
["npcID"] = 19016,
},
[197797] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Risen Arcanist",
["npcID"] = 100486,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[371984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[391050] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[455932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Old Grim",
["npcID"] = 213403,
},
[183465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarspitter Lurker",
["npcID"] = 91001,
},
[417030] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Conjuror",
["npcID"] = 206351,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[258199] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 130400,
},
[59575] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["npcID"] = 24201,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2024,
},
[420102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Garrick",
["npcID"] = 209057,
},
[433411] = {
["source"] = "Nerubian Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[377105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Guard",
["npcID"] = 190510,
},
[431364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Ritualist",
["npcID"] = 214761,
},
[387343] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bouldron",
["npcID"] = 193644,
},
[340160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistveil Matriarch",
["npcID"] = 173655,
},
[418056] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[410890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Warder",
["npcID"] = 205259,
},
[447411] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[44475] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Mage Guard",
["npcID"] = 24683,
},
[30937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Channeler",
["npcID"] = 17653,
},
[106055] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[59148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hardened Steel Skycaller",
["npcID"] = 28580,
},
[453889] = {
["source"] = "Ren'khat",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[258181] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 130400,
},
[35511] = {
["source"] = "Shattered Hand Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 16704,
},
[59696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake Handler",
["npcID"] = 24082,
},
[461870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xal'atath",
["npcID"] = 229227,
},
[215204] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Vigilant Duskwatch",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104918,
},
[406798] = {
["isChanneled"] = true,
["source"] = "Sawscale Viper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208691,
},
[448458] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Devoted Worshipper",
["npcID"] = 223318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[450435] = {
["source"] = "Y'tekhi",
["event"] = "SPELL_CAST_START",
["npcID"] = 215660,
},
[188587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Understone Demolisher",
["npcID"] = 102253,
},
[439559] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[321828] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[75539] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[388374] = {
["source"] = "Elusive Deepstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 204833,
},
[435465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Machinist Protector",
["npcID"] = 219361,
},
[59169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Storming Vortex",
["npcID"] = 28547,
},
[265523] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[373017] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[369946] = {
["source"] = "Dragonhunter Igordan",
["event"] = "SPELL_CAST_START",
["npcID"] = 191611,
},
[375065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 186226,
},
[404754] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Null Glimmer",
["npcID"] = 202971,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[455817] = {
["source"] = "Murkspike",
["event"] = "SPELL_CAST_START",
["npcID"] = 220771,
},
[414992] = {
["source"] = "Invading Flamespeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 206975,
},
[395541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emblazion",
["npcID"] = 193650,
},
[440504] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[453683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
},
[414993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Cassaphine",
["npcID"] = 206818,
},
[387352] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[335141] = {
["source"] = "Nar'zudah",
["event"] = "SPELL_CAST_START",
["npcID"] = 165824,
},
[446328] = {
["source"] = "Vanishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 224922,
},
[39347] = {
["source"] = "Sunseeker Gene-Splicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 19507,
},
[375068] = {
["encounterName"] = "Magmatusk",
["source"] = "Lava Tentacles",
["npcID"] = 190023,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[388377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captured Raven",
["npcID"] = 191508,
},
[389401] = {
["source"] = "Pearlfin Sea-Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 214435,
},
[374045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Containment Apparatus",
["npcID"] = 190342,
},
[321834] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[335143] = {
["source"] = "Zolramus Bonemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 165222,
},
[111715] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[458836] = {
["isChanneled"] = true,
["source"] = "Speaker Xanventh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220130,
},
[270453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geolord Grek'og",
["npcID"] = 151091,
},
[59179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Titanium Thunderer",
["npcID"] = 28965,
},
[113479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Archer",
["npcID"] = 59175,
},
[308527] = {
["encounterName"] = "Ravnyr",
["source"] = "Gor'groth",
["npcID"] = 156814,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[427899] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1751,
},
[424212] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[113691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
},
[378143] = {
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 189895,
},
[55098] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["npcID"] = 29305,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1980,
},
[324909] = {
["source"] = "Drust Boughbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 164926,
},
[423062] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[410904] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[406399] = {
["source"] = "Malgosa Spellbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 205620,
},
[446325] = {
["source"] = "Infected Peafowl",
["event"] = "SPELL_CAST_START",
["npcID"] = 212710,
},
[426261] = {
["source"] = "Sootsnout",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[442432] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["npcID"] = 214506,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[52027] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[76047] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[88170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turbulent Squall",
["npcID"] = 45924,
},
[458834] = {
["source"] = "Speaker Xanventh",
["event"] = "SPELL_CAST_START",
["npcID"] = 220130,
},
[201902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Deadeye",
["npcID"] = 100539,
},
[384899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 186208,
},
[322450] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[440181] = {
["source"] = "Rustul Titancap",
["event"] = "SPELL_CAST_START",
["npcID"] = 213115,
},
[403741] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[269266] = {
["encounterName"] = "Viq'Goth",
["source"] = "Demolishing Terror",
["npcID"] = 137614,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[256616] = {
["source"] = "Scrimshaw Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133990,
},
[451822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aberrant Deepwalker",
["npcID"] = 220653,
},
[444692] = {
["source"] = "Ramolith Curlhorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 221672,
},
[384291] = {
["source"] = "Remembered Stegodon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221876,
},
[199345] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 99200,
},
[324914] = {
["source"] = "Mistveil Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 166299,
},
[373636] = {
["source"] = "Sutaan",
["event"] = "SPELL_CAST_START",
["npcID"] = 188274,
},
[456841] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[217260] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[427290] = {
["source"] = "Galok Wingslicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209047,
},
[375079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[445718] = {
["source"] = "Sparklit Rust Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212597,
},
[422172] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[439576] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[420125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roth the Earthwound",
["npcID"] = 226300,
},
[438355] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[321471] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["npcID"] = 164501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2392,
},
[320822] = {
["source"] = "Zolramus Bonemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 165222,
},
[448791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ardent Paladin",
["npcID"] = 206704,
},
[169657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[373034] = {
["source"] = "Mudfin Mudrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 186690,
},
[459850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Exalted Priest",
["npcID"] = 222368,
},
[52028] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["npcID"] = 28586,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1987,
},
[392486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[196787] = {
["source"] = "Fel-Infused Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 99956,
},
[382249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 185528,
},
[395558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emblazion",
["npcID"] = 193650,
},
[449817] = {
["isChanneled"] = true,
["source"] = "Vilewing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216037,
},
[393511] = {
["source"] = "Cauldronbearer Blakor",
["event"] = "SPELL_CAST_START",
["npcID"] = 186783,
},
[114022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Treasurer",
["npcID"] = 59241,
},
[456752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bor'zal the Lurking",
["npcID"] = 222611,
},
[241108] = {
["encounterName"] = "Harjatan",
["source"] = "Tidescale Legionnaire",
["encounterID"] = 2036,
["event"] = "SPELL_CAST_START",
["npcID"] = 117123,
},
[387127] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[398631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Trapper",
["npcID"] = 212987,
},
[193717] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[68895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Apparition",
["npcID"] = 36551,
},
[434281] = {
["source"] = "Weeping Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217268,
},
[22883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
[272711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Demolisher",
["npcID"] = 135245,
},
[441630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Vanguard",
["npcID"] = 218316,
},
[169445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Abomination",
["npcID"] = 84767,
},
[324923] = {
["source"] = "Drust Boughbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 164926,
},
[424227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Priestess of the Moon",
["npcID"] = 211076,
},
[320462] = {
["source"] = "Zolramus Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 163128,
},
[235692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Darius Crowley",
["npcID"] = 213057,
},
[195254] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[257063] = {
["source"] = "Irontide Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 129370,
},
[320772] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[442250] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Blood Parasite",
["npcID"] = 220626,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[456853] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[452895] = {
["isChanneled"] = true,
["source"] = "Rabaan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228343,
},
[369853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burly Rock-Thrower",
["npcID"] = 184019,
},
[426277] = {
["isChanneled"] = true,
["source"] = "Torchsnarl",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212411,
},
[451871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Earthcaller",
["npcID"] = 224219,
},
[391470] = {
["source"] = "Bowline",
["event"] = "SPELL_CAST_START",
["npcID"] = 194451,
},
[449824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Springbubble",
["npcID"] = 219262,
},
[389423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thieving Conjurer",
["npcID"] = 196388,
},
[32330] = {
["source"] = "Lykul Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 17732,
},
[193502] = {
["source"] = "Glayvianna Soulrender",
["event"] = "SPELL_CAST_START",
["npcID"] = 98177,
},
[324776] = {
["source"] = "Mistveil Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 166275,
},
[81008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalspawn Giant",
["npcID"] = 42810,
},
[456745] = {
["source"] = "Crimson Deathweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222692,
},
[395567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gravlion",
["npcID"] = 193654,
},
[50989] = {
["isChanneled"] = true,
["source"] = "Wintergrasp Catapult",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 27881,
},
[288774] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malfunctioning Pylon",
["npcID"] = 229739,
},
[201399] = {
["source"] = "Dreadfire Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 100527,
},
[451435] = {
["source"] = "Voidwraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 224466,
},
[82800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Queen's Guard",
["npcID"] = 207152,
},
[373046] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[421746] = {
["source"] = "The Stonewarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210235,
},
[375094] = {
["source"] = "Swift Hornstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 188089,
},
[433448] = {
["isChanneled"] = true,
["source"] = "Nerubian Webspinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216621,
},
[426206] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[272422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Spotter",
["npcID"] = 138255,
},
[440615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Shadowcaster",
["npcID"] = 213405,
},
[461880] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[426283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedheart Invader",
["npcID"] = 212389,
},
[454877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rhak'ik",
["npcID"] = 221032,
},
[111722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
},
[37668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Spellbinder",
["npcID"] = 18312,
},
[450854] = {
["source"] = "Deathscreamer Iken'tak",
["event"] = "SPELL_CAST_START",
["npcID"] = 211263,
},
[374073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Geomancer",
["npcID"] = 190345,
},
[411952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Timebender",
["npcID"] = 205337,
},
[449831] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kaheti Silk Hauler",
["npcID"] = 221327,
},
[446760] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infesting Latcher",
["npcID"] = 222572,
},
[441626] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[416048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[16102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[373051] = {
["source"] = "Mudfin Salamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186669,
},
[44224] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 24664,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[411954] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Chronoweaver",
["npcID"] = 205384,
},
[387960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[405812] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[449815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandres the Relicbearer",
["npcID"] = 217534,
},
[391480] = {
["source"] = "Two-Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 194522,
},
[425264] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[389433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qiraji Prophet",
["npcID"] = 195641,
},
[213688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Lord",
["npcID"] = 107024,
},
[424241] = {
["source"] = "Amirdrassil Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207782,
},
[396600] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[385339] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[419123] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[191678] = {
["source"] = "Viletongue Belcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 96480,
},
[384316] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[320614] = {
["encounterName"] = "Blightbone",
["source"] = "Carrion Worm",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 164702,
},
[374080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Ravager",
["npcID"] = 190348,
},
[411958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iridikron's Creation",
["npcID"] = 205691,
},
[383864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Magma",
["npcID"] = 191917,
},
[442277] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[68982] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2007,
},
[455839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathly Presence",
["npcID"] = 224820,
},
[270419] = {
["source"] = "Worldcarver Strongback",
["event"] = "SPELL_CAST_START",
["npcID"] = 221960,
},
[259531] = {
["encounterName"] = "Vol'kaal",
["source"] = "Reanimation Totem",
["npcID"] = 125977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2085,
},
[450546] = {
["source"] = "Nerubian Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 228954,
},
[257170] = {
["source"] = "Irontide Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 129369,
},
[405361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[453607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[322767] = {
["source"] = "Drust Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 164921,
},
[403771] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[273470] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[448818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[375671] = {
["source"] = "Primalist Iceslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 203750,
},
[444722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zealous Templar",
["npcID"] = 207949,
},
[445746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwater Tidecrusher",
["npcID"] = 220621,
},
[426295] = {
["source"] = "Sootsnout",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[455984] = {
["source"] = "Voidstone Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 221307,
},
[383298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
[443353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infesting Cindermite",
["npcID"] = 222276,
},
[405821] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[451890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Soot-Seer",
["npcID"] = 212876,
},
[201176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[265568] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[3110] = {
["source"] = "Yazbis",
["event"] = "SPELL_CAST_START",
["npcID"] = 416,
},
[322614] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[428345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Scorpid",
["npcID"] = 213696,
},
[450613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekeeper Graz",
["npcID"] = 219279,
},
[33860] = {
["source"] = "Bloodhilt Battlemage",
["event"] = "SPELL_CAST_START",
["npcID"] = 68639,
},
[382277] = {
["source"] = "Balara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[444363] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[408576] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[340304] = {
["source"] = "Mistveil Gorgegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 173720,
},
[427323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[195108] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[196290] = {
["source"] = "Stormwake Hydra",
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[340305] = {
["source"] = "Mistveil Gorgegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 173720,
},
[432130] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[387398] = {
["source"] = "Crook",
["event"] = "SPELL_CAST_START",
["npcID"] = 194445,
},
[321669] = {
["encounterName"] = "Mistcaller",
["source"] = "Illusionary Clone",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 165108,
},
[389446] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[455990] = {
["source"] = "Talinhet",
["event"] = "SPELL_CAST_START",
["npcID"] = 221972,
},
[442501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Ironweaver",
["npcID"] = 220551,
},
[432227] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[200898] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 96015,
},
[406851] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[268230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Deckhand",
["npcID"] = 138464,
},
[388424] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[392451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Channeler",
["npcID"] = 197985,
},
[426855] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[436117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eratus, the Unwoven Paradox",
["npcID"] = 217190,
},
[441395] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["npcID"] = 216320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2905,
},
[462983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automatic Ironstrider",
["npcID"] = 229778,
},
[201411] = {
["source"] = "Dreadfire Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 100527,
},
[13321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felhound Manastalker",
["npcID"] = 17401,
},
[455865] = {
["source"] = "First Blade Grimskarn",
["event"] = "SPELL_CAST_START",
["npcID"] = 221970,
},
[456884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tentacle",
["npcID"] = 227168,
},
[406854] = {
["source"] = "Malgosa Spellbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 205620,
},
[432448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Ritualist",
["npcID"] = 214761,
},
[372047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[446405] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["npcID"] = 214348,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2895,
},
[209602] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 104218,
},
[395594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zurgaz Corebreaker",
["npcID"] = 193680,
},
[451423] = {
["source"] = "Xeph'itik",
["event"] = "SPELL_CAST_START",
["npcID"] = 219984,
},
[200700] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[448663] = {
["encounterName"] = "The Puppetmaster",
["source"] = "The Puppetmaster?",
["encounterID"] = 3006,
["event"] = "SPELL_CAST_START",
["npcID"] = 220510,
},
[458688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Volcanic Fury",
["npcID"] = 225896,
},
[460092] = {
["source"] = "Spinemaw Staghorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 167111,
},
[401258] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[415047] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[317791] = {
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[59839] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["npcID"] = 29304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1978,
},
[385359] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[427333] = {
["source"] = "Rydra Scalegorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 209048,
},
[317792] = {
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[384336] = {
["source"] = "Nokhud Plainstomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 191847,
},
[462802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Machinist",
["npcID"] = 229695,
},
[419144] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[441627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flavor Scientist",
["npcID"] = 214673,
},
[244881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unknown",
["npcID"] = 224994,
},
[424879] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[418059] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[448560] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[453953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodtwister Ovi'nax",
["npcID"] = 214506,
},
[321891] = {
["encounterName"] = "Mistcaller",
["source"] = "Illusionary Vulpin",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 165251,
},
[390481] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[428360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firelands Destroyer",
["npcID"] = 210293,
},
[340300] = {
["source"] = "Mistveil Gorgegullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 173720,
},
[368983] = {
["source"] = "Rebel Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195062,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[387411] = {
["source"] = "Soulharvester Galtmaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[257478] = {
["source"] = "Irontide Mastiff",
["event"] = "SPELL_CAST_START",
["npcID"] = 128551,
},
[368984] = {
["source"] = "Dragonbane Firebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186605,
},
[172673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calia Menethil",
["npcID"] = 214074,
},
[434505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Pyromaniac",
["npcID"] = 218671,
},
[409445] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[450885] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[68988] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2006,
},
[444743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Mage",
["npcID"] = 221760,
},
[451913] = {
["source"] = "Ascended Webfriar",
["event"] = "SPELL_CAST_START",
["npcID"] = 219022,
},
[200905] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96015,
},
[460100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slatefang",
["npcID"] = 228439,
},
[321894] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Nalthor the Rimebinder",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 162693,
},
[448347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diu'mik",
["npcID"] = 211564,
},
[239808] = {
["source"] = "Eternal Soulguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 120191,
},
[275826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Commander",
["npcID"] = 128969,
},
[305515] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["npcID"] = 156501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[396629] = {
["source"] = "Elusive Prime Salamanther",
["event"] = "SPELL_CAST_START",
["npcID"] = 194062,
},
[455812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Cabbage Smacker",
["npcID"] = 206514,
},
[427342] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[407891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[453960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodtwister Ovi'nax",
["npcID"] = 214506,
},
[373084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontorch Commander",
["npcID"] = 189466,
},
[130414] = {
["source"] = "Rainiara the Kingslayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82260,
},
[81530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[417634] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[239810] = {
["source"] = "Eternal Soulguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 120191,
},
[110963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 58569,
},
[448843] = {
["source"] = "Glumtooth Bug-beater",
["event"] = "SPELL_CAST_START",
["npcID"] = 222176,
},
[386921] = {
["encounterName"] = "Granyth",
["source"] = "Dragonkiller Lance",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 194367,
},
[463176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voracious Stagshell",
["npcID"] = 222145,
},
[427346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[413013] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[373087] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[460106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slatefang",
["npcID"] = 228439,
},
[34759] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_CAST_START",
["npcID"] = 17975,
},
[265594] = {
["source"] = "Umbra'rix",
["event"] = "SPELL_CAST_START",
["npcID"] = 134717,
},
[54850] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Colossus",
["npcID"] = 29307,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1983,
},
[405850] = {
["source"] = "Drazos Blackwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 205623,
},
[114291] = {
["source"] = "Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59464,
},
[425300] = {
["isChanneled"] = true,
["source"] = "Zaqali Flamemancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[320376] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 164578,
},
[382303] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["npcID"] = 184018,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2556,
},
[448847] = {
["encounterName"] = "General Umbriss",
["event"] = "SPELL_CAST_START",
["source"] = "General Umbriss",
["npcID"] = 39625,
},
[196563] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[381280] = {
["source"] = "Uktulut Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 193203,
},
[215754] = {
["source"] = "Spawn of Serpentrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 108655,
},
[424798] = {
["source"] = "Infected Beast",
["event"] = "SPELL_CAST_START",
["npcID"] = 210478,
},
[75645] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[88186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empyrean Assassin",
["npcID"] = 45922,
},
[275835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Invader",
["npcID"] = 137516,
},
[411994] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Chronoweaver",
["npcID"] = 205384,
},
[384353] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[463182] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[374634] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[197144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[36807] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[422233] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[423257] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[436205] = {
["source"] = "Unstable Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 216328,
},
[436180] = {
["source"] = "Rampant Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 215048,
},
[389474] = {
["source"] = "Primalist Flowbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 203748,
},
[394593] = {
["source"] = "Captain Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193198,
},
[387427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[445781] = {
["source"] = "Sparklit Rust Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212597,
},
[384194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[423259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Blazekin",
["npcID"] = 210685,
},
[17290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Hunter Ascendant",
["npcID"] = 26727,
},
[437592] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[376169] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Thaumaturge Fural",
["npcID"] = 189905,
},
[423260] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[448854] = {
["encounterName"] = "Anub'ikkaj",
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Drunkard",
["npcID"] = 218655,
},
[413023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[200913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[427356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[167385] = {
["npcID"] = 109096,
},
[59842] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["npcID"] = 29304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1978,
},
[385383] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[398692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[320637] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 162691,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[256709] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riptide Shredder",
["npcID"] = 129371,
},
[168666] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["npcID"] = 84358,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[432117] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[376171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Icecaller",
["npcID"] = 190377,
},
[260292] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[427359] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arathi Footman",
["npcID"] = 206705,
},
[406886] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[113141] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1430,
},
[385386] = {
["source"] = "Overseer Stonetongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 201552,
},
[423265] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[322938] = {
["isChanneled"] = true,
["source"] = "Drust Harvester",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164921,
},
[438622] = {
["isChanneled"] = true,
["source"] = "Engorged Crawler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214840,
},
[439646] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["npcID"] = 216658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2909,
},
[265540] = {
["source"] = "Fetid Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 130909,
},
[384868] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[46150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Witch",
["npcID"] = 24696,
},
[88445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Marksman",
["npcID"] = 8338,
},
[265089] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[384365] = {
["source"] = "Nokhud Plainstomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 191847,
},
[454813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Skyrazor",
["npcID"] = 225817,
},
[384366] = {
["source"] = "Remembered Owl",
["event"] = "SPELL_CAST_START",
["npcID"] = 221946,
},
[214988] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[31717] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["encounterID"] = 1948,
["event"] = "SPELL_CAST_START",
["npcID"] = 17882,
},
[422245] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["encounterID"] = 2829,
["event"] = "SPELL_CAST_START",
["npcID"] = 210153,
},
[110968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 58569,
},
[210131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Killclaw the Terrible",
["npcID"] = 153266,
},
[458077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parasitic Worm",
["npcID"] = 222786,
},
[448864] = {
["source"] = "Burly Contender",
["event"] = "SPELL_CAST_START",
["npcID"] = 217646,
},
[463052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Phalanx",
["npcID"] = 229782,
},
[60227] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2026,
},
[257736] = {
["source"] = "Irontide Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 126919,
},
[35913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Blessed Highborne",
["npcID"] = 207147,
},
[3606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Totem",
["npcID"] = 2523,
},
[387440] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[269456] = {
["encounterName"] = "Viq'Goth",
["source"] = "Viq'Goth",
["npcID"] = 128652,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2100,
},
[418153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderclaw Stalker",
["npcID"] = 207084,
},
[394607] = {
["source"] = "Captain Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193198,
},
[250050] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[438471] = {
["encounterName"] = "Avanoxx",
["source"] = "Avanoxx",
["encounterID"] = 2926,
["event"] = "SPELL_CAST_START",
["npcID"] = 213179,
},
[393584] = {
["source"] = "Horned Armoredon",
["event"] = "SPELL_CAST_START",
["npcID"] = 194692,
},
[427357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[412012] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Timeslicer",
["npcID"] = 205408,
},
[404846] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[426345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Touched Elemental",
["npcID"] = 212400,
},
[451939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Destroyer",
["npcID"] = 224609,
},
[195801] = {
["isChanneled"] = true,
["source"] = "Skrog Tidestomper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95939,
},
[372087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[320655] = {
["encounterName"] = "Blightbone",
["source"] = "Blightbone",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 162691,
},
[435560] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[449447] = {
["source"] = "Overseer Roskarrag",
["event"] = "SPELL_CAST_START",
["npcID"] = 221071,
},
[88959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Adept",
["npcID"] = 45935,
},
[439401] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[452699] = {
["source"] = "Verdant Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 215813,
},
[413529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[257739] = {
["source"] = "Blacktooth Scrapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 129529,
},
[456654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathbound Husk",
["npcID"] = 220272,
},
[374137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerdrool",
["npcID"] = 195968,
},
[326021] = {
["source"] = "Spinemaw Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 172312,
},
[389487] = {
["source"] = "Neela Firebane",
["event"] = "SPELL_CAST_START",
["npcID"] = 193686,
},
[451732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarming Cogwalker",
["npcID"] = 232871,
},
[456027] = {
["source"] = "Talinhet",
["event"] = "SPELL_CAST_START",
["npcID"] = 221972,
},
[51587] = {
["source"] = "Dragonflayer Spiritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 28410,
},
[408946] = {
["source"] = "Sundered Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198870,
},
[75907] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40633,
},
[463206] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Chef Chewie",
["npcID"] = 214697,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[451812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Forgecaster",
["npcID"] = 212884,
},
[429422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[455016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Skyrazor",
["npcID"] = 225817,
},
[388474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodstripe Great Ray",
["npcID"] = 210050,
},
[443436] = {
["source"] = "Herald of Ansurek",
["event"] = "SPELL_CAST_START",
["npcID"] = 220196,
},
[372093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Furious Flame",
["npcID"] = 196540,
},
[118905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Capacitor Totem",
["npcID"] = 61245,
},
[427376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[428400] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["npcID"] = 207796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[392569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[449709] = {
["source"] = "Purgle-lurgle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214544,
},
[439341] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[428401] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[433410] = {
["source"] = "Chittering Fearmonger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216583,
},
[440687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Jelly Purveyor",
["npcID"] = 220141,
},
[427858] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[448877] = {
["encounterName"] = "General Umbriss",
["event"] = "SPELL_CAST_START",
["source"] = "General Umbriss",
["npcID"] = 39625,
},
[458092] = {
["source"] = "Strength of Beledar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221690,
},
[411000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[410999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[264603] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[453997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless One",
["npcID"] = 223119,
},
[265081] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[456045] = {
["source"] = "Talinhet",
["event"] = "SPELL_CAST_START",
["npcID"] = 221972,
},
[392576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[429428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Burst Totem",
["npcID"] = 214287,
},
[446832] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[411001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurking Tempest",
["npcID"] = 45704,
},
[11990] = {
["isChanneled"] = true,
["source"] = "Firemane Flamecaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4334,
},
[392574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[88194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[411002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cloud Prince",
["npcID"] = 45917,
},
[240066] = {
["encounterName"] = "Harjatan",
["source"] = "Razorjaw Wavemender",
["encounterID"] = 2036,
["event"] = "SPELL_CAST_START",
["npcID"] = 116569,
},
[437620] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[450929] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[457872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepfiend Azellix",
["npcID"] = 218458,
},
[412027] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[458096] = {
["source"] = "Strength of Beledar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221690,
},
[456611] = {
["source"] = "Zeeben",
["event"] = "SPELL_CAST_START",
["npcID"] = 221975,
},
[427384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[264608] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[463217] = {
["source"] = "Mistveil Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 166276,
},
[452980] = {
["source"] = "Aggregation of Horrors",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[464240] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[439467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yes Man",
["npcID"] = 219588,
},
[445813] = {
["source"] = "Unstable Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 216328,
},
[46153] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["npcID"] = 24723,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1897,
},
[406911] = {
["source"] = "Sarek Cinderbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 205619,
},
[424315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 211086,
},
[117628] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Zian of the Endless Shadow",
["npcID"] = 60701,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[463218] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Hired Muscle",
["npcID"] = 210269,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[431349] = {
["source"] = "Nightfall Dark Architect",
["event"] = "SPELL_CAST_START",
["npcID"] = 213885,
},
[407936] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[256957] = {
["source"] = "Irontide Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 129370,
},
[384961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 186208,
},
[463905] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[177731] = {
["encounterName"] = "Witherbark",
["source"] = "Enchanted Waters",
["npcID"] = 88862,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[442428] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[448888] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[461836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Candleflyer",
["npcID"] = 219343,
},
[395653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Leg Chewer",
["npcID"] = 217743,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[56775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Magus",
["npcID"] = 26722,
},
[22121] = {
["source"] = "Timberstep Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194041,
},
[438618] = {
["source"] = "Engorged Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 214840,
},
[322968] = {
["source"] = "Drust Spiteclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 165111,
},
[453894] = {
["source"] = "Ren'khat",
["event"] = "SPELL_CAST_START",
["npcID"] = 222152,
},
[415106] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[452985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Marshal Tekhzok",
["npcID"] = 215987,
},
[445819] = {
["source"] = "Ashen Stonestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 217624,
},
[446843] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Warped Sapling",
["npcID"] = 220655,
},
[411012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[385419] = {
["source"] = "Overseer Stonetongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 201552,
},
[23337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stars' Rest Sentinel",
["npcID"] = 26448,
},
[446844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parasitic Worm",
["npcID"] = 222786,
},
[374158] = {
["source"] = "Hecutta",
["event"] = "SPELL_CAST_START",
["npcID"] = 207300,
},
[305567] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["npcID"] = 156501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[46026] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Apoko",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24553,
},
[389515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Creeper",
["npcID"] = 185811,
},
[451965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Giant",
["npcID"] = 40166,
},
[434252] = {
["source"] = "Nerubian Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 217039,
},
[400777] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[450941] = {
["source"] = "Cinderbee Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 222820,
},
[345495] = {
["npcID"] = 175519,
},
[34637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Channeler",
["npcID"] = 19505,
},
[438658] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[456653] = {
["source"] = "Worldcarver Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 221964,
},
[431491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Commander",
["npcID"] = 214762,
},
[457085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[408969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Mud",
["npcID"] = 192519,
},
[389518] = {
["source"] = "Sparklit Buttonmasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212596,
},
[17287] = {
["source"] = "Bloodwarder Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 19633,
},
[326046] = {
["source"] = "Spinemaw Staghorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 167111,
},
[408970] = {
["source"] = "Sundered Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198870,
},
[418637] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[431493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Curseblade",
["npcID"] = 223995,
},
[448897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[453749] = {
["source"] = "Kelpmire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[37965] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[431494] = {
["source"] = "Nightfall Tactician",
["event"] = "SPELL_CAST_START",
["npcID"] = 213934,
},
[424328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[456515] = {
["source"] = "Gong'tze the Riverhewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 221974,
},
[421260] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[423305] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[424322] = {
["source"] = "Blazing Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 220815,
},
[418187] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[451971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Giant",
["npcID"] = 40166,
},
[432520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Darkcaster",
["npcID"] = 213893,
},
[392594] = {
["source"] = "Meatgrinder Sotok",
["event"] = "SPELL_CAST_START",
["npcID"] = 186777,
},
[46155] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["encounterID"] = 1897,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24723,
},
[427402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Rookguard",
["npcID"] = 207197,
},
[420236] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[34254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Botanist",
["npcID"] = 18422,
},
[369049] = {
["encounterName"] = "Emberon",
["source"] = "Vault Keeper",
["npcID"] = 186107,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[441410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worker Bee",
["npcID"] = 210265,
},
[419659] = {
["source"] = "Incendiary Runebear",
["event"] = "SPELL_CAST_START",
["npcID"] = 209882,
},
[57984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Fire Elemental",
["npcID"] = 95061,
},
[405905] = {
["source"] = "Henri Snufftail",
["event"] = "SPELL_CAST_START",
["npcID"] = 210075,
},
[427404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[458638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Flamecoil Serpent",
["npcID"] = 225895,
},
[445252] = {
["isChanneled"] = true,
["source"] = "Kobyss Necromancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214625,
},
[430476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hallowed Monstrosity",
["npcID"] = 211933,
},
[449567] = {
["source"] = "Enduring Gutterface",
["event"] = "SPELL_CAST_START",
["npcID"] = 216045,
},
[432030] = {
["source"] = "Sureki Screamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 215411,
},
[257756] = {
["source"] = "Bilge Rat Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129527,
},
[264520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Survivalist",
["npcID"] = 131850,
},
[425315] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[383385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Filth Caller",
["npcID"] = 185656,
},
[198379] = {
["encounterName"] = "Archdruid Glaidalis",
["source"] = "Archdruid Glaidalis",
["encounterID"] = 1836,
["event"] = "SPELL_CAST_START",
["npcID"] = 96512,
},
[15254] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Beacon",
["npcID"] = 18431,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[170738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Undermage Kesalon",
["npcID"] = 85496,
},
[270481] = {
["source"] = "Demonic Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 135002,
},
[446807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222787,
},
[385434] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[44547] = {
["source"] = "Sister of Torment",
["event"] = "SPELL_CAST_START",
["npcID"] = 24697,
},
[446776] = {
["event"] = "SPELL_CAST_START",
["source"] = "War Lynx",
["npcID"] = 206699,
},
[462216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamerender",
["npcID"] = 224240,
},
[369055] = {
["source"] = "Dragonbane Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 186602,
},
[448485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guard Captain Suleyman",
["npcID"] = 212826,
},
[191726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[435012] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[125056] = {
["source"] = "Zuckerberg",
["event"] = "SPELL_CAST_START",
["npcID"] = 165189,
},
[415125] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 207638,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[446862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parasitic Worm",
["npcID"] = 222786,
},
[52118] = {
["source"] = "Iceshatter",
["event"] = "SPELL_CAST_START",
["npcID"] = 27007,
},
[389532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giant Lasher",
["npcID"] = 194588,
},
[405870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Slayer Phytethil",
["npcID"] = 226298,
},
[34639] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Harvester",
["npcID"] = 19509,
},
[450714] = {
["source"] = "Deepwalker Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 219035,
},
[441747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web Acolyte",
["npcID"] = 218320,
},
[412488] = {
["source"] = "Crawling Goo",
["event"] = "SPELL_CAST_START",
["npcID"] = 205820,
},
[375201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bright Gustfeather",
["npcID"] = 195002,
},
[438677] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[13860] = {
["source"] = "Dreadlord Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 41471,
},
[372561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Hunter",
["npcID"] = 189227,
},
[416152] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[384416] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[418200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[205549] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[321968] = {
["source"] = "Tirnenn Villager",
["event"] = "SPELL_CAST_START",
["npcID"] = 164929,
},
[449937] = {
["source"] = "Cyclonecrier Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 222959,
},
[369061] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[398750] = {
["isChanneled"] = true,
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199667,
},
[343470] = {
["source"] = "Skeletal Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 165919,
},
[37967] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[385442] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[456081] = {
["source"] = "Temaya",
["event"] = "SPELL_CAST_START",
["npcID"] = 221973,
},
[449941] = {
["source"] = "Emperor Pitfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 219265,
},
[449939] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[463248] = {
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[427417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[133889] = {
["source"] = "Bilgewater Field Medic",
["event"] = "SPELL_CAST_START",
["npcID"] = 67919,
},
[449940] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[397729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[424771] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[403272] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[76686] = {
["source"] = "Twilight Obsidian Borer",
["event"] = "SPELL_CAST_START",
["npcID"] = 40019,
},
[459155] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[423324] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[338353] = {
["source"] = "Corpse Collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 173016,
},
[421277] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[449834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Springbubble",
["npcID"] = 219262,
},
[449942] = {
["source"] = "Emperor Pitfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 219265,
},
[86830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[427950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[378847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Spinecrusher",
["npcID"] = 192787,
},
[111599] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[191732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[432959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Ascendant",
["npcID"] = 212793,
},
[431935] = {
["source"] = "Umbral Citizen",
["event"] = "SPELL_CAST_START",
["npcID"] = 221245,
},
[378282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[436637] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[126955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Warden",
["npcID"] = 64061,
},
[405924] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[450718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegelord Xerosh",
["npcID"] = 224311,
},
[424352] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[338357] = {
["source"] = "Kyrian Stitchwerk",
["event"] = "SPELL_CAST_START",
["npcID"] = 172981,
},
[439621] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[199389] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 99200,
},
[427157] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208747,
},
[254901] = {
["source"] = "Atal'Shadra Bloodletter",
["event"] = "SPELL_CAST_START",
["npcID"] = 122872,
},
[463256] = {
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["npcID"] = 43873,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1041,
},
[444829] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[444473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shacklefang Leafnose",
["npcID"] = 223167,
},
[381357] = {
["source"] = "Clearwater Ottuk",
["event"] = "SPELL_CAST_START",
["npcID"] = 192854,
},
[451996] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[432125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Silk Hauler",
["npcID"] = 221327,
},
[425379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamespreader",
["npcID"] = 210294,
},
[369073] = {
["source"] = "Ancient Tundrafur",
["event"] = "SPELL_CAST_START",
["npcID"] = 193231,
},
[374192] = {
["encounterName"] = "Anub'ikkaj",
["event"] = "SPELL_CAST_START",
["source"] = "Armored Riplisk",
["npcID"] = 217524,
},
[191735] = {
["source"] = "Felsworn Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 98954,
},
[392013] = {
["source"] = "Crystalline Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 201063,
},
[427260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Rooktender",
["npcID"] = 207199,
},
[427428] = {
["source"] = "Greedy Gessie",
["event"] = "SPELL_CAST_START",
["npcID"] = 209936,
},
[420925] = {
["source"] = "Aurostor",
["event"] = "SPELL_CAST_START",
["npcID"] = 209574,
},
[425381] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Firelands Flameguard",
["npcID"] = 210290,
},
[111752] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[440288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roaming Mongrel",
["npcID"] = 218330,
},
[407978] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Ahnzon",
["npcID"] = 201792,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[372147] = {
["source"] = "Balara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[430179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Oracle",
["npcID"] = 214439,
},
[260697] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[387504] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[392394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[443482] = {
["source"] = "Shadowtide Bulwark",
["event"] = "SPELL_CAST_START",
["npcID"] = 220886,
},
[423200] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[445541] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[398394] = {
["source"] = "Shaleshell Clicker",
["event"] = "SPELL_CAST_START",
["npcID"] = 220155,
},
[61515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hardened Steel Skycaller",
["npcID"] = 28580,
},
[427432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[436592] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[20716] = {
["source"] = "Bronze Shrine Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 26277,
},
[198904] = {
["source"] = "Rotheart Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 99358,
},
[398770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Akiormi",
["npcID"] = 200702,
},
[183548] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneclaw Grubmaster",
["npcID"] = 102404,
},
[372151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 186284,
},
[377270] = {
["source"] = "Pearlfin Waterweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 214434,
},
[370104] = {
["source"] = "Dragonbane Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186600,
},
[423979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Cursed Crusher",
["npcID"] = 214419,
},
[421292] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[459171] = {
["source"] = "Val'kyr Shadowguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 227940,
},
[456100] = {
["source"] = "Temaya",
["event"] = "SPELL_CAST_START",
["npcID"] = 221973,
},
[456101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Crystal Monstrosity",
["npcID"] = 217200,
},
[425388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewaker Infernoguard",
["npcID"] = 210295,
},
[448640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[39121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodwarder Greenkeeper",
["npcID"] = 18419,
},
[449960] = {
["source"] = "Deepwater Kobyss",
["event"] = "SPELL_CAST_START",
["npcID"] = 215750,
},
[409009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[128233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[406962] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[403891] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[413105] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[400756] = {
["source"] = "Remembered Lazy Peon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221895,
},
[113690] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[441772] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[404916] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[373573] = {
["source"] = "Sprite Dreamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207617,
},
[452009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hijacked Ironstrider",
["npcID"] = 219287,
},
[376644] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[429487] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[446533] = {
["source"] = "Mycotic Shalehorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 212704,
},
[445866] = {
["isChanneled"] = true,
["source"] = "Swarm-Maven Donmiss",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216578,
},
[32674] = {
["source"] = "Recalled Reanimated Crusader",
["event"] = "SPELL_CAST_START",
["npcID"] = 226096,
},
[446859] = {
["source"] = "Blackblood Coalescence",
["event"] = "SPELL_CAST_START",
["npcID"] = 215205,
},
[463272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Skyrazor",
["npcID"] = 229918,
},
[198079] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1834,
},
[391610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gusting Proto-Dragon",
["npcID"] = 190401,
},
[425394] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[250096] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[378155] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["npcID"] = 186125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[452014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless One",
["npcID"] = 223119,
},
[449965] = {
["source"] = "Sludgeborn Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 220734,
},
[389564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huntergreen Salamanther",
["npcID"] = 212145,
},
[452013] = {
["source"] = "Cyclonecrier Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 222959,
},
[391613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterranean Proto-Dragon",
["npcID"] = 190404,
},
[409016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[198833] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[427444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[428468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 214390,
},
[425397] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[451608] = {
["source"] = "Kobyss Shadeshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 215653,
},
[428019] = {
["source"] = "Royal Wicklighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 210812,
},
[448944] = {
["encounterName"] = "Anub'ikkaj",
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[445830] = {
["encounterName"] = "Anub'ikkaj",
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Deepflayer",
["npcID"] = 218657,
},
[396492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Piskato",
["npcID"] = 195973,
},
[447921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade Guardian",
["npcID"] = 214594,
},
[432565] = {
["source"] = "Manifested Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[455877] = {
["source"] = "Deepwater Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 215654,
},
[440652] = {
["source"] = "Wandering Candle",
["event"] = "SPELL_CAST_START",
["npcID"] = 208450,
},
[200637] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[12248] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[392640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[428472] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Violetwing Stagbeetle",
["npcID"] = 210295,
},
[445808] = {
["source"] = "Heelripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 216555,
},
[201983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113537,
},
[447439] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2847,
},
[454731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmother",
["npcID"] = 220286,
},
[431544] = {
["source"] = "Stalwart Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 214935,
},
[441518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Batch",
["npcID"] = 220368,
},
[441782] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[328146] = {
["encounterName"] = "Blightbone",
["source"] = "Carrion Worm",
["encounterID"] = 2387,
["event"] = "SPELL_CAST_START",
["npcID"] = 164702,
},
[456115] = {
["source"] = "Temaya",
["event"] = "SPELL_CAST_START",
["npcID"] = 221973,
},
[451843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
},
[396738] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Blue Gulper",
["npcID"] = 195976,
},
[389572] = {
["source"] = "Feral Umbraclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 211401,
},
[447926] = {
["source"] = "Voltscale Borer",
["event"] = "SPELL_CAST_START",
["npcID"] = 222280,
},
[389947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warmonger Kharad",
["npcID"] = 190932,
},
[444705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zealous Templar",
["npcID"] = 207949,
},
[15587] = {
["source"] = "Shadowmoon Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 16594,
},
[372839] = {
["source"] = "Nokhud Harrier",
["event"] = "SPELL_CAST_START",
["npcID"] = 195758,
},
[456936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Protocol",
["npcID"] = 222946,
},
[384827] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["npcID"] = 186116,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[200658] = {
["source"] = "Dreadsoul Ruiner",
["event"] = "SPELL_CAST_START",
["npcID"] = 95771,
},
[434998] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Chef Chewie",
["npcID"] = 214697,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[452567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oath-Eater",
["npcID"] = 206844,
},
[382410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trickclaw Mystic",
["npcID"] = 185528,
},
[406802] = {
["source"] = "Sawscale Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 208691,
},
[452024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen-Ward Sentinel",
["npcID"] = 216221,
},
[387528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Stonemauler",
["npcID"] = 210043,
},
[327127] = {
["source"] = "Flesh Crafter",
["event"] = "SPELL_CAST_START",
["npcID"] = 165872,
},
[459191] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[316890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Brute",
["npcID"] = 153239,
},
[420289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormchaser",
["npcID"] = 207276,
},
[413123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[445882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonehoofed Hog",
["npcID"] = 214928,
},
[427456] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[456772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[462264] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Drainer",
["npcID"] = 229399,
},
[397110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Air Revenant",
["npcID"] = 203743,
},
[431552] = {
["source"] = "Nerubian Webspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 224149,
},
[441791] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[327130] = {
["isChanneled"] = true,
["source"] = "Flesh Crafter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165872,
},
[440107] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216649,
},
[80279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Rift Conjurer",
["npcID"] = 42691,
},
[440506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stream Skipper",
["npcID"] = 213700,
},
[421316] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[450628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[427459] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[440768] = {
["source"] = "Black Blood Container",
["event"] = "SPELL_CAST_START",
["npcID"] = 220002,
},
[400842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Keeneye",
["npcID"] = 208660,
},
[196870] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[456125] = {
["source"] = "Crystal Clacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215881,
},
[196027] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[461781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargassum Guardian",
["npcID"] = 212582,
},
[76682] = {
["source"] = "Twilight Element Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 40017,
},
[372538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Flare",
["npcID"] = 189470,
},
[32363] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["npcID"] = 18344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[257784] = {
["source"] = "Bilge Rat Brinescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 129600,
},
[451008] = {
["source"] = "Cinderbee Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 222820,
},
[443842] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[437700] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[430238] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Fragment",
["npcID"] = 207202,
},
[413131] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[432068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Enforcer",
["npcID"] = 212548,
},
[396751] = {
["source"] = "Remembered Gahz'rilla",
["event"] = "SPELL_CAST_START",
["npcID"] = 221578,
},
[369110] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[391634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[413133] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[447270] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[382795] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[452035] = {
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 222797,
},
[436679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarab Captain Vul'akan",
["npcID"] = 218306,
},
[46035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Magister",
["npcID"] = 24685,
},
[428910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auctioned Pages Past",
["npcID"] = 214069,
},
[448429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Mystic",
["npcID"] = 203878,
},
[422699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phebis of the Burning Sea",
["npcID"] = 210306,
},
[380174] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[451900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Soot-Seer",
["npcID"] = 212876,
},
[461741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[13608] = {
["source"] = "Recalled Silverbrook Lumberjack",
["event"] = "SPELL_CAST_START",
["npcID"] = 226197,
},
[413135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Kraglin",
["npcID"] = 201625,
},
[391380] = {
["source"] = "Stormcaller Narkena",
["event"] = "SPELL_CAST_START",
["npcID"] = 201539,
},
[375605] = {
["source"] = "Arcane Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 190779,
},
[55633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Golem",
["npcID"] = 29832,
},
[413136] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[111762] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[427469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Conjuror",
["npcID"] = 206698,
},
[419626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calderamor",
["npcID"] = 207136,
},
[375056] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[393686] = {
["source"] = "Turboris",
["event"] = "SPELL_CAST_START",
["npcID"] = 187886,
},
[456136] = {
["source"] = "Murkshade",
["event"] = "SPELL_CAST_START",
["npcID"] = 218452,
},
[264694] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[392663] = {
["isChanneled"] = true,
["source"] = "Crazed Alpha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194224,
},
[448820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[398806] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[420306] = {
["source"] = "Flamebound Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 206900,
},
[384474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fathomless Lurker",
["npcID"] = 209580,
},
[422696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Avius Flamebeak",
["npcID"] = 210305,
},
[46036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Magister",
["npcID"] = 24685,
},
[33111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[392665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Thunderhide",
["npcID"] = 187258,
},
[457503] = {
["source"] = "Cogchewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212617,
},
[456138] = {
["source"] = "Grimlurk",
["event"] = "SPELL_CAST_START",
["npcID"] = 223091,
},
[412117] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[384476] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[46164] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 24664,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[333629] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Reanimated Crossbowman",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 168246,
},
[272888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Destroyer",
["npcID"] = 137517,
},
[434589] = {
["source"] = "Overfiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 217429,
},
[456140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimslice",
["npcID"] = 221551,
},
[447950] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Ascended Voidspeaker",
["npcID"] = 223150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[445217] = {
["source"] = "Cinderbee Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215023,
},
[445559] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[423051] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[39126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Botanist",
["npcID"] = 18422,
},
[425974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[432114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Forgecaster",
["npcID"] = 212884,
},
[381408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiverweb Crawler",
["npcID"] = 192591,
},
[419287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[426893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[413145] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[422693] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[32364] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["npcID"] = 18344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[372529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Hogger",
["npcID"] = 213570,
},
[396075] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 203747,
},
[430109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Thunderer",
["npcID"] = 207198,
},
[382434] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[424408] = {
["source"] = "Bodwin",
["event"] = "SPELL_CAST_START",
["npcID"] = 209153,
},
[323057] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[451026] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[382435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[408029] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Loszkeleth",
["npcID"] = 201790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[235271] = {
["encounterName"] = "Maiden of Vigilance",
["source"] = "Maiden of Vigilance",
["encounterID"] = 2052,
["event"] = "SPELL_CAST_START",
["npcID"] = 118289,
},
[372735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[459210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[200289] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[135620] = {
["source"] = "Dreadguard Cavalry",
["event"] = "SPELL_CAST_START",
["npcID"] = 67309,
},
[422691] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[456147] = {
["source"] = "Regal Plainshawk",
["event"] = "SPELL_CAST_START",
["npcID"] = 221527,
},
[372201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[445910] = {
["source"] = "Sporbit",
["event"] = "SPELL_CAST_START",
["npcID"] = 213434,
},
[369129] = {
["source"] = "Modak Flamespit",
["event"] = "SPELL_CAST_START",
["npcID"] = 186509,
},
[122259] = {
["source"] = "Sik'thik Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62632,
},
[39127] = {
["source"] = "Sunseeker Chemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 19486,
},
[437721] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Venture Co. Pyromaniac",
["npcID"] = 218671,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[386411] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[456149] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Perchfather",
["npcID"] = 221648,
},
[436698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarab Captain Vul'akan",
["npcID"] = 218306,
},
[425437] = {
["source"] = "Surging Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 210111,
},
[21807] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wily Woodling",
["npcID"] = 61155,
},
[376827] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[387559] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[421343] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[196883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Etheldrin Ravencrest",
["npcID"] = 98521,
},
[22127] = {
["source"] = "Sunseeker Herbalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 19508,
},
[367484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[396774] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cragsworn Conqueror",
["npcID"] = 195839,
},
[424737] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[255577] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2084,
},
[142625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wily Woodling",
["npcID"] = 61155,
},
[396775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cragsworn Conqueror",
["npcID"] = 195839,
},
[438749] = {
["encounterName"] = "The Silken Court",
["source"] = "Shattershell Scarab",
["npcID"] = 218884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[373549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Hoverfly",
["npcID"] = 198420,
},
[450330] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[387290] = {
["source"] = "Remembered Bloodpetal",
["event"] = "SPELL_CAST_START",
["npcID"] = 221880,
},
[114062] = {
["encounterName"] = "Jandice Barov",
["source"] = "Jandice Barov",
["npcID"] = 59184,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1427,
},
[47059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stars' Rest Sentinel",
["npcID"] = 51797,
},
[423396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethka",
["npcID"] = 208740,
},
[384492] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[445210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[424421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
},
[387564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conjured Lasher",
["npcID"] = 196102,
},
[384493] = {
["source"] = "Shikaar Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 184657,
},
[385517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Sentry",
["npcID"] = 187021,
},
[447966] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[424420] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[59347] = {
["source"] = "Anub'ar Crypt Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 29097,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[59603] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Heartsplitter",
["npcID"] = 24071,
},
[420326] = {
["source"] = "Flamebound Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 206900,
},
[396780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Subjugator",
["npcID"] = 195837,
},
[414184] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[44503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wretched Husk",
["npcID"] = 24690,
},
[257288] = {
["encounterName"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Cleaver",
["npcID"] = 129879,
},
[265741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[396069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earthshard",
["npcID"] = 185647,
},
[424414] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[424423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sergeant Shaynemail",
["npcID"] = 211291,
},
[400877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Hound",
["npcID"] = 205045,
},
[425796] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[120946] = {
["source"] = "Sik'thik Amber-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 61929,
},
[412448] = {
["source"] = "Deepflayer Broodmatron",
["event"] = "SPELL_CAST_START",
["npcID"] = 200115,
},
[81442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[53333] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Anub'ar Necromancer",
["encounterID"] = 1971,
["event"] = "SPELL_CAST_START",
["npcID"] = 29098,
},
[386546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[387571] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[397809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[417764] = {
["source"] = "Empowered Dreadstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 208538,
},
[386547] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[440806] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2946,
["event"] = "SPELL_CAST_START",
["npcID"] = 219676,
},
[429545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turned Speaker",
["npcID"] = 214350,
},
[451044] = {
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[427498] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[403740] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 133007,
},
[381430] = {
["source"] = "Earthen Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186849,
},
[439784] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[395763] = {
["source"] = "Dragonbane Cauldron Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186606,
},
[392692] = {
["source"] = "Remembered Quilboar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221743,
},
[12675] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[415215] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[420334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Adranas",
["npcID"] = 209931,
},
[78754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashenvale Scout",
["npcID"] = 34177,
},
[393432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[369072] = {
["source"] = "Plainswalker Mammoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187938,
},
[205231] = {
["npcID"] = 103673,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[428526] = {
["encounterName"] = "Ozumat",
["source"] = "Splotch",
["npcID"] = 213806,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[224682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Houndsmaster",
["npcID"] = 211882,
},
[424431] = {
["source"] = "Elaena Emberlanz",
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[425455] = {
["source"] = "Surging Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 210111,
},
[448276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungarian Sporeflinger",
["npcID"] = 218667,
},
[282110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Archer",
["npcID"] = 210645,
},
[398300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[343556] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[445936] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "The Bloodbound Horror",
["npcID"] = 214502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[439789] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[321330] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkmaul Channeler",
["npcID"] = 157328,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[377341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[423410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Isaqa",
["npcID"] = 209919,
},
[111772] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[372223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonetender",
["npcID"] = 189265,
},
[418292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[456174] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[428530] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[331274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Goo",
["npcID"] = 218519,
},
[381438] = {
["source"] = "Tormented Steam",
["event"] = "SPELL_CAST_START",
["npcID"] = 188696,
},
[38618] = {
["encounterName"] = "Frozen Commander",
["source"] = "Commander Stoutbeard",
["npcID"] = 26796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 519,
},
[375296] = {
["source"] = "Rebel Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 195058,
},
[445935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222265,
},
[428823] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[443888] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[264510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Marksman",
["npcID"] = 131849,
},
[372226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonetender",
["npcID"] = 189265,
},
[418295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[260879] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[448492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guard Captain Suleyman",
["npcID"] = 212826,
},
[373912] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[196208] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Warlock",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99704,
},
[439795] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[390245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embertooth Spearhunter",
["npcID"] = 188725,
},
[204574] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[369157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Tarasek",
["npcID"] = 188372,
},
[57046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[425875] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lingering Torment",
["npcID"] = 209564,
},
[278044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Velvet Lasher",
["npcID"] = 210185,
},
[422393] = {
["source"] = "Skittering Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 208457,
},
[406678] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[412156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Aerobot",
["npcID"] = 205723,
},
[265760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[225562] = {
["encounterName"] = "Dresaron",
["source"] = "Bloodtainted Burster",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 100532,
},
[265759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Bryndle",
["npcID"] = 135329,
},
[420347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaldorei Archdruid",
["npcID"] = 211066,
},
[458226] = {
["source"] = "Nerubian Webcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 227578,
},
[37979] = {
["source"] = "Murkblood Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17730,
},
[407039] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Sundered Edgelord",
["npcID"] = 203812,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2684,
},
[389268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187135,
},
[450037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Spire",
["npcID"] = 220068,
},
[58966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Battle Rider",
["npcID"] = 29836,
},
[396313] = {
["source"] = "Nokhud Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185147,
},
[59734] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2025,
},
[458228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sakret'na",
["npcID"] = 215841,
},
[382474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[39131] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Thorngrin the Tender",
["encounterID"] = 1928,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17978,
},
[453110] = {
["source"] = "Ascended Webfriar",
["event"] = "SPELL_CAST_START",
["npcID"] = 219022,
},
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[111774] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[419327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[416256] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron's Creation",
["npcID"] = 204918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[372235] = {
["source"] = "Rebel Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 195064,
},
[451064] = {
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[265019] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[428542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[76711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Beguiler",
["npcID"] = 40167,
},
[56919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Cleric",
["npcID"] = 26805,
},
[57047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[432638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Ascendant",
["npcID"] = 212793,
},
[433662] = {
["isChanneled"] = true,
["source"] = "Black Blood",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216856,
},
[49241] = {
["source"] = "Ruby Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 27542,
},
[46042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Warlock",
["npcID"] = 24686,
},
[202019] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[450043] = {
["source"] = "Malfunctioning Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[278961] = {
["source"] = "Diseased Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 133870,
},
[447996] = {
["source"] = "Rustcloud Runt",
["event"] = "SPELL_CAST_START",
["npcID"] = 222796,
},
[444925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbral Spore",
["npcID"] = 223916,
},
[445949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Silkbow",
["npcID"] = 222273,
},
[387596] = {
["source"] = "Risen Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 195877,
},
[111008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Zealot",
["npcID"] = 58590,
},
[449021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tij'allet",
["npcID"] = 215600,
},
[450045] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[58967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Battle Rider",
["npcID"] = 29836,
},
[345623] = {
["source"] = "Nar'zudah",
["event"] = "SPELL_CAST_START",
["npcID"] = 165824,
},
[382749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stubborn Hornswog",
["npcID"] = 186834,
},
[89105] = {
["source"] = "Lurking Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 45704,
},
[426500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[452094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obstorn",
["npcID"] = 217082,
},
[403978] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 202375,
},
[458238] = {
["isChanneled"] = true,
["source"] = "Nerubian Oracle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227581,
},
[385551] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[61353] = {
["source"] = "Dagna Flintlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 96779,
},
[416264] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[253721] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shieldbearer of Zul",
["npcID"] = 127879,
},
[192005] = {
["encounterName"] = "Serpentrix",
["source"] = "Arcane Hydra Spawn",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 97260,
},
[439811] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[410625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2685,
},
[396814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 195836,
},
[385553] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Stormseeker Acolyte",
["npcID"] = 194990,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[448002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormscar",
["npcID"] = 226295,
},
[208165] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[79922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Flayer",
["npcID"] = 42808,
},
[114848] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 3977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[267824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul Essence",
["npcID"] = 135240,
},
[439814] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[384531] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["npcID"] = 194745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2567,
},
[118865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jade Destroyer",
["npcID"] = 62619,
},
[452099] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Animated Shadow",
["npcID"] = 224616,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[453616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomguard",
["npcID"] = 225493,
},
[46043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Warlock",
["npcID"] = 24686,
},
[412136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[417928] = {
["source"] = "Invading Flameclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 206805,
},
[256979] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Eudora",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126848,
},
[168040] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[434697] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[197418] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[419343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2731,
},
[17843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
[385558] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[39133] = {
["encounterName"] = "Warp Splinter",
["source"] = "Warp Splinter",
["encounterID"] = 1929,
["event"] = "SPELL_CAST_START",
["npcID"] = 17977,
},
[449031] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[376049] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[422414] = {
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[456198] = {
["source"] = "Smaragthr",
["event"] = "SPELL_CAST_START",
["npcID"] = 220362,
},
[424462] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Taener Duelmal",
["npcID"] = 211289,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[419344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[388918] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[378394] = {
["source"] = "Burgeoning Seaborne Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 215494,
},
[325163] = {
["source"] = "Mistveil Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 171772,
},
[46044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Imp",
["npcID"] = 24815,
},
[415253] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[415250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[453129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caustic Bomber",
["npcID"] = 224970,
},
[325413] = {
["source"] = "Spinemaw Acidgullet",
["event"] = "SPELL_CAST_START",
["npcID"] = 167113,
},
[32863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[428563] = {
["source"] = "Kobold Flametender",
["event"] = "SPELL_CAST_START",
["npcID"] = 213913,
},
[434706] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Tasting Room Attendant",
["npcID"] = 214920,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[82858] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priestess Azil",
["npcID"] = 42333,
},
[200105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Protector",
["npcID"] = 98368,
},
[378397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earth Elemental",
["npcID"] = 187322,
},
[333602] = {
["source"] = "Brittlebone Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 163126,
},
[396825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Controller",
["npcID"] = 195836,
},
[373279] = {
["source"] = "Thing From Beyond",
["event"] = "SPELL_CAST_START",
["npcID"] = 189988,
},
[448013] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[375327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterranean Proto-Dragon",
["npcID"] = 190404,
},
[428564] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Molten Scorpid",
["npcID"] = 210290,
},
[258672] = {
["source"] = "Irontide Crackshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 126918,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[449038] = {
["source"] = "Anub'vir",
["event"] = "SPELL_CAST_START",
["npcID"] = 227573,
},
[425492] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[438801] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[197422] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["encounterID"] = 1818,
["event"] = "SPELL_CAST_START",
["npcID"] = 95888,
},
[387614] = {
["source"] = "Ukhel Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 195851,
},
[421398] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[375575] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[419351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Saboteur",
["npcID"] = 208438,
},
[378150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Primalist",
["npcID"] = 186825,
},
[421400] = {
["source"] = "Djaradin Spear",
["event"] = "SPELL_CAST_START",
["npcID"] = 209973,
},
[398690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[370212] = {
["source"] = "Dragonbane Shieldcracker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186609,
},
[444946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormtop Terralisk",
["npcID"] = 214581,
},
[76717] = {
["source"] = "Defiled Earth Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 40023,
},
[426519] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[421402] = {
["source"] = "Primalist Pyremancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 209963,
},
[407069] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[372262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[458497] = {
["source"] = "Parasidious",
["event"] = "SPELL_CAST_START",
["npcID"] = 206977,
},
[431639] = {
["source"] = "Nerubian Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 212715,
},
[207906] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[405022] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[455186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidbringer Prophet",
["npcID"] = 223034,
},
[201959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113536,
},
[385108] = {
["source"] = "Rampaging Podling",
["event"] = "SPELL_CAST_START",
["npcID"] = 209630,
},
[388643] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[438807] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Colossal Spider",
["npcID"] = 219045,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[456211] = {
["source"] = "Crystal Clacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215881,
},
[453140] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[445974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bomb",
["npcID"] = 222281,
},
[369193] = {
["source"] = "Dragonbane Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 186602,
},
[426524] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208459,
},
[395811] = {
["source"] = "Dragonbane Soldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 186607,
},
[396805] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[377384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqua Rager",
["npcID"] = 190407,
},
[386024] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[453142] = {
["source"] = "Web Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 219034,
},
[424773] = {
["source"] = "Gnarled Reviver",
["event"] = "SPELL_CAST_START",
["npcID"] = 207468,
},
[239401] = {
["encounterName"] = "Demonic Inquisition",
["source"] = "Belac",
["encounterID"] = 2048,
["event"] = "SPELL_CAST_START",
["npcID"] = 116691,
},
[443929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Sentry",
["npcID"] = 218315,
},
[444953] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xur'khun the Defiled",
["npcID"] = 221845,
},
[451098] = {
["source"] = "Sureki Militant",
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[451099] = {
["source"] = "Sureki Militant",
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[431645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Apothecary",
["npcID"] = 219651,
},
[378413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Tidecore",
["npcID"] = 213699,
},
[76719] = {
["source"] = "Incendiary Spark",
["event"] = "SPELL_CAST_START",
["npcID"] = 40021,
},
[369197] = {
["source"] = "Dragonbane Firebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 186599,
},
[448030] = {
["source"] = "Agile Pursuer",
["event"] = "SPELL_CAST_START",
["npcID"] = 228361,
},
[453149] = {
["source"] = "Web Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 219034,
},
[212784] = {
["source"] = "Watchful Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 105715,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[390926] = {
["source"] = "Barker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194515,
},
[395816] = {
["source"] = "Dragonbane Shieldcracker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186609,
},
[212786] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[62042] = {
["source"] = "Recalled Thorim",
["event"] = "SPELL_CAST_START",
["npcID"] = 221923,
},
[439838] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[451102] = {
["source"] = "Ascendant Vis'coxria",
["event"] = "SPELL_CAST_START",
["npcID"] = 211261,
},
[46046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Physician",
["npcID"] = 24687,
},
[455195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad Vanguard",
["npcID"] = 223033,
},
[423459] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209800,
},
[391723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[450077] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[407902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[370225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Whelp",
["npcID"] = 187159,
},
[387629] = {
["source"] = "Desecrated Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[34785] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest-Forge Peacekeeper",
["npcID"] = 18405,
},
[434722] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[253544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Confessor",
["npcID"] = 122973,
},
[412200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Aerobot",
["npcID"] = 205723,
},
[445984] = {
["source"] = "Hilltop Jawcrawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 227980,
},
[393419] = {
["source"] = "Penumbrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 189289,
},
[452127] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[391726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[405668] = {
["source"] = "Drazos Blackwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 205623,
},
[371824] = {
["source"] = "Tarasek Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184461,
},
[369781] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["npcID"] = 184582,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[80158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Warbringer",
["npcID"] = 42696,
},
[458271] = {
["source"] = "Moth'ethk",
["event"] = "SPELL_CAST_START",
["npcID"] = 206203,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 104218,
},
[402989] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[375348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gusting Proto-Dragon",
["npcID"] = 190401,
},
[323137] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164804,
},
[455201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Blood",
["npcID"] = 223035,
},
[378420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracking Sediment",
["npcID"] = 212820,
},
[449277] = {
["source"] = "General Emmerich",
["event"] = "SPELL_CAST_START",
["npcID"] = 215371,
},
[323138] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["encounterID"] = 2397,
["event"] = "SPELL_CAST_START",
["npcID"] = 164567,
},
[451107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Webmage",
["npcID"] = 210966,
},
[226406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113537,
},
[422443] = {
["source"] = "Sickened Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207926,
},
[387388] = {
["source"] = "Knoll",
["event"] = "SPELL_CAST_START",
["npcID"] = 194521,
},
[438823] = {
["source"] = "Diabolic Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 219161,
},
[371471] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Water Elemental",
["npcID"] = 187969,
},
[375351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[272167] = {
["source"] = "Bilescourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 136404,
},
[58972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Fire Weaver",
["npcID"] = 29822,
},
[452133] = {
["source"] = "Blackblood Coalescence",
["event"] = "SPELL_CAST_START",
["npcID"] = 215205,
},
[456229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqu'yinra",
["npcID"] = 222605,
},
[451113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Webmage",
["npcID"] = 210966,
},
[436781] = {
["isChanneled"] = true,
["source"] = "Scarab Captain Vul'akan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218306,
},
[431659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clotweave Widow",
["npcID"] = 216193,
},
[429615] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[405042] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[426541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Disciple",
["npcID"] = 131685,
},
[260907] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[377612] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[405043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Nightflame",
["npcID"] = 200931,
},
[377402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[196516] = {
["source"] = "Ritualist Lesha",
["event"] = "SPELL_CAST_START",
["npcID"] = 100248,
},
[424704] = {
["source"] = "Fungal Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 207454,
},
[396854] = {
["source"] = "Brutal Motivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184453,
},
[397878] = {
["encounterName"] = "Wise Mari",
["source"] = "Corrupt Living Water",
["npcID"] = 56511,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[118094] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[440876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Jelly Purveyor",
["npcID"] = 220141,
},
[327240] = {
["source"] = "Loyal Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 165911,
},
[451114] = {
["source"] = "Animated Darkness",
["event"] = "SPELL_CAST_START",
["npcID"] = 213905,
},
[418561] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[44538] = {
["source"] = "Ethereum Smuggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24698,
},
[396856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firava the Rekindler",
["npcID"] = 195915,
},
[385531] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[340544] = {
["isChanneled"] = true,
["source"] = "Spinemaw Staghorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 167111,
},
[257326] = {
["encounterName"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["source"] = "Chopper Redhook",
["npcID"] = 128650,
},
[58973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari God Hunter",
["npcID"] = 29820,
},
[397881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Living Water",
["npcID"] = 56511,
},
[323149] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Ingra Maloch",
["npcID"] = 164567,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2397,
},
[439857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Whisperer",
["npcID"] = 219723,
},
[448248] = {
["source"] = "Bloodstained Webmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 223253,
},
[451117] = {
["source"] = "Ixkreten the Unbreakable",
["event"] = "SPELL_CAST_START",
["npcID"] = 211262,
},
[450095] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[412215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[59357] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Anub'ar Shadowcaster",
["encounterID"] = 1971,
["event"] = "SPELL_CAST_START",
["npcID"] = 28733,
},
[449072] = {
["encounterName"] = "Overseer Kaskel",
["source"] = "Overseer Kaskel",
["npcID"] = 220437,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2990,
},
[448047] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pale Priest",
["npcID"] = 223646,
},
[449071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[446000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeps Larva",
["npcID"] = 215733,
},
[451119] = {
["source"] = "Deathscreamer Iken'tak",
["event"] = "SPELL_CAST_START",
["npcID"] = 211263,
},
[389686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 187160,
},
[404027] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[396861] = {
["source"] = "Arcane Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 190779,
},
[434740] = {
["source"] = "Nightfall Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 217518,
},
[423479] = {
["source"] = "Royal Wicklighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 210812,
},
[390531] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[418558] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[377411] = {
["source"] = "Mature Slyvern",
["event"] = "SPELL_CAST_START",
["npcID"] = 192169,
},
[265337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorestained Piglet",
["npcID"] = 135048,
},
[457460] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[427771] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[463602] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["event"] = "SPELL_CAST_START",
["npcID"] = 164517,
},
[390983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Drakeflayer",
["npcID"] = 192341,
},
[397888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Waterspeaker",
["npcID"] = 200126,
},
[425115] = {
["source"] = "Fruitface",
["event"] = "SPELL_CAST_START",
["npcID"] = 209913,
},
[463408] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[381701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Augmented Flood",
["npcID"] = 192457,
},
[457266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenhorn Extra",
["npcID"] = 228307,
},
[31707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 78116,
},
[457458] = {
["source"] = "Siegelord Xerosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 224311,
},
[427579] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[387652] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[372296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontorch Commander",
["npcID"] = 189466,
},
[235927] = {
["encounterName"] = "The Desolate Host",
["source"] = "Reanimated Templar",
["encounterID"] = 2054,
["event"] = "SPELL_CAST_START",
["npcID"] = 118715,
},
[431674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Ambusher",
["npcID"] = 217448,
},
[265372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bewitched Captain",
["npcID"] = 131587,
},
[192138] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Crestrider",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 97269,
},
[456453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[325205] = {
["source"] = "Keeneye Bowman",
["event"] = "SPELL_CAST_START",
["npcID"] = 166936,
},
[397892] = {
["source"] = "Imacu'tya",
["event"] = "SPELL_CAST_START",
["npcID"] = 104275,
},
[264757] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[381512] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[427581] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[444985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pupating Stinger",
["npcID"] = 216288,
},
[369674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonevault Geomancer",
["npcID"] = 184022,
},
[451128] = {
["encounterName"] = "Anub'ikkaj",
["event"] = "SPELL_CAST_START",
["source"] = "Sparking Haulbot",
["npcID"] = 220191,
},
[381517] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[9053] = {
["source"] = "Firemane Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 4334,
},
[207261] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[452156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[427583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
},
[387657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborne Charger",
["npcID"] = 201471,
},
[425536] = {
["source"] = "Lowly Moleherd",
["event"] = "SPELL_CAST_START",
["npcID"] = 210818,
},
[59359] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'ar Venomancer",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29217,
},
[397899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[111024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Redemption",
["npcID"] = 58592,
},
[470582] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[377421] = {
["source"] = "Amberfur Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 187455,
},
[427585] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[253239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Juggernaut",
["npcID"] = 122971,
},
[204611] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[397897] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Jazshariu",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104273,
},
[423491] = {
["source"] = "Raelas Firewind",
["event"] = "SPELL_CAST_START",
["npcID"] = 209152,
},
[456259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[423501] = {
["source"] = "Rank Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211121,
},
[444145] = {
["source"] = "Frenzied Siege Artillery",
["event"] = "SPELL_CAST_START",
["npcID"] = 224521,
},
[369411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cavern Seeker",
["npcID"] = 184301,
},
[34661] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Thorngrin the Tender",
["encounterID"] = 1928,
["event"] = "SPELL_CAST_START",
["npcID"] = 17978,
},
[69562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Animator",
["npcID"] = 36516,
},
[381519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathion",
["npcID"] = 201412,
},
[439873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Whisperer",
["npcID"] = 219723,
},
[420422] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[372311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
[452164] = {
["source"] = "Swarm-Maven Donmiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 216578,
},
[370259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earth Elemental",
["npcID"] = 187322,
},
[412233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Rocketeer",
["npcID"] = 205727,
},
[470587] = {
["source"] = "Kobyss Witherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 214251,
},
[434756] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Hired Muscle",
["npcID"] = 210269,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[396882] = {
["source"] = "Enraged Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196155,
},
[440899] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[470588] = {
["source"] = "Kobyss Witherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 214251,
},
[407121] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Warlock",
["npcID"] = 203857,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[69051] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2007,
},
[395855] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Black Gulper",
["npcID"] = 195975,
},
[396879] = {
["source"] = "Enraged Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196155,
},
[114864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[452162] = {
["source"] = "Covert Webmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 224732,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[106563] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["npcID"] = 59479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1414,
},
[397904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[394833] = {
["source"] = "Magmammoth Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194912,
},
[395857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonemender",
["npcID"] = 187600,
},
[470591] = {
["source"] = "Nightfall Hopestealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 217517,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[378454] = {
["source"] = "Worldbreaker Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 185589,
},
[453188] = {
["source"] = "Cragmund",
["event"] = "SPELL_CAST_START",
["npcID"] = 220269,
},
[470592] = {
["source"] = "Nightfall Shadeguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 217519,
},
[393811] = {
["source"] = "Maiden of Diligence",
["event"] = "SPELL_CAST_START",
["npcID"] = 192718,
},
[407120] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[375384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthshaker",
["npcID"] = 190371,
},
[69564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Adept",
["npcID"] = 36620,
},
[397907] = {
["source"] = "Baalgar the Watchful",
["event"] = "SPELL_CAST_START",
["npcID"] = 104274,
},
[59616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[395860] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Red Gulper",
["npcID"] = 195974,
},
[375385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalbound Water Spirit",
["npcID"] = 190739,
},
[382555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 185529,
},
[407122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Warlock",
["npcID"] = 203857,
},
[15228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Fire-Dancer",
["npcID"] = 60402,
},
[438860] = {
["encounterName"] = "Izo, the Grand Splicer",
["source"] = "Izo, the Grand Splicer",
["encounterID"] = 2909,
["event"] = "SPELL_CAST_START",
["npcID"] = 216658,
},
[82362] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Evolved Twilight Zealot",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 50284,
},
[456263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[399701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swooping Flayer",
["npcID"] = 199809,
},
[388696] = {
["source"] = "Remembered Gahz'rilla",
["event"] = "SPELL_CAST_START",
["npcID"] = 221578,
},
[377435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Geomancer",
["npcID"] = 187265,
},
[407124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Knight",
["npcID"] = 208165,
},
[375388] = {
["source"] = "Primalist Iceslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 203750,
},
[323177] = {
["encounterName"] = "Ingra Maloch",
["source"] = "Droman Oulfarran",
["encounterID"] = 2397,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164804,
},
[426576] = {
["source"] = "Dream Seedling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211339,
},
[456265] = {
["source"] = "Horror of the Shallows",
["event"] = "SPELL_CAST_START",
["npcID"] = 221668,
},
[260852] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["npcID"] = 131824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[452171] = {
["source"] = "Swarm-Maven Donmiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 216578,
},
[15585] = {
["source"] = "Murkblood Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17730,
},
[427601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lightspawn",
["npcID"] = 206710,
},
[50403] = {
["source"] = "Wastes Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 28005,
},
[409174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incarnation of Entropy",
["npcID"] = 203811,
},
[265091] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[431697] = {
["source"] = "Boltweaver Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223362,
},
[456269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqu'yinra",
["npcID"] = 222605,
},
[429652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 214390,
},
[397914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Depraved Mistweaver",
["npcID"] = 200137,
},
[409177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Entropic Hatred",
["npcID"] = 203809,
},
[183633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockbound Pelter",
["npcID"] = 91008,
},
[34791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest-Forge Peacekeeper",
["npcID"] = 18405,
},
[381535] = {
["source"] = "Bound Pebbles",
["event"] = "SPELL_CAST_START",
["npcID"] = 186628,
},
[59617] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[266181] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["npcID"] = 131864,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[450127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siegehold Defender",
["npcID"] = 216016,
},
[395871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonemender",
["npcID"] = 187600,
},
[422683] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[453199] = {
["source"] = "Vanishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 224922,
},
[450128] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[35943] = {
["source"] = "Shadowmoon Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 16594,
},
[382561] = {
["source"] = "Snowhide Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 189654,
},
[453200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cragmund",
["npcID"] = 220269,
},
[450129] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[434773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Patron",
["npcID"] = 214668,
},
[452177] = {
["source"] = "Arathi Reserve",
["event"] = "SPELL_CAST_START",
["npcID"] = 215727,
},
[261440] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["npcID"] = 131527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[263959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[440912] = {
["source"] = "Festering Sporemass",
["event"] = "SPELL_CAST_START",
["npcID"] = 217963,
},
[421616] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[16568] = {
["isChanneled"] = true,
["source"] = "Recalled Heretic",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221343,
},
[388706] = {
["source"] = "Turbulent Gust",
["event"] = "SPELL_CAST_START",
["npcID"] = 186917,
},
[255373] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[427609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arathi Knight",
["npcID"] = 206696,
},
[456275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Alastair Purefire",
["npcID"] = 221708,
},
[418544] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[46181] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Apoko",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24553,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[427343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[52086] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Anub'ar Webspinner",
["encounterID"] = 1971,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29335,
},
[383953] = {
["source"] = "Bakar Companion",
["event"] = "SPELL_CAST_START",
["npcID"] = 194255,
},
[69056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Watchman",
["npcID"] = 36478,
},
[85692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomguard",
["npcID"] = 11859,
},
[59362] = {
["source"] = "Anub'ar Webspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 29335,
},
[414303] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[436971] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nexus-Princess Ky'veza",
["npcID"] = 217748,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[445016] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Lost Watcher",
["npcID"] = 221667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[372474] = {
["source"] = "Ranger Bolor",
["event"] = "SPELL_CAST_START",
["npcID"] = 188782,
},
[336499] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[408422] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[257348] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Chopper Redhook",
["npcID"] = 128650,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2098,
},
[376426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Ripple",
["npcID"] = 192463,
},
[451160] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[412262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Rocketeer",
["npcID"] = 205727,
},
[434786] = {
["source"] = "Trilling Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 216293,
},
[384620] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[453212] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[390760] = {
["source"] = "Chief Grrlgllmesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 186678,
},
[459355] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[429663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 214390,
},
[438877] = {
["source"] = "Nakt",
["event"] = "SPELL_CAST_START",
["npcID"] = 218324,
},
[411236] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[410351] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[255814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Honor Guard",
["npcID"] = 127757,
},
[426596] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Diviner",
["npcID"] = 131819,
},
[255371] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[445021] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Summoned Acolyte",
["npcID"] = 221863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[257862] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[384597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[423523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[165213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Cultivator",
["npcID"] = 81985,
},
[388716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[455260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[431714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Apothecary",
["npcID"] = 219651,
},
[261446] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["npcID"] = 131545,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2116,
},
[450142] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["encounterID"] = 2894,
["event"] = "SPELL_CAST_START",
["npcID"] = 214263,
},
[397931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Doubt",
["npcID"] = 57109,
},
[444000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Woven Threadmancer",
["npcID"] = 218317,
},
[197974] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 100485,
},
[425573] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[418540] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[382578] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[210261] = {
["source"] = "Duskwatch Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 104251,
},
[447076] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[35945] = {
["source"] = "Shattered Hand Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 16704,
},
[418539] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[448100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Blood Harvester",
["npcID"] = 222455,
},
[457441] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[373364] = {
["source"] = "Gerenth the Vile",
["event"] = "SPELL_CAST_START",
["npcID"] = 107435,
},
[448098] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Black Blood Harvester",
["npcID"] = 222455,
},
[390897] = {
["source"] = "Scalepiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 186632,
},
[433766] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 215405,
},
[114872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bored Student",
["npcID"] = 59614,
},
[423529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[449123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tij'allet",
["npcID"] = 215600,
},
[375547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Eruption",
["npcID"] = 191286,
},
[111801] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Risen Guard",
["npcID"] = 58822,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[386675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Novice Timewalker",
["npcID"] = 189583,
},
[396370] = {
["source"] = "Ice Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 203752,
},
[410223] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[399086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[423531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[384623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Blacksmith",
["npcID"] = 189471,
},
[429674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 214390,
},
[434793] = {
["isChanneled"] = true,
["source"] = "Trilling Attendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216293,
},
[403057] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[114873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[408483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Lavatongue",
["npcID"] = 208661,
},
[135529] = {
["source"] = "Thaumaturge Saresse",
["event"] = "SPELL_CAST_START",
["npcID"] = 67692,
},
[383823] = {
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[408551] = {
["source"] = "Crystalline Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 201063,
},
[265876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[410225] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[394869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneshaper Jardak",
["npcID"] = 188693,
},
[183088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mightstone Breaker",
["npcID"] = 90997,
},
[376292] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[116] = {
["npcID"] = 188027,
},
[456295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[423536] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[450153] = {
["source"] = "Sludgeborn Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 220734,
},
[455273] = {
["source"] = "The Abominable Wavecrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 216526,
},
[191325] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99200,
},
[449130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[202075] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Burning Geode",
["npcID"] = 101437,
},
[114874] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Slate",
["npcID"] = 59613,
},
[256846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinomancer Kish'o",
["npcID"] = 129553,
},
[326281] = {
["encounterName"] = "Tred'ova",
["source"] = "Tred'ova",
["encounterID"] = 2393,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 164517,
},
[265880] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[422518] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[423538] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[377473] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[265881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matron Alma",
["npcID"] = 135365,
},
[455275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shurrai",
["npcID"] = 221224,
},
[407159] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[445038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Trickster",
["npcID"] = 214343,
},
[449136] = {
["isChanneled"] = true,
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212542,
},
[414330] = {
["encounterName"] = "Iridikron",
["source"] = "Chromie",
["npcID"] = 204449,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2669,
},
[452205] = {
["source"] = "Aggregation of Horrors",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[427638] = {
["source"] = "Nuoberon",
["event"] = "SPELL_CAST_START",
["npcID"] = 209113,
},
[381570] = {
["source"] = "Bound Stones",
["event"] = "SPELL_CAST_START",
["npcID"] = 186630,
},
[455277] = {
["source"] = "Tidelord Teethwretch",
["event"] = "SPELL_CAST_START",
["npcID"] = 216527,
},
[448111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diu'mik",
["npcID"] = 211564,
},
[449135] = {
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212542,
},
[446064] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Slamming Tentacle",
["encounterID"] = 3002,
["event"] = "SPELL_CAST_START",
["npcID"] = 220741,
},
[434803] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2902,
},
[116155] = {
["source"] = "Yeasty Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 66413,
},
[334476] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[449245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tij'allet",
["npcID"] = 215600,
},
[442994] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[382593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cruel Bonecrusher",
["npcID"] = 186206,
},
[410236] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2672,
},
[393859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thaldraszian Hoverbug",
["npcID"] = 195380,
},
[442995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Honey Harvester",
["npcID"] = 220946,
},
[431734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Vanguard Brute",
["npcID"] = 214901,
},
[46185] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["npcID"] = 24556,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1895,
},
[401022] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[455281] = {
["source"] = "Tidelord Teethwretch",
["event"] = "SPELL_CAST_START",
["npcID"] = 216527,
},
[457434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riled Dirtdiver",
["npcID"] = 225905,
},
[426619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[198496] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["npcID"] = 91004,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1791,
},
[390788] = {
["source"] = "Chief Grrlgllmesh",
["event"] = "SPELL_CAST_START",
["npcID"] = 186678,
},
[421501] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[402050] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[452314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[442998] = {
["source"] = "Sureki Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[317077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harpy Snatcher",
["npcID"] = 152571,
},
[420476] = {
["source"] = "Crustbreaker Conduit",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[433785] = {
["source"] = "Reinforced Drone",
["event"] = "SPELL_CAST_START",
["npcID"] = 216363,
},
[117948] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Qiang the Merciless",
["npcID"] = 60709,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[444023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Experiment",
["npcID"] = 221537,
},
[405433] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[59366] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Watcher Silthik",
["encounterID"] = 1971,
["event"] = "SPELL_CAST_START",
["npcID"] = 28731,
},
[418430] = {
["source"] = "Empowered Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 208545,
},
[386694] = {
["source"] = "Stormsurge Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 194897,
},
[455287] = {
["encounterName"] = "Rasha'nan",
["source"] = "Infested Spawn",
["npcID"] = 219739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[409217] = {
["source"] = "Sundered Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198872,
},
[443001] = {
["source"] = "Boltweaver Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 223362,
},
[84165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempered War Golem",
["npcID"] = 5853,
},
[444123] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[384648] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Adranas",
["npcID"] = 209931,
},
[135538] = {
["source"] = "Thaumaturge Saresse",
["event"] = "SPELL_CAST_START",
["npcID"] = 67692,
},
[386559] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[412129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[369865] = {
["source"] = "Dragonhunter Igordan",
["event"] = "SPELL_CAST_START",
["npcID"] = 191611,
},
[377483] = {
["encounterName"] = "Anub'ikkaj",
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer",
["npcID"] = 221572,
},
[273570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ringtail Bandicoon",
["npcID"] = 139166,
},
[371306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Elemental",
["npcID"] = 186741,
},
[50025] = {
["source"] = "Wintergrasp Catapult",
["event"] = "SPELL_CAST_START",
["npcID"] = 27881,
},
[377486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Agent",
["npcID"] = 184335,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[445052] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[381582] = {
["source"] = "Brutal Motivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184453,
},
[275110] = {
["source"] = "Bloodbeak the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 201535,
},
[135029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 78116,
},
[334488] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[388747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boggy Bullfrog",
["npcID"] = 193699,
},
[418436] = {
["source"] = "Empowered Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 208545,
},
[386700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Froststalker",
["npcID"] = 199795,
},
[428674] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[59367] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Krik'thir the Gatewatcher",
["encounterID"] = 1971,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28684,
},
[373392] = {
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[69066] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Soulguard Adept",
["npcID"] = 36620,
},
[383452] = {
["source"] = "Rugren",
["event"] = "SPELL_CAST_START",
["npcID"] = 201563,
},
[372369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyena Tender",
["npcID"] = 192506,
},
[377488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[376257] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[424581] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[458365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pride of Beledar",
["npcID"] = 221786,
},
[410249] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2670,
},
[255041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feasting Skyscreamer",
["npcID"] = 128434,
},
[191848] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["encounterID"] = 1813,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91808,
},
[450176] = {
["source"] = "Nerubian Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208243,
},
[373395] = {
["source"] = "Batak",
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[456319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[121762] = {
["source"] = "Sik'thik Builder",
["event"] = "SPELL_CAST_START",
["npcID"] = 62633,
},
[195944] = {
["source"] = "Skrog Wavecrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91796,
},
[272046] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Sharkbait",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126841,
},
[446086] = {
["source"] = "Sureki Unnaturaler",
["event"] = "SPELL_CAST_START",
["npcID"] = 216339,
},
[449154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[204646] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[422541] = {
["source"] = "Shuffling Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 208456,
},
[456321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aelric Leid",
["npcID"] = 213208,
},
[391825] = {
["source"] = "Primalist Iceslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 203750,
},
[169839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[225635] = {
["source"] = "Lunar Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 120721,
},
[427657] = {
["source"] = "Nuoberon",
["event"] = "SPELL_CAST_START",
["npcID"] = 209113,
},
[375446] = {
["source"] = "Sunhide Stomphoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 190953,
},
[257882] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[434824] = {
["source"] = "Nakt",
["event"] = "SPELL_CAST_START",
["npcID"] = 218324,
},
[321188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilboar Geomancer",
["npcID"] = 150238,
},
[387732] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[169840] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[384663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgewrought Monstrosity",
["npcID"] = 194816,
},
[69068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Adept",
["npcID"] = 36620,
},
[457348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Firelord",
["npcID"] = 212088,
},
[450182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Mudspawn",
["npcID"] = 219897,
},
[393876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gragza the Dragon-Breaker",
["npcID"] = 191507,
},
[265352] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blight Toad",
["npcID"] = 135052,
},
[395924] = {
["source"] = "Maeleera",
["event"] = "SPELL_CAST_START",
["npcID"] = 193677,
},
[169841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[195129] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[452231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard Zirix",
["npcID"] = 211858,
},
[389443] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["npcID"] = 196712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[392854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Scythid Queen",
["npcID"] = 184853,
},
[381593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebonstone Golem",
["npcID"] = 184300,
},
[456327] = {
["source"] = "Gong'tze the Riverhewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 221974,
},
[432781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Radiating Voidstone",
["npcID"] = 212739,
},
[396346] = {
["source"] = "Oppressive Artificer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184444,
},
[56937] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26930,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[452235] = {
["source"] = "Ashen Stonestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 217624,
},
[450188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[377502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Murloc",
["npcID"] = 190584,
},
[320170] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 162692,
},
[333479] = {
["source"] = "Rotspew",
["event"] = "SPELL_CAST_START",
["npcID"] = 163620,
},
[371358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[115650] = {
["source"] = "Sudsy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59522,
},
[320171] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 163157,
},
[382620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[400649] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[83914] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 44715,
},
[250208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enriched Rockshell",
["npcID"] = 130776,
},
[456331] = {
["source"] = "Flickerflame Candlecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 219619,
},
[387740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyrhold Watcher",
["npcID"] = 192696,
},
[391837] = {
["source"] = "Emerald Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207048,
},
[377503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rune Seal Keeper",
["npcID"] = 187155,
},
[417431] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[420501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildfire Primalist",
["npcID"] = 209200,
},
[381602] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[375459] = {
["source"] = "Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 191827,
},
[115139] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["npcID"] = 59789,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1423,
},
[375457] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[450191] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[426645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[256864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinomancer Kish'o",
["npcID"] = 129553,
},
[443027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Hopebreaker",
["npcID"] = 216019,
},
[113364] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[428695] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[427670] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[326319] = {
["source"] = "Drust Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 164921,
},
[451280] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[56938] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26928,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[377594] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[424600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Podling",
["npcID"] = 211063,
},
[50284] = {
["isChanneled"] = true,
["source"] = "Recalled Underking",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226098,
},
[455313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[448147] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Chamber Guardian",
["npcID"] = 223204,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[338606] = {
["source"] = "Separation Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 167731,
},
[115652] = {
["source"] = "Bloated Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59518,
},
[111813] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Risen Guard",
["npcID"] = 58822,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[333488] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 163157,
},
[179091] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nar'thalas Magister",
["npcID"] = 88783,
},
[450196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[381605] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[13323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Hunter Ascendant",
["npcID"] = 26727,
},
[444055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Threadling",
["npcID"] = 222730,
},
[450197] = {
["source"] = "The Puppetmaster?",
["event"] = "SPELL_CAST_START",
["npcID"] = 220508,
},
[434829] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
[407200] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[233983] = {
["encounterName"] = "Demonic Inquisition",
["source"] = "Belac",
["encounterID"] = 2048,
["event"] = "SPELL_CAST_START",
["npcID"] = 116691,
},
[455373] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[377512] = {
["source"] = "Basalt Shell",
["event"] = "SPELL_CAST_START",
["npcID"] = 186622,
},
[191823] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["event"] = "SPELL_CAST_START",
["npcID"] = 95885,
},
[430805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalescing Void Diffuser",
["npcID"] = 214421,
},
[453271] = {
["source"] = "Aggregation of Horrors",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[385757] = {
["source"] = "Mender Eskros",
["event"] = "SPELL_CAST_START",
["npcID"] = 195303,
},
[377500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Agent",
["npcID"] = 184335,
},
[200050] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[407917] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[451224] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Warlock",
["npcID"] = 224271,
},
[413151] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[451276] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[33844] = {
["source"] = "Treant Grovetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 207616,
},
[387049] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bouldron",
["npcID"] = 193644,
},
[407205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Destroyer",
["npcID"] = 208208,
},
[408228] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[372397] = {
["source"] = "Snowhide Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 189653,
},
[427509] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[411300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Waveshaper",
["npcID"] = 205363,
},
[391849] = {
["source"] = "Bound Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 186626,
},
[456346] = {
["source"] = "Anguishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 214415,
},
[448155] = {
["source"] = "Crazed Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[22907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Ranger",
["npcID"] = 26802,
},
[409635] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[264038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coven Thornshaper",
["npcID"] = 131666,
},
[406183] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[452252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Machinist Dunstan",
["npcID"] = 217353,
},
[389804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Curator",
["npcID"] = 187154,
},
[423771] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[430754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Oracle",
["npcID"] = 214439,
},
[377017] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[418605] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Future Self",
["encounterID"] = 2689,
["event"] = "SPELL_CAST_START",
["npcID"] = 208959,
},
[384686] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[386028] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[31865] = {
["encounterName"] = "The Maker",
["source"] = "Seductress",
["npcID"] = 17399,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1922,
},
[387232] = {
["source"] = "Emerald Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 209202,
},
[459422] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[459421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[44271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garaxxas",
["npcID"] = 24555,
},
[128708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Brew Alemental",
["npcID"] = 59521,
},
[200551] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[377522] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Raging Ember",
["npcID"] = 192464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2611,
},
[448161] = {
["source"] = "Crazed Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[424615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Cassaphine",
["npcID"] = 206818,
},
[375945] = {
["source"] = "Wild Argali",
["event"] = "SPELL_CAST_START",
["npcID"] = 191553,
},
[426663] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vicious Snap Dragon",
["npcID"] = 212681,
},
[448162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enormous Kelp-Snaggler",
["npcID"] = 221061,
},
[428711] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[396975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firava the Rekindler",
["npcID"] = 195915,
},
[418474] = {
["source"] = "Empowered Felhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 208791,
},
[415403] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204931,
},
[447143] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["encounterID"] = 2991,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219856,
},
[409261] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[369335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runic Protector",
["npcID"] = 184107,
},
[390834] = {
["source"] = "Sarana",
["event"] = "SPELL_CAST_START",
["npcID"] = 190161,
},
[371383] = {
["source"] = "Snowhide Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 189654,
},
[47731] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26929,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[447141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Repurposed Loaderbot",
["npcID"] = 222923,
},
[324293] = {
["source"] = "Skeletal Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 165919,
},
[440999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venommaster Nezarox",
["npcID"] = 219006,
},
[254959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Colossus",
["npcID"] = 122984,
},
[117960] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[415406] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["encounterID"] = 2831,
["event"] = "SPELL_CAST_START",
["npcID"] = 207481,
},
[400050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Hunter",
["npcID"] = 221198,
},
[257899] = {
["source"] = "Irontide Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 130012,
},
[418478] = {
["source"] = "Rune Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 207050,
},
[200218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[424621] = {
["source"] = "Sergeant Shaynemail",
["event"] = "SPELL_CAST_START",
["npcID"] = 211291,
},
[417455] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[420525] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[252781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[400052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swooping Flayer",
["npcID"] = 199809,
},
[387826] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[320200] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[427694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reefbreaker Moruud",
["npcID"] = 209898,
},
[447146] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[436910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Woven Threadmancer",
["npcID"] = 218317,
},
[451241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamerender",
["npcID"] = 224240,
},
[386745] = {
["source"] = "Stormbrand Ko'mal",
["event"] = "SPELL_CAST_START",
["npcID"] = 206684,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[204666] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[443052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siege Hopebreaker",
["npcID"] = 216019,
},
[419506] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["encounterID"] = 2677,
["event"] = "SPELL_CAST_START",
["npcID"] = 204931,
},
[400055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Slicer",
["npcID"] = 203384,
},
[458409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pride of Beledar",
["npcID"] = 221786,
},
[409271] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[423607] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[87761] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executor of the Caliph",
["npcID"] = 45928,
},
[204667] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[415437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Leech",
["npcID"] = 206066,
},
[324323] = {
["source"] = "Skeletal Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 165919,
},
[202108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightshard Shaper",
["npcID"] = 90998,
},
[433841] = {
["source"] = "Blood Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216364,
},
[455340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Weaver",
["npcID"] = 222985,
},
[439984] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen-Ward Sentinel",
["npcID"] = 216221,
},
[264923] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[412346] = {
["source"] = "Irontide Corsair",
["event"] = "SPELL_CAST_START",
["npcID"] = 126928,
},
[388801] = {
["source"] = "Risen Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 195855,
},
[197502] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Crestrider",
["npcID"] = 97269,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[453294] = {
["source"] = "Aggregation of Horrors",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[462508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Emissary",
["npcID"] = 229537,
},
[398012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthrazer",
["npcID"] = 203739,
},
[419511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chronaxie",
["npcID"] = 206070,
},
[87762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minister of Air",
["npcID"] = 45930,
},
[257904] = {
["source"] = "Ludwig Von Tortollan",
["event"] = "SPELL_CAST_START",
["npcID"] = 129699,
},
[320208] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Stitchflesh's Creation",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 164578,
},
[452272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[338636] = {
["source"] = "Separation Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 167731,
},
[433845] = {
["source"] = "Blood Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216364,
},
[341709] = {
["encounterName"] = "Mistcaller",
["source"] = "Mistcaller",
["encounterID"] = 2392,
["event"] = "SPELL_CAST_START",
["npcID"] = 164501,
},
[426677] = {
["source"] = "Sootsnout",
["event"] = "SPELL_CAST_START",
["npcID"] = 212412,
},
[461487] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Ki'katal the Harvester",
["encounterID"] = 2901,
["event"] = "SPELL_CAST_START",
["npcID"] = 215407,
},
[396991] = {
["source"] = "Drakonid Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187240,
},
[455345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Weaver",
["npcID"] = 222985,
},
[448179] = {
["source"] = "Crazed Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 219454,
},
[418202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[198024] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["npcID"] = 91003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1790,
},
[267997] = {
["npcID"] = 135816,
},
[256882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monzumi",
["npcID"] = 129552,
},
[379406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavabearer",
["npcID"] = 189472,
},
[413387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executor of the Caliph",
["npcID"] = 45928,
},
[338653] = {
["source"] = "Stitching Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 173044,
},
[419516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chronaxie",
["npcID"] = 206070,
},
[423610] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208445,
},
[69080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Bonecaster",
["npcID"] = 36564,
},
[417481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[386757] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[400066] = {
["source"] = "Preying Dustmoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 201068,
},
[406210] = {
["source"] = "Thorak Greenscale",
["event"] = "SPELL_CAST_START",
["npcID"] = 205618,
},
[426684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[427708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reefbreaker Moruud",
["npcID"] = 209898,
},
[264931] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["npcID"] = 131863,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2115,
},
[153485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow-Chasm Worm",
["npcID"] = 217962,
},
[332500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fathomless Lurker",
["npcID"] = 209580,
},
[401810] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[52080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesunder",
["npcID"] = 27006,
},
[257908] = {
["source"] = "Irontide Officer",
["event"] = "SPELL_CAST_START",
["npcID"] = 127106,
},
[455351] = {
["source"] = "Kx",
["event"] = "SPELL_CAST_START",
["npcID"] = 216582,
},
[321240] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["npcID"] = 157300,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2325,
},
[269029] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[458423] = {
["source"] = "Kordac",
["event"] = "SPELL_CAST_START",
["npcID"] = 221084,
},
[438973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pit Lord",
["npcID"] = 228574,
},
[458425] = {
["source"] = "Gloomsprout",
["event"] = "SPELL_CAST_START",
["npcID"] = 215501,
},
[257397] = {
["source"] = "Irontide Bonesaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 129788,
},
[331479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Goo",
["npcID"] = 218519,
},
[443068] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[423617] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[421570] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[78807] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["npcID"] = 42188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1058,
},
[459449] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[200580] = {
["source"] = "Festerhide Grizzly",
["event"] = "SPELL_CAST_START",
["npcID"] = 95779,
},
[438976] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[83926] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 44715,
},
[75992] = {
["source"] = "Naz'jar Tempest Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 40634,
},
[419524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loose Time",
["npcID"] = 209170,
},
[383693] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[118106] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[451261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Earthcaller",
["npcID"] = 224219,
},
[382670] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[387189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Srivantor",
["npcID"] = 201555,
},
[412378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Timebender",
["npcID"] = 205337,
},
[455357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Weaver",
["npcID"] = 222985,
},
[265376] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[438971] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Ravenous Cinderbee",
["npcID"] = 218016,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[406215] = {
["source"] = "Remembered Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221883,
},
[194951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Siegemaster",
["npcID"] = 211937,
},
[321247] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["encounterID"] = 2388,
["event"] = "SPELL_CAST_START",
["npcID"] = 163157,
},
[424646] = {
["source"] = "Flametouched Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210150,
},
[413385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minister of Air",
["npcID"] = 45930,
},
[111010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Zealot",
["npcID"] = 58590,
},
[427710] = {
["source"] = "Sporbit",
["event"] = "SPELL_CAST_START",
["npcID"] = 213434,
},
[79932] = {
["source"] = "Nevo",
["event"] = "SPELL_CAST_START",
["npcID"] = 81999,
},
[437956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Pyromaniac",
["npcID"] = 218671,
},
[369365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Warder",
["npcID"] = 184132,
},
[173563] = {
["encounterName"] = "Yalnu",
["source"] = "Feral Lasher",
["npcID"] = 86684,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[445123] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[442052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Ironweaver",
["npcID"] = 220551,
},
[388817] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[415435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Moment",
["npcID"] = 206064,
},
[322274] = {
["encounterName"] = "Nalthor the Rimebinder",
["source"] = "Zolramus Siphoner",
["encounterID"] = 2390,
["event"] = "SPELL_CAST_START",
["npcID"] = 164815,
},
[327393] = {
["source"] = "Nar'zudah",
["event"] = "SPELL_CAST_START",
["npcID"] = 165824,
},
[421325] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[415436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Moment",
["npcID"] = 206064,
},
[257402] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[372696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[451268] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[440007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron-Runed Protector",
["npcID"] = 214576,
},
[194942] = {
["encounterName"] = "Glazer",
["source"] = "Glazer",
["encounterID"] = 1817,
["event"] = "SPELL_CAST_START",
["npcID"] = 95887,
},
[415769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[455364] = {
["source"] = "Kx",
["event"] = "SPELL_CAST_START",
["npcID"] = 216582,
},
[421554] = {
["source"] = "Elisande",
["event"] = "SPELL_CAST_START",
["npcID"] = 208668,
},
[321226] = {
["encounterName"] = "Amarth, The Harvester",
["source"] = "Amarth",
["encounterID"] = 2388,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163157,
},
[372441] = {
["source"] = "Feral Umbraclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 211401,
},
[82137] = {
["source"] = "Rom'ogg Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[413044] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[147289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death Adder",
["npcID"] = 72841,
},
[39413] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[422606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volgoth The Flamebringer",
["npcID"] = 209129,
},
[34930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Darkcaster",
["npcID"] = 18331,
},
[281329] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Jolly",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126845,
},
[207881] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[406227] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200918,
},
[44276] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zelfan",
["npcID"] = 24556,
},
[424614] = {
["source"] = "Fungal Stabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 207450,
},
[15232] = {
["source"] = "Shadowmoon Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 17694,
},
[194956] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[427727] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reefbreaker Moruud",
["npcID"] = 209898,
},
[395991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Revenant",
["npcID"] = 191129,
},
[373424] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[381659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Augmented Flood",
["npcID"] = 192457,
},
[407207] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[386801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zurgaz Corebreaker",
["npcID"] = 193680,
},
[428703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[415850] = {
["source"] = "Roiling Deathstalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 211242,
},
[201733] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[270022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silverback Thumpknuckle",
["npcID"] = 130543,
},
[374706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamecaller Aymi",
["npcID"] = 190368,
},
[422611] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[382102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Artificer Zeerak",
["npcID"] = 201553,
},
[76508] = {
["source"] = "Crazed Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 39982,
},
[418464] = {
["source"] = "Empowered Felguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 208542,
},
[451277] = {
["encounterName"] = "The Silken Court",
["source"] = "Anub'arash",
["npcID"] = 217489,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[386781] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[257407] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[392924] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Channeler Ryvati",
["npcID"] = 197535,
},
[381663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Blazewing",
["npcID"] = 193291,
},
[451222] = {
["source"] = "Hollows Resident",
["event"] = "SPELL_CAST_START",
["npcID"] = 219983,
},
[369675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonevault Geomancer",
["npcID"] = 184022,
},
[383651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[422614] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[11969] = {
["source"] = "Firemane Ash Tail",
["event"] = "SPELL_CAST_START",
["npcID"] = 4331,
},
[368287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[456338] = {
["source"] = "Anguishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 214415,
},
[414425] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[427672] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[391903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sendrax",
["npcID"] = 190171,
},
[372452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowstorm Rager",
["npcID"] = 194158,
},
[386722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbrand Ko'mal",
["npcID"] = 206684,
},
[199567] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Image of Latosius",
["npcID"] = 101028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[449167] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[427668] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[447187] = {
["encounterName"] = "Researcher Ven'kex",
["source"] = "Researcher Ven'kex",
["encounterID"] = 2991,
["event"] = "SPELL_CAST_START",
["npcID"] = 219856,
},
[426731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Oracle",
["npcID"] = 41096,
},
[453258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sikran",
["npcID"] = 214503,
},
[406165] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[418449] = {
["source"] = "Rune Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 207050,
},
[195473] = {
["source"] = "Gritslime Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 91786,
},
[333477] = {
["source"] = "Goregrind",
["event"] = "SPELL_CAST_START",
["npcID"] = 163621,
},
[194611] = {
["source"] = "Shadow Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 98926,
},
[242909] = {
["encounterName"] = "Goroth",
["source"] = "Infernal Chaosbringer",
["encounterID"] = 2032,
["event"] = "SPELL_CAST_START",
["npcID"] = 118022,
},
[448213] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 213937,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2839,
},
[410254] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[420490] = {
["source"] = "Crustbreaker Conduit",
["event"] = "SPELL_CAST_START",
["npcID"] = 207038,
},
[455380] = {
["source"] = "Malfunctioning Railbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 218251,
},
[387729] = {
["source"] = "Trudging Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201066,
},
[305913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grunk",
["npcID"] = 153581,
},
[81576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[381585] = {
["source"] = "Brutal Motivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184453,
},
[211299] = {
["source"] = "Watchful Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 105715,
},
[446079] = {
["encounterName"] = "Leviathan Caller",
["source"] = "Leviathan Caller",
["encounterID"] = 3002,
["event"] = "SPELL_CAST_START",
["npcID"] = 220738,
},
[409313] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[430812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalescing Void Diffuser",
["npcID"] = 214421,
},
[382696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[428765] = {
["source"] = "Tindral Sageswift",
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[257426] = {
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129602,
},
[451288] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Lost Watcher",
["npcID"] = 221667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[136098] = {
["source"] = "Bloodhilt Lightsworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 68640,
},
[368434] = {
["isChanneled"] = true,
["source"] = "Karantun",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193647,
},
[443003] = {
["encounterName"] = "Broodtwister Ovi'nax",
["source"] = "Broodtwister Ovi'nax",
["npcID"] = 214506,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2919,
},
[459479] = {
["source"] = "Remembered Onyxia",
["event"] = "SPELL_CAST_START",
["npcID"] = 221585,
},
[263943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Runeweaver",
["npcID"] = 131677,
},
[449242] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[114646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Sha",
["npcID"] = 59555,
},
[395694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Shocktrooper",
["npcID"] = 199037,
},
[136099] = {
["source"] = "Bloodhilt Lightsworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 68640,
},
[193941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embershard Scorpion",
["npcID"] = 98406,
},
[409216] = {
["source"] = "Sundered Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198872,
},
[418531] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[37624] = {
["source"] = "Dreadlord Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 41471,
},
[200084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Retainer",
["npcID"] = 98366,
},
[421603] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[279199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Siegemaster",
["npcID"] = 211937,
},
[256849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dinomancer Kish'o",
["npcID"] = 129553,
},
[391915] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cragsworn Stoneshaper",
["npcID"] = 195838,
},
[56934] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26731,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2010,
},
[194966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Etheldrin Ravencrest",
["npcID"] = 98521,
},
[410234] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[449246] = {
["source"] = "General Emmerich",
["event"] = "SPELL_CAST_START",
["npcID"] = 215371,
},
[255824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Juggernaut",
["npcID"] = 122971,
},
[434802] = {
["source"] = "Ixin",
["event"] = "SPELL_CAST_START",
["npcID"] = 217531,
},
[387711] = {
["isChanneled"] = true,
["source"] = "Tyrhold Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192696,
},
[387708] = {
["source"] = "Maiden of Diligence",
["event"] = "SPELL_CAST_START",
["npcID"] = 192718,
},
[257870] = {
["source"] = "Irontide Buccaneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 130011,
},
[451295] = {
["isChanneled"] = true,
["source"] = "Hollows Resident",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219983,
},
[382704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Artificer Zeerak",
["npcID"] = 201553,
},
[58980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Medicine Man",
["npcID"] = 29826,
},
[265511] = {
["source"] = "Spirit Drain Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 135169,
},
[372202] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[427629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fervent Sharpshooter",
["npcID"] = 206694,
},
[388635] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Volatile Spark",
["npcID"] = 194999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[463459] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[439012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venommaster Nezarox",
["npcID"] = 219006,
},
[32637] = {
["source"] = "Doomwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 167749,
},
[453345] = {
["source"] = "Manifested Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
[394795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grizzlerock",
["npcID"] = 193652,
},
[381683] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[37113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[449251] = {
["source"] = "Nerubian Threadmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208244,
},
[66532] = {
["source"] = "Recalled Lord Jaraxxus",
["event"] = "SPELL_CAST_START",
["npcID"] = 221861,
},
[369399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Weaver",
["npcID"] = 186420,
},
[382708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[391793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Tidecore",
["npcID"] = 213699,
},
[425706] = {
["source"] = "Astromancer's Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 208729,
},
[369400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Warder",
["npcID"] = 184132,
},
[75813] = {
["source"] = "Naz'jar Tempest Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 40634,
},
[34170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[371313] = {
["source"] = "Blazing Manifestation",
["event"] = "SPELL_CAST_START",
["npcID"] = 186336,
},
[443111] = {
["source"] = "Glooming Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 216867,
},
[456420] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[458329] = {
["source"] = "Kordac",
["event"] = "SPELL_CAST_START",
["npcID"] = 221084,
},
[427616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Stormrook",
["npcID"] = 207186,
},
[414307] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[421473] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206172,
},
[210150] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[186269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blightshard Shaper",
["npcID"] = 90998,
},
[393830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gragza the Dragon-Breaker",
["npcID"] = 191507,
},
[434779] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["encounterID"] = 2907,
["event"] = "SPELL_CAST_START",
["npcID"] = 216619,
},
[191900] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[393582] = {
["source"] = "Cindershard Igniter",
["event"] = "SPELL_CAST_START",
["npcID"] = 198382,
},
[426734] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[427758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[457447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[384761] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[425561] = {
["source"] = "Pack Mole",
["event"] = "SPELL_CAST_START",
["npcID"] = 211977,
},
[423664] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[457448] = {
["source"] = "Fungal Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 207454,
},
[413427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pendule",
["npcID"] = 206074,
},
[459496] = {
["source"] = "Remembered Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 224157,
},
[427760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Envoy of Winter",
["npcID"] = 209929,
},
[403034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fyrakk",
["npcID"] = 200832,
},
[261438] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["npcID"] = 131527,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2116,
},
[203163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[263961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[457450] = {
["event"] = "SPELL_CAST_START",
["source"] = "Recalled Orinoko Tuskbreaker",
["npcID"] = 221719,
},
[257315] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Irontide Grenadier",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 129758,
},
[387410] = {
["source"] = "Boss",
["event"] = "SPELL_CAST_START",
["npcID"] = 194404,
},
[276068] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[374365] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[374364] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[369409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Custodian",
["npcID"] = 184130,
},
[407125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Knight",
["npcID"] = 208165,
},
[325223] = {
["source"] = "Mistveil Stinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 166304,
},
[452169] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[454213] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[400977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[193951] = {
["source"] = "Barbed Spiderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 97677,
},
[392957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mountain Herdstallion",
["npcID"] = 192640,
},
[426741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[11970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Mechano-Tank",
["npcID"] = 213785,
},
[381521] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Downpour",
["npcID"] = 192462,
},
[396877] = {
["source"] = "Enraged Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 196155,
},
[250258] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["npcID"] = 122965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2085,
},
[84451] = {
["source"] = "Doomguard Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 41470,
},
[451132] = {
["source"] = "Sparking Haulbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 219497,
},
[420419] = {
["source"] = "Tempest Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[256401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow-Blind Weaver",
["npcID"] = 206096,
},
[381516] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[424176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Protector",
["npcID"] = 210637,
},
[377927] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 192690,
},
[418554] = {
["source"] = "Lord Banehollow",
["event"] = "SPELL_CAST_START",
["npcID"] = 204243,
},
[374533] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[405431] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[252687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowblade Stalker",
["npcID"] = 122970,
},
[20801] = {
["source"] = "Imp Minion",
["event"] = "SPELL_CAST_START",
["npcID"] = 12922,
},
[400954] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volgoth The Flamebringer",
["npcID"] = 209129,
},
[87779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Adept",
["npcID"] = 45935,
},
[323347] = {
["source"] = "Zolramus Gatekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 165137,
},
[439031] = {
["encounterName"] = "I'pa",
["source"] = "I'pa",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[396859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Revenant",
["npcID"] = 203742,
},
[445174] = {
["encounterName"] = "The Bloodbound Horror",
["source"] = "Forgotten Harbinger",
["npcID"] = 221945,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2917,
},
[113629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneweaver",
["npcID"] = 59193,
},
[324372] = {
["isChanneled"] = true,
["source"] = "Skeletal Monstrosity",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165197,
},
[440056] = {
["source"] = "Nerubian Threadmancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208244,
},
[273185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldbearer of Zul",
["npcID"] = 127879,
},
[374789] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[377608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Subjugator",
["npcID"] = 195837,
},
[59638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 31216,
},
[369050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Worshipper",
["npcID"] = 186759,
},
[374339] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[377609] = {
["source"] = "Cleff",
["event"] = "SPELL_CAST_START",
["npcID"] = 194514,
},
[456438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Miner",
["npcID"] = 213565,
},
[452142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obstorn",
["npcID"] = 217082,
},
[196515] = {
["source"] = "Binder Ashioi",
["event"] = "SPELL_CAST_START",
["npcID"] = 100250,
},
[420405] = {
["source"] = "Tempest Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 207041,
},
[54878] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["npcID"] = 29573,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1983,
},
[395833] = {
["source"] = "Remembered Stegodon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221876,
},
[438012] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[256405] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["encounterID"] = 2095,
["event"] = "SPELL_CAST_START",
["npcID"] = 126969,
},
[22273] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ethereal Sorcerer",
["npcID"] = 18313,
},
[200099] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ghostly Protector",
["npcID"] = 98368,
},
[274213] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[439037] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ravenous Spawn",
["npcID"] = 216205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[445996] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["npcID"] = 211087,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2837,
},
[453161] = {
["source"] = "Hulking Bloodguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 216338,
},
[438826] = {
["source"] = "Atik",
["event"] = "SPELL_CAST_START",
["npcID"] = 217533,
},
[369423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Crawler",
["npcID"] = 184303,
},
[415492] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[436991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Vanguard",
["npcID"] = 224066,
},
[372495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ensnaring Current",
["npcID"] = 191328,
},
[463609] = {
["encounterName"] = "Nexus-Princess Ky'veza",
["source"] = "Nether Phantom",
["npcID"] = 218429,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2920,
},
[196916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Velandras Ravencrest",
["npcID"] = 98538,
},
[265002] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[421636] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[193505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[374544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Rotsinger",
["npcID"] = 186226,
},
[27634] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Garaxxas",
["npcID"] = 24555,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[197137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[451097] = {
["source"] = "Sureki Militant",
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[201139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathguard Bladelord",
["npcID"] = 98810,
},
[396044] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[202661] = {
["source"] = "Fel Scorcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102583,
},
[406282] = {
["source"] = "Thorak Greenscale",
["event"] = "SPELL_CAST_START",
["npcID"] = 205618,
},
[203685] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99676,
},
[395819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187602,
},
[432673] = {
["source"] = "Kobold Looter",
["event"] = "SPELL_CAST_START",
["npcID"] = 216303,
},
[443138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Scribe",
["npcID"] = 221035,
},
[448257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foreseer Xix'amon",
["npcID"] = 215435,
},
[275012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Worg",
["npcID"] = 152998,
},
[102156] = {
["encounterName"] = "Echo of Baine",
["source"] = "Time-Twisted Seer",
["npcID"] = 54553,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1881,
},
[397386] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[164887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Mender",
["npcID"] = 81820,
},
[319266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Shambler",
["npcID"] = 167033,
},
[385883] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[17140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Consecrator Hennas",
["npcID"] = 211231,
},
[258338] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 126847,
},
[388882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infuser Sariya",
["npcID"] = 190405,
},
[373526] = {
["source"] = "Dizzying Flutterer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211020,
},
[256922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Maiden",
["npcID"] = 131821,
},
[400144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[202728] = {
["source"] = "Dreadlord Mendacius",
["event"] = "SPELL_CAST_START",
["npcID"] = 99649,
},
[324387] = {
["source"] = "Skeletal Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 165197,
},
[431637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadowalker",
["npcID"] = 213895,
},
[449285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shyalude",
["npcID"] = 223834,
},
[409359] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2682,
},
[392733] = {
["source"] = "Dewdrop Tortoise",
["event"] = "SPELL_CAST_START",
["npcID"] = 211145,
},
[411407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Waveshaper",
["npcID"] = 205363,
},
[445191] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Charger",
["npcID"] = 213577,
},
[438025] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Benk Buzzbee",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[387613] = {
["source"] = "Ukhel Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 195842,
},
[197546] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[441097] = {
["event"] = "SPELL_CAST_START",
["source"] = "Regurgitating Monstrosity",
["npcID"] = 220138,
},
[266036] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistle Acolyte",
["npcID"] = 135474,
},
[449034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[395029] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Melidrussa Chillworn",
["npcID"] = 195119,
},
[391958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cloying Gale",
["npcID"] = 198126,
},
[428374] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[381721] = {
["source"] = "Titan Defense Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 193244,
},
[272180] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[40317] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[398471] = {
["source"] = "Nimbulatus, Storm's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199667,
},
[260508] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["npcID"] = 131667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2114,
},
[403593] = {
["source"] = "Magma Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200801,
},
[449290] = {
["source"] = "Shyalude",
["event"] = "SPELL_CAST_START",
["npcID"] = 223834,
},
[114658] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[426768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[444172] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xur'khun the Defiled",
["npcID"] = 221845,
},
[265016] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[430013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Stormrook",
["npcID"] = 207186,
},
[324394] = {
["source"] = "Skeletal Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 165197,
},
[429172] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["npcID"] = 40788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[76634] = {
["source"] = "Tainted Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 40925,
},
[192706] = {
["source"] = "Ritualist Lesha",
["event"] = "SPELL_CAST_START",
["npcID"] = 100248,
},
[33919] = {
["encounterName"] = "Tavarok",
["source"] = "Tavarok",
["npcID"] = 18343,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1901,
},
[448269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Foreseer Xix'amon",
["npcID"] = 215435,
},
[384823] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[338456] = {
["source"] = "Kyrian Stitchwerk",
["event"] = "SPELL_CAST_START",
["npcID"] = 172981,
},
[426771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[395035] = {
["source"] = "Soulharvester Galtmaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[371489] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Juggernaut",
["npcID"] = 188067,
},
[409093] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[431612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Venomspitter",
["npcID"] = 219661,
},
[455158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmother",
["npcID"] = 220286,
},
[449295] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[376186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Lahar",
["npcID"] = 189235,
},
[44504] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Wretched Husk",
["npcID"] = 24690,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1897,
},
[51963] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Gargoyle",
["npcID"] = 27829,
},
[385351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Arcanogolem",
["npcID"] = 201554,
},
[226296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[455153] = {
["source"] = "Abyssal Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 216031,
},
[374563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazzling Dragonfly",
["npcID"] = 190362,
},
[453392] = {
["source"] = "Sureki Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 225408,
},
[427510] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["npcID"] = 83894,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1757,
},
[400430] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[168082] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[449298] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[388897] = {
["source"] = "Root Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 210106,
},
[372225] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[444180] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xur'khun the Defiled",
["npcID"] = 221845,
},
[455148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmother",
["npcID"] = 220286,
},
[392698] = {
["source"] = "Remembered Quilboar",
["event"] = "SPELL_CAST_START",
["npcID"] = 221743,
},
[207278] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[431896] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Thirsty Patron",
["npcID"] = 215819,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[445205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drained Cinderbee",
["npcID"] = 224080,
},
[405279] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[455443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxx",
["npcID"] = 226267,
},
[374567] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[375591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Sapling",
["npcID"] = 191313,
},
[446230] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["npcID"] = 214348,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2895,
},
[400883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Keeneye",
["npcID"] = 208660,
},
[456468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[445207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Howler",
["npcID"] = 221979,
},
[421355] = {
["source"] = "The Anvil",
["event"] = "SPELL_CAST_START",
["npcID"] = 206478,
},
[422685] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[60876] = {
["source"] = "Recalled Ghoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 221434,
},
[119524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu Archer",
["npcID"] = 61345,
},
[408605] = {
["source"] = "Sundered Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198869,
},
[418591] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[424419] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[437019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kaheti Vanguard",
["npcID"] = 218316,
},
[413473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Deviation",
["npcID"] = 206063,
},
[443162] = {
["source"] = "Devouring Shade",
["event"] = "SPELL_CAST_START",
["npcID"] = 217870,
},
[395756] = {
["source"] = "Dragonbane Cauldron Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186606,
},
[400165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[316927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Barrow Spider",
["npcID"] = 160394,
},
[426783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Seer",
["npcID"] = 212775,
},
[375237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[441116] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Regurgitating Monstrosity",
["npcID"] = 220138,
},
[421665] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["encounterID"] = 2829,
["event"] = "SPELL_CAST_START",
["npcID"] = 210149,
},
[271174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pallid Gorger",
["npcID"] = 137830,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[457497] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[432127] = {
["source"] = "Kix'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 224710,
},
[427382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[280389] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[427484] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fanatical Conjuror",
["npcID"] = 206698,
},
[80195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonecore Bruiser",
["npcID"] = 42692,
},
[447261] = {
["encounterName"] = "General Umbriss",
["event"] = "SPELL_CAST_START",
["source"] = "General Umbriss",
["npcID"] = 39625,
},
[421340] = {
["source"] = "The Anvil",
["event"] = "SPELL_CAST_START",
["npcID"] = 206478,
},
[441119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
[118105] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[426787] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[408975] = {
["source"] = "Sarek Cinderbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 205619,
},
[59259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hardened Steel Berserker",
["npcID"] = 28579,
},
[319294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torgok",
["npcID"] = 162817,
},
[201141] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wrathguard Bladelord",
["npcID"] = 98810,
},
[413147] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[428202] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[428293] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[231854] = {
["encounterName"] = "Harjatan",
["source"] = "Harjatan",
["encounterID"] = 2036,
["event"] = "SPELL_CAST_START",
["npcID"] = 116407,
},
[411433] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frigid Binder",
["npcID"] = 205384,
},
[420647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashendir Hartwood",
["npcID"] = 211258,
},
[200630] = {
["source"] = "Mindshattered Screecher",
["event"] = "SPELL_CAST_START",
["npcID"] = 95769,
},
[40064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Technician",
["npcID"] = 17414,
},
[419624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whispering Behemoth",
["npcID"] = 207171,
},
[396078] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Destroyer",
["npcID"] = 193288,
},
[421672] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2737,
},
[414506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing-Sun Crow",
["npcID"] = 210298,
},
[382233] = {
["source"] = "Batak",
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[384296] = {
["source"] = "Remembered Stegodon",
["event"] = "SPELL_CAST_START",
["npcID"] = 221876,
},
[384933] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primalist Flowbreaker",
["npcID"] = 188067,
},
[193803] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tarspitter Grub",
["npcID"] = 92538,
},
[386866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorging Stagbeetle",
["npcID"] = 195709,
},
[281420] = {
["source"] = "Bilge Rat Brinescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 129600,
},
[274254] = {
["source"] = "Fogsail Pirate",
["event"] = "SPELL_CAST_START",
["npcID"] = 138135,
},
[432142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian War-Weaver",
["npcID"] = 222731,
},
[411437] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[411910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[419870] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[451364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Brute",
["npcID"] = 224152,
},
[446255] = {
["event"] = "SPELL_CAST_START",
["source"] = "Congealing Mass",
["npcID"] = 222459,
},
[198073] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1834,
},
[126973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Arcanist",
["npcID"] = 64063,
},
[369465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Weaver",
["npcID"] = 186420,
},
[411439] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[449318] = {
["source"] = "Peculiar Nerubian",
["event"] = "SPELL_CAST_START",
["npcID"] = 220485,
},
[413487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Fusion",
["npcID"] = 206068,
},
[447271] = {
["source"] = "Hulking Warshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 221103,
},
[449986] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[396084] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 203747,
},
[454438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Commander",
["npcID"] = 128969,
},
[394037] = {
["source"] = "Crystalline Walker",
["event"] = "SPELL_CAST_START",
["npcID"] = 201063,
},
[374586] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2612,
},
[424750] = {
["source"] = "Fungal Rotcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 207459,
},
[397109] = {
["source"] = "Air Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 203743,
},
[377658] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2607,
},
[419632] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pendule",
["npcID"] = 208945,
},
[449321] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[454440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Pillager",
["npcID"] = 135241,
},
[369813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Destroyer",
["npcID"] = 193288,
},
[444324] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[196028] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[431549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Venomspitter",
["npcID"] = 219661,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[264024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heartsbane Soulcharmer",
["npcID"] = 131812,
},
[371956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Terrasentry",
["npcID"] = 188011,
},
[397112] = {
["source"] = "Ancient Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189798,
},
[377661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparring Vorquin",
["npcID"] = 195048,
},
[447909] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Machinist Dunstan",
["npcID"] = 217353,
},
[420659] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["encounterID"] = 2787,
["event"] = "SPELL_CAST_START",
["npcID"] = 208745,
},
[446253] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Congealed Mass",
["npcID"] = 222461,
},
[125160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Mage",
["npcID"] = 214167,
},
[319956] = {
["source"] = "Rot Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 167055,
},
[161222] = {
["source"] = "Remembered Nightsaber",
["event"] = "SPELL_CAST_START",
["npcID"] = 221947,
},
[440622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Shadowcaster",
["npcID"] = 213405,
},
[439692] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 216648,
},
[456851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spore-infused Shalewing",
["npcID"] = 221217,
},
[130791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrosh'ar Grunt",
["npcID"] = 66398,
},
[59389] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["npcID"] = 23953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2026,
},
[47425] = {
["source"] = "Reanimated Frost Wyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 26841,
},
[396520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stoneclaw Terror",
["npcID"] = 194119,
},
[406333] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[241290] = {
["source"] = "Tidescale Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 121011,
},
[128232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[423734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomfiend",
["npcID"] = 210910,
},
[391998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Magma",
["npcID"] = 191917,
},
[401212] = {
["source"] = "Trudging Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201066,
},
[320336] = {
["source"] = "Brittlebone Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 163126,
},
[435148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Footman",
["npcID"] = 212835,
},
[391999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Scavenger",
["npcID"] = 185445,
},
[236518] = {
["encounterName"] = "Sisters of the Moon",
["source"] = "Priestess Lunaspyre",
["encounterID"] = 2050,
["event"] = "SPELL_CAST_START",
["npcID"] = 118518,
},
[162248] = {
["source"] = "Remembered Nightsaber",
["event"] = "SPELL_CAST_START",
["npcID"] = 221947,
},
[425392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewaker Infernoguard",
["npcID"] = 210295,
},
[376934] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[401214] = {
["source"] = "Elder Honeypelt",
["event"] = "SPELL_CAST_START",
["npcID"] = 202451,
},
[451378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Overseer",
["npcID"] = 224221,
},
[382787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disease Slasher",
["npcID"] = 187315,
},
[445236] = {
["source"] = "Wavecutter Eel",
["event"] = "SPELL_CAST_START",
["npcID"] = 220786,
},
[439637] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Echoing Shade",
["encounterID"] = 2908,
["event"] = "SPELL_CAST_START",
["npcID"] = 219675,
},
[451379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Overseer",
["npcID"] = 224221,
},
[207806] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[257458] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["encounterID"] = 2096,
["event"] = "SPELL_CAST_START",
["npcID"] = 126983,
},
[446261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Shadeling",
["npcID"] = 224788,
},
[381765] = {
["source"] = "Ice Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 203752,
},
[390979] = {
["source"] = "Titan Defense Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 193244,
},
[450980] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2921,
},
[76790] = {
["source"] = "Naz'jar Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 39616,
},
[435622] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[455869] = {
["source"] = "First Blade Grimskarn",
["event"] = "SPELL_CAST_START",
["npcID"] = 221970,
},
[257459] = {
["encounterName"] = "Chopper Redhook",
["event"] = "SPELL_CAST_START",
["source"] = "Chopper Redhook",
["npcID"] = 128650,
},
[372553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenger Matriarch",
["npcID"] = 192812,
},
[422717] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phebis of the Burning Sea",
["npcID"] = 210306,
},
[382791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Lavamancer",
["npcID"] = 193944,
},
[51584] = {
["source"] = "Ice Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 26283,
},
[169929] = {
["encounterName"] = "Yalnu",
["source"] = "Flourishing Ancient",
["npcID"] = 84400,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[111854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
},
[390982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Overseer",
["npcID"] = 192699,
},
[420671] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[200642] = {
["source"] = "Dreadsoul Ruiner",
["event"] = "SPELL_CAST_START",
["npcID"] = 95771,
},
[435004] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Chef Chewie",
["npcID"] = 214697,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2900,
},
[113134] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 3977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1425,
},
[117485] = {
["encounterName"] = "Will of the Emperor",
["source"] = "Emperor's Courage",
["npcID"] = 60398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1407,
},
[405316] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[381770] = {
["encounterName"] = "Treemouth",
["source"] = "Decaying Slime",
["npcID"] = 192481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[390984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Rampager",
["npcID"] = 186727,
},
[191941] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["event"] = "SPELL_CAST_START",
["npcID"] = 95885,
},
[372557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenger Matriarch",
["npcID"] = 192525,
},
[30633] = {
["encounterName"] = "Warbringer O'mrogg",
["source"] = "Warbringer O'mrogg",
["encounterID"] = 1937,
["event"] = "SPELL_CAST_START",
["npcID"] = 16809,
},
[30851] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[449339] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["npcID"] = 204188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2878,
},
[446268] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Congealed Mass",
["npcID"] = 222461,
},
[451387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Lavabender",
["npcID"] = 224249,
},
[79351] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["npcID"] = 42333,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1057,
},
[375630] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[450364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Weaver",
["npcID"] = 222881,
},
[390115] = {
["source"] = "Sarana",
["event"] = "SPELL_CAST_START",
["npcID"] = 190161,
},
[390987] = {
["source"] = "Emberspark",
["event"] = "SPELL_CAST_START",
["npcID"] = 208664,
},
[9573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incendosaur",
["npcID"] = 9318,
},
[412063] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Epoch Ripper",
["npcID"] = 205435,
},
[406344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Firecaller",
["npcID"] = 200454,
},
[390988] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[46029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Blood Knight",
["npcID"] = 24684,
},
[446271] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Congealed Mass",
["npcID"] = 222461,
},
[414535] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[325469] = {
["source"] = "Unknown",
["event"] = "SPELL_CAST_START",
["npcID"] = 166928,
},
[428868] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[372562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hyena Tender",
["npcID"] = 192506,
},
[451391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 39392,
},
[81440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Millhouse Manastorm",
["npcID"] = 43391,
},
[461842] = {
["encounterName"] = "The Coaglamation",
["source"] = "The Coaglamation",
["encounterID"] = 2905,
["event"] = "SPELL_CAST_START",
["npcID"] = 216320,
},
[444415] = {
["source"] = "Shadegrumble Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 220059,
},
[324447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobyss Spearfisher",
["npcID"] = 214338,
},
[113136] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["npcID"] = 59080,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1430,
},
[432965] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[388944] = {
["source"] = "Primalist Flowbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 203748,
},
[442525] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[382802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Rothexer",
["npcID"] = 194241,
},
[445251] = {
["source"] = "Bloodmaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 219264,
},
[372565] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 188067,
},
[104318] = {
["npcID"] = 55659,
},
[456513] = {
["source"] = "Gong'tze the Riverhewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 221974,
},
[432967] = {
["source"] = "Sentry Stagshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 216340,
},
[434137] = {
["source"] = "Royal Venomshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 220730,
},
[451395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 39392,
},
[440134] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Benk Buzzbee",
["npcID"] = 218002,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2931,
},
[191946] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[446477] = {
["source"] = "Deepwater Sludger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216515,
},
[76026] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[264050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistle Acolyte",
["npcID"] = 135474,
},
[258777] = {
["source"] = "Irontide Oarsman",
["event"] = "SPELL_CAST_START",
["npcID"] = 127111,
},
[372568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 188067,
},
[235968] = {
["encounterName"] = "The Desolate Host",
["source"] = "Ghastly Bonewarden",
["encounterID"] = 2054,
["event"] = "SPELL_CAST_START",
["npcID"] = 118728,
},
[207815] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[102132] = {
["encounterName"] = "Echo of Baine",
["source"] = "Time-Twisted Breaker",
["npcID"] = 54552,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1881,
},
[126958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Warden",
["npcID"] = 64061,
},
[320358] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[427852] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[51586] = {
["source"] = "Dragonflayer Spiritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 28410,
},
[236115] = {
["encounterName"] = "Sisters of the Moon",
["source"] = "Captain Yathae Moonstrike",
["encounterID"] = 2050,
["event"] = "SPELL_CAST_START",
["npcID"] = 118374,
},
[456748] = {
["source"] = "Crimson Deathweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222692,
},
[387465] = {
["isChanneled"] = true,
["source"] = "Altered Wymling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190776,
},
[212423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Skulker",
["npcID"] = 99541,
},
[429110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[225732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Velandras Ravencrest",
["npcID"] = 98538,
},
[450784] = {
["source"] = "Xeph'itik",
["event"] = "SPELL_CAST_START",
["npcID"] = 219984,
},
[255421] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["encounterID"] = 2086,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122963,
},
[374885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Astral Attendant",
["npcID"] = 189555,
},
[449584] = {
["source"] = "Enduring Gutterface",
["event"] = "SPELL_CAST_START",
["npcID"] = 216045,
},
[240577] = {
["source"] = "Tidescale Combatant",
["event"] = "SPELL_CAST_START",
["npcID"] = 120473,
},
[428879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[446430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Kelp",
["npcID"] = 215702,
},
[441343] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzied Leaper",
["npcID"] = 222214,
},
[442589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Honey Harvester",
["npcID"] = 220946,
},
[434407] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[370054] = {
["source"] = "Magmammoth Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194912,
},
[406358] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200912,
},
[450899] = {
["source"] = "Cinderbee Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 222976,
},
[371551] = {
["source"] = "Rebel Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195062,
},
[15620] = {
["source"] = "Bilgewater Grenadier",
["event"] = "SPELL_CAST_START",
["npcID"] = 67460,
},
[429427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[456523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clump O' Wax",
["npcID"] = 226809,
},
[34763] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["npcID"] = 17975,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1926,
},
[266106] = {
["source"] = "Feral Bloodswarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 133835,
},
[456664] = {
["source"] = "Worldcarver Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 221964,
},
[256959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Honor Guard",
["npcID"] = 127757,
},
[369823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Basilisk",
["npcID"] = 184023,
},
[433519] = {
["encounterName"] = "Sikran, Captain of the Sureki",
["source"] = "Sikran",
["npcID"] = 214503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2898,
},
[444683] = {
["source"] = "Moss-Draped Ramolith",
["event"] = "SPELL_CAST_START",
["npcID"] = 214945,
},
[448859] = {
["source"] = "Enraged Drunkard",
["event"] = "SPELL_CAST_START",
["npcID"] = 218655,
},
[265084] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[421817] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
[448599] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hevo'myk",
["npcID"] = 211591,
},
[455676] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathly Presence",
["npcID"] = 224820,
},
[412505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyr's Vanguard",
["npcID"] = 205151,
},
[79868] = {
["source"] = "Alya",
["event"] = "SPELL_CAST_START",
["npcID"] = 82002,
},
[451793] = {
["source"] = "Al'haggro",
["event"] = "SPELL_CAST_START",
["npcID"] = 216560,
},
[433053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Old Grim",
["npcID"] = 213403,
},
[52611] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["encounterID"] = 2024,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[434005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilnean Alchemist",
["npcID"] = 213995,
},
[374135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Craggy Stag",
["npcID"] = 191541,
},
[427863] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[375652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[460057] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queensguard An'Jak Shabtir",
["npcID"] = 219665,
},
[404744] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[456656] = {
["source"] = "Worldcarver Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 221964,
},
[265088] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["encounterID"] = 2094,
["event"] = "SPELL_CAST_START",
["npcID"] = 133219,
},
[409437] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[385390] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[34761] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["npcID"] = 17975,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1926,
},
[428889] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[401248] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[451412] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
},
[448341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Thwacker",
["npcID"] = 203877,
},
[324986] = {
["source"] = "Mistveil Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 166301,
},
[214989] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[211406] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 104295,
},
[456612] = {
["source"] = "Zeeben",
["event"] = "SPELL_CAST_START",
["npcID"] = 221975,
},
[383846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swelling Fire Elemental",
["npcID"] = 188667,
},
[257732] = {
["source"] = "Irontide Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129602,
},
[413024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[435136] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[462826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Explosive Bomberbot",
["npcID"] = 229706,
},
[455860] = {
["event"] = "SPELL_CAST_START",
["source"] = "S'toth the Insatiable",
["npcID"] = 222629,
},
[426845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[427869] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[449368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanderer Ida",
["npcID"] = 220953,
},
[458582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Darkblade",
["npcID"] = 222274,
},
[76031] = {
["encounterName"] = "Beauty",
["source"] = "Beauty",
["encounterID"] = 1037,
["event"] = "SPELL_CAST_START",
["npcID"] = 39700,
},
[423775] = {
["source"] = "Elder Boughweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 211383,
},
[428894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[450393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obstorn",
["npcID"] = 217082,
},
[398681] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frigid Binder",
["npcID"] = 200623,
},
[57091] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["npcID"] = 26723,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2011,
},
[439365] = {
["encounterName"] = "I'pa",
["source"] = "I'pa",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[69633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Warden",
["npcID"] = 36666,
},
[418658] = {
["source"] = "Twinkle",
["event"] = "SPELL_CAST_START",
["npcID"] = 204964,
},
[30853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[427341] = {
["source"] = "Rydra Scalegorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 209048,
},
[446300] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["npcID"] = 214348,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2895,
},
[373614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[456835] = {
["source"] = "Hungerer of the Deeps",
["event"] = "SPELL_CAST_START",
["npcID"] = 221199,
},
[204243] = {
["isChanneled"] = true,
["source"] = "Nightmare Dweller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101991,
},
[88061] = {
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_START",
["npcID"] = 45915,
},
[319843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Shambler",
["npcID"] = 167033,
},
[419684] = {
["source"] = "Incendiary Runebear",
["event"] = "SPELL_CAST_START",
["npcID"] = 209882,
},
[196296] = {
["encounterName"] = "Serpentrix",
["source"] = "Stormwake Hydra",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[443649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Scribe",
["npcID"] = 221035,
},
[193597] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[455838] = {
["event"] = "SPELL_CAST_START",
["source"] = "S'toth the Insatiable",
["npcID"] = 222629,
},
[34697] = {
["encounterName"] = "Laj",
["source"] = "Laj",
["npcID"] = 17980,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1927,
},
[9734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 210969,
},
[443232] = {
["source"] = "Nightfall Lookout",
["event"] = "SPELL_CAST_START",
["npcID"] = 217485,
},
[448351] = {
["encounterName"] = "Anub'ikkaj",
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[387950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
[413544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[260551] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["npcID"] = 131667,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2114,
},
[440162] = {
["source"] = "Scarlet Stinkcap",
["event"] = "SPELL_CAST_START",
["npcID"] = 212579,
},
[264525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Survivalist",
["npcID"] = 131850,
},
[442210] = {
["encounterName"] = "Anub'zekt",
["source"] = "Bloodstained Webmage",
["encounterID"] = 2906,
["event"] = "SPELL_CAST_START",
["npcID"] = 220599,
},
[441452] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[431303] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Shadowmage",
["npcID"] = 223994,
},
[8873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scorchscale Drake",
["npcID"] = 23687,
},
[462686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[20296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Technician",
["npcID"] = 211884,
},
[405366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[437093] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[15530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yazzai",
["npcID"] = 24561,
},
[192985] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["encounterID"] = 1814,
["event"] = "SPELL_CAST_START",
["npcID"] = 96028,
},
[272571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Tempest",
["npcID"] = 129367,
},
[438586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venommaster Nezarox",
["npcID"] = 219006,
},
[321780] = {
["isChanneled"] = true,
["source"] = "Zolramus Necromancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163618,
},
[192621] = {
["encounterName"] = "Ash'Golm",
["source"] = "Ash'Golm",
["encounterID"] = 1816,
["event"] = "SPELL_CAST_START",
["npcID"] = 95886,
},
[382836] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[272542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Sniper",
["npcID"] = 128967,
},
[327664] = {
["encounterName"] = "Surgeon Stitchflesh",
["source"] = "Surgeon Stitchflesh",
["encounterID"] = 2389,
["event"] = "SPELL_CAST_START",
["npcID"] = 162689,
},
[451428] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xeph'itik",
["npcID"] = 219984,
},
[256627] = {
["source"] = "Scrimshaw Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 129374,
},
[367481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[462690] = {
["source"] = "Darkened Husk",
["event"] = "SPELL_CAST_START",
["npcID"] = 220164,
},
[89415] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Ghost Iron Dragonling",
["npcID"] = 57783,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[236542] = {
["encounterName"] = "The Desolate Host",
["source"] = "The Desolate Host",
["encounterID"] = 2054,
["event"] = "SPELL_CAST_START",
["npcID"] = 119072,
},
[433002] = {
["source"] = "Bloodstained Assistant",
["event"] = "SPELL_CAST_START",
["npcID"] = 216333,
},
[409456] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[426860] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[441381] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[428908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meredy Huntswell",
["npcID"] = 209059,
},
[450407] = {
["source"] = "Orta",
["event"] = "SPELL_CAST_START",
["npcID"] = 221067,
},
[426905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Ghur'sha",
["npcID"] = 212778,
},
[427885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[200154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Understone Demolisher",
["npcID"] = 102253,
},
[233426] = {
["encounterName"] = "Demonic Inquisition",
["source"] = "Atrigan",
["encounterID"] = 2048,
["event"] = "SPELL_CAST_START",
["npcID"] = 116689,
},
[385912] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wild Crystalspine",
["npcID"] = 192591,
},
[444687] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["npcID"] = 214504,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2918,
},
[449385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanderer Ida",
["npcID"] = 220953,
},
[56837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Hunter Ascendant",
["npcID"] = 26727,
},
[455975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampaging Blight",
["npcID"] = 220273,
},
[458634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Flamecoil Serpent",
["npcID"] = 225895,
},
[383866] = {
["source"] = "Incarnated Wick",
["event"] = "SPELL_CAST_START",
["npcID"] = 205407,
},
[200261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Torn Champion",
["npcID"] = 98243,
},
[436200] = {
["encounterName"] = "Ulgrax the Devourer",
["source"] = "Ulgrax the Devourer",
["npcID"] = 215657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2902,
},
[320696] = {
["source"] = "Stitched Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 163121,
},
[38209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 210969,
},
[15493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remembered Crusader",
["npcID"] = 213564,
},
[195037] = {
["source"] = "Hatecoil Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 95861,
},
[441384] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[448515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elaena Emberlanz",
["npcID"] = 211290,
},
[272581] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Tempest",
["npcID"] = 129367,
},
[385916] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[399225] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glakis, Winter's Wrath",
["npcID"] = 199502,
},
[371584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bottled Water Elemental",
["npcID"] = 192054,
},
[440184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chitin Knight",
["npcID"] = 219725,
},
[374066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Geomancer",
["npcID"] = 190345,
},
[34984] = {
["source"] = "Fen Ray",
["event"] = "SPELL_CAST_START",
["npcID"] = 17731,
},
[390256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proscenium Punk",
["npcID"] = 215791,
},
[114683] = {
["source"] = "Bloodhilt Battlemage",
["event"] = "SPELL_CAST_START",
["npcID"] = 68639,
},
[194064] = {
["isChanneled"] = true,
["source"] = "Foul Mother",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98533,
},
[369818] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Hulking Berserker",
["npcID"] = 184020,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[428916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[255952] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["encounterID"] = 2093,
["event"] = "SPELL_CAST_START",
["npcID"] = 126832,
},
[426869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Enforcer",
["npcID"] = 212548,
},
[212564] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Tormenting Orb",
["encounterID"] = 1850,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 107114,
},
[383872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swelling Fire Elemental",
["npcID"] = 188667,
},
[35507] = {
["isChanneled"] = true,
["source"] = "Thorn Flayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19920,
},
[59166] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormforged Tactician",
["npcID"] = 28581,
},
[427894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[461904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orb of Ascendance",
["npcID"] = 229296,
},
[413562] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Lurking Tempest",
["npcID"] = 204337,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[422776] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[196157] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Technician",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99645,
},
[396159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Burster",
["npcID"] = 186836,
},
[35124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[377732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Custodian",
["npcID"] = 184319,
},
[403326] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[424825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sylvanesh the Ascended",
["npcID"] = 207107,
},
[421754] = {
["isChanneled"] = true,
["source"] = "Moltenbinder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206477,
},
[128249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evoker",
["npcID"] = 58756,
},
[427897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
[55077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savage Worg",
["npcID"] = 29735,
},
[405375] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["encounterID"] = 2693,
["event"] = "SPELL_CAST_START",
["npcID"] = 200913,
},
[418684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Destroyer",
["npcID"] = 208208,
},
[453897] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[375687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Totem",
["npcID"] = 190426,
},
[385263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coastal Eel",
["npcID"] = 198782,
},
[68872] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2006,
},
[69128] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Soulguard Animator",
["npcID"] = 36516,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[34356] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sunseeker Geomancer",
["npcID"] = 18420,
},
[59147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hardened Steel Skycaller",
["npcID"] = 28580,
},
[440185] = {
["source"] = "Rustul Titancap",
["event"] = "SPELL_CAST_START",
["npcID"] = 213115,
},
[59183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Firestorm",
["npcID"] = 28584,
},
[409473] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[260741] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["npcID"] = 131825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2113,
},
[438343] = {
["encounterName"] = "The Silken Court",
["source"] = "Skeinspinner Takazj",
["npcID"] = 217491,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2921,
},
[367500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bracken Warscourge",
["npcID"] = 185529,
},
[450424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxy Blob",
["npcID"] = 229818,
},
[463104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brood Infuser",
["npcID"] = 222167,
},
[52770] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["npcID"] = 28546,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1984,
},
[428926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[59019] = {
["encounterName"] = "Slad'ran",
["source"] = "Spitting Cobra",
["npcID"] = 29774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1978,
},
[381834] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["npcID"] = 186122,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2570,
},
[440188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chitin Knight",
["npcID"] = 219725,
},
[420737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame-Warped Sister",
["npcID"] = 207016,
},
[449690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen's Guard Ge'zah",
["npcID"] = 223839,
},
[59182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Firestorm",
["npcID"] = 28584,
},
[432198] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[367503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decay Speaker",
["npcID"] = 186191,
},
[68939] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2007,
},
[59152] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormforged Construct",
["npcID"] = 28835,
},
[75272] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[441214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taste Tester",
["npcID"] = 220060,
},
[450428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gar'loc",
["npcID"] = 219268,
},
[209378] = {
["source"] = "Imacu'tya",
["event"] = "SPELL_CAST_START",
["npcID"] = 104275,
},
[423811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Chardryn",
["npcID"] = 210912,
},
[432229] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[437417] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[195046] = {
["source"] = "Hatecoil Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 95861,
},
[268202] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["npcID"] = 135552,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[424836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sylvanesh the Ascended",
["npcID"] = 207107,
},
[443336] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[445422] = {
["encounterName"] = "Queen Ansurek",
["source"] = "Queen Ansurek",
["npcID"] = 218370,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2922,
},
[444288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web Acolyte",
["npcID"] = 218320,
},
[334747] = {
["source"] = "Corpse Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 166302,
},
[374823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Squallbringer Cyraz",
["npcID"] = 190370,
},
[449455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghastly Voidsoul",
["npcID"] = 212453,
},
[448384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekeeper Graz",
["npcID"] = 219279,
},
[334748] = {
["source"] = "Corpse Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 166302,
},
[427011] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["encounterID"] = 2788,
["event"] = "SPELL_CAST_START",
["npcID"] = 208747,
},
[447395] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[440195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanton Shadow",
["npcID"] = 225338,
},
[404364] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 202789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[376723] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[199143] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[69131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Animator",
["npcID"] = 36516,
},
[443507] = {
["source"] = "Hulking Warshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 221103,
},
},
}
end